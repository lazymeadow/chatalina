create schema if not exists emoji;

create table if not exists emoji.definitions
(
    emoji      text                                  not null,
    hex        text                                  not null,
    annotation text                                  not null,
    tags       text[]    default ARRAY []::text[]    not null,
    base_emoji text,
    skintones  integer[] default ARRAY []::integer[] not null,
    constraint definitions_pk
        unique (emoji)
);

create table if not exists emoji.skintones
(
    id    integer generated always as identity,
    emoji text not null,
    hex   text not null
);

create table if not exists emoji.shortcodes
(
    code  text not null,
    emoji text not null,
    constraint shortcodes_pk
        unique (code)
);

create table if not exists emoji.emoticons
(
    ascii text not null,
    emoji text not null,
    constraint emoticons_pk
        unique (ascii)
);


-- insert EVERY emoji, shortcode, emoticon...
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😀','1F600','grinning face',default,'{"happy","grin","face","smile"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"happy","grin","face","smile"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('grinning_face', '😀') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('grinning', '😀') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':D', '😀') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-D', '😀') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-D', '😀') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=D', '😀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😃','1F603','grinning face with big eyes',default,'{"face","mouth","smile","teeth","eyes","open"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","mouth","smile","teeth","eyes","open"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('grinning_face_with_big_eyes', '😃') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('smiley', '😃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😄','1F604','grinning face with smiling eyes',default,'{"face","mouth","smile","happy","teeth","open","eye"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","mouth","smile","happy","teeth","open","eye"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('grinning_face_with_closed_eyes', '😄') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('smile', '😄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😁','1F601','beaming face with smiling eyes',default,'{"face","mouth","smile","happy","grin","teeth","eye"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","mouth","smile","happy","grin","teeth","eye"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('beaming_face', '😁') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('grin', '😁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😆','1F606','grinning squinting face',default,'{"face","mouth","smile","laugh","satisfied"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","mouth","smile","laugh","satisfied"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lol', '😆') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('squinting_face', '😆') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('laughing', '😆') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('satisfied', '😆') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('><', '😆') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('X-D', '😆') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('XD', '😆') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😅','1F605','grinning face with sweat',default,'{"face","cold","smile","laugh","sweat","open"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","cold","smile","laugh","sweat","open"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('grinning_face_with_sweat', '😅') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sweat_smile', '😅') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (''':-D', '😅') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('''=-D', '😅') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (''':D', '😅') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (''':)', '😅') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('''=-)', '😅') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('''=)', '😅') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('''=D', '😅') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (''':-)', '😅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤣','1F923','rolling on the floor laughing',default,'{"face","floor","rotfl","tears","laugh","rolling","rofl"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","floor","rotfl","tears","laugh","rolling","rofl"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rofl', '🤣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😂','1F602','face with tears of joy',default,'{"laugh","joy","face","tear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"laugh","joy","face","tear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lmao', '😂') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('tears_of_joy', '😂') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('joy', '😂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('X"D', '😂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('="D', '😂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':"-)', '😂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':"D', '😂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('="-)', '😂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('="-D', '😂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=")', '😂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('X"-D', '😂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':"-D', '😂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':")', '😂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙂','1F642','slightly smiling face',default,'{"face","satisfied","smile"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","satisfied","smile"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('slightly_smiling_face', '🙂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=)', '🙂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-]', '🙂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-)', '🙂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-]', '🙂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':]', '🙂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-)', '🙂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=]', '🙂') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':)', '🙂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙃','1F643','upside-down face',default,'{"turn","upside-down","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"turn","upside-down","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('upside_down_face', '🙃') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('(:', '🙃') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('[=', '🙃') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('(-:', '🙃') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('[-=', '🙃') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('(=', '🙃') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('(-=', '🙃') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('[:', '🙃') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('[-:', '🙃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫠','1FAE0','melting face',default,'{"disappear","liquid","melt","dissolve"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"disappear","liquid","melt","dissolve"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('melt', '🫠') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('melting_face', '🫠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😉','1F609','winking face',default,'{"wink","eye","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wink","eye","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('winking_face', '😉') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('wink', '😉') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('*-D', '😉') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (';]', '😉') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('*-)', '😉') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('*)', '😉') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('*]', '😉') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (';-]', '😉') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('*D', '😉') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('*-]', '😉') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (';D', '😉') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (';-)', '😉') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (';-D', '😉') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (';)', '😉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😊','1F60A','smiling face with smiling eyes',default,'{"face","smile","satisfied","blush","eye"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","smile","satisfied","blush","eye"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('blush', '😊') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('smiling_face_with_closed_eyes', '😊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😇','1F607','smiling face with halo',default,'{"face","halo","angel","fantasy","innocent"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","halo","angel","fantasy","innocent"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('innocent', '😇') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('halo', '😇') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('0=)', '😇') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('O=-)', '😇') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('0:-)', '😇') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('O=)', '😇') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('O:-)', '😇') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('0=-)', '😇') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('0:)', '😇') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('O:)', '😇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥰','1F970','smiling face with hearts',default,'{"in love","hearts","crush","adore"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"in love","hearts","crush","adore"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('smiling_face_with_3_hearts', '🥰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😍','1F60D','smiling face with heart-eyes',default,'{"face","love","smile","happy","hearts","eye"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","love","smile","happy","hearts","eye"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('smiling_face_with_heart_eyes', '😍') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('heart_eyes', '😍') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤩','1F929','star-struck',default,'{"face","grinning","star","eyes","surprised"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","grinning","star","eyes","surprised"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('star_struck', '🤩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😘','1F618','face blowing a kiss',default,'{"happy","love","face","kiss"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"happy","love","face","kiss"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('blowing_a_kiss', '😘') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kissing_heart', '😘') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=*', '😘') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-*', '😘') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-*', '😘') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':*', '😘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😗','1F617','kissing face',default,'{"face","kiss"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","kiss"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kissing_face', '😗') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kissing', '😗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☺️','263A','smiling face',default,'{"outlined","relaxed","face","smile","satisfied"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"outlined","relaxed","face","smile","satisfied"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('smiling_face', '☺️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('relaxed', '☺️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😚','1F61A','kissing face with closed eyes',default,'{"face","kiss","love","happy","closed","eye"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","kiss","love","happy","closed","eye"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kissing_closed_eyes', '😚') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kissing_face_with_closed_eyes', '😚') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('X*', '😚') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('X-*', '😚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😙','1F619','kissing face with smiling eyes',default,'{"eye","face","kiss","smile"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"eye","face","kiss","smile"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kissing_smiling_eyes', '😙') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kissing_face_with_smiling_eyes', '😙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥲','1F972','smiling face with tear',default,'{"proud","touched","relieved","grateful","smiling","tear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"proud","touched","relieved","grateful","smiling","tear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('smiling_face_with_tear', '🥲') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=''-)', '🥲') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':''-)', '🥲') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('='')', '🥲') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':'')', '🥲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😋','1F60B','face savoring food',default,'{"face","smile","yum","savouring","yummy","delicious","tongue"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","smile","yum","savouring","yummy","delicious","tongue"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('savoring_food', '😋') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('yum', '😋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😛','1F61B','face with tongue',default,'{"face","tongue"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","tongue"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('stuck_out_tongue', '😛') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('face_with_tongue', '😛') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':b', '😛') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-p', '😛') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-b', '😛') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':p', '😛') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-b', '😛') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-P', '😛') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-p', '😛') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':P', '😛') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-P', '😛') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=b', '😛') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=P', '😛') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=p', '😛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😜','1F61C','winking face with tongue',default,'{"face","wink","joke","eye","tongue"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","wink","joke","eye","tongue"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('stuck_out_tongue_winking_eye', '😜') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (';P', '😜') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('*b', '😜') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (';-P', '😜') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (';b', '😜') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('*p', '😜') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('*-b', '😜') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('*-P', '😜') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (';p', '😜') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (';-b', '😜') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('*-p', '😜') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('*P', '😜') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (';-p', '😜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤪','1F92A','zany face',default,'{"eye","small","goofy","large"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"eye","small","goofy","large"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('zany_face', '🤪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('zany', '🤪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😝','1F61D','squinting face with tongue',default,'{"horrible","face","taste","eye","tongue"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"horrible","face","taste","eye","tongue"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('stuck_out_tongue_closed_eyes', '😝') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('X-P', '😝') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('XP', '😝') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('Xb', '😝') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('X-b', '😝') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('X-p', '😝') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('Xp', '😝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤑','1F911','money-mouth face',default,'{"money","face","mouth","dollar","tongue"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","face","mouth","dollar","tongue"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('money_mouth_face', '🤑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤗','1F917','smiling face with open hands',default,'{"face","hands","hug","hugging","open hands","smiling face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","hands","hug","hugging","open hands","smiling face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hug', '🤗') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('hugging', '🤗') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('hugging_face', '🤗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤭','1F92D','face with hand over mouth',default,'{"mouth","whoops","smile","covering","giggling","hand"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mouth","whoops","smile","covering","giggling","hand"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('face_with_hand_over_mouth', '🤭') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('hand_over_mouth', '🤭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫢','1FAE2','face with open eyes and hand over mouth',default,'{"surprise","amazement","disbelief","embarrass","awe","scared"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"surprise","amazement","disbelief","embarrass","awe","scared"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('face_with_open_eyes_hand_over_mouth', '🫢') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('gasp', '🫢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫣','1FAE3','face with peeking eye',default,'{"captivated","stare","peep"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"captivated","stare","peep"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('peek', '🫣') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('face_with_peeking_eye', '🫣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤫','1F92B','shushing face',default,'{"silent","hand","shush","quiet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"silent","hand","shush","quiet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shush', '🤫') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('shushing_face', '🤫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤔','1F914','thinking face',default,'{"face","thinking","chin","hand","curious","frown","overthinking"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","thinking","chin","hand","curious","frown","overthinking"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('thinking', '🤔') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('wtf', '🤔') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('thinking_face', '🤔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫡','1FAE1','saluting face',default,'{"yes","salute","ok","troops","sunny"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"yes","salute","ok","troops","sunny"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('salute', '🫡') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('saluting_face', '🫡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤐','1F910','zipper-mouth face',default,'{"mouth","face","zipper"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mouth","face","zipper"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('zipper_mouth', '🤐') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('zipper_mouth_face', '🤐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤨','1F928','face with raised eyebrow',default,'{"skeptic","suspicious","distrust"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"skeptic","suspicious","distrust"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('raised_eyebrow', '🤨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('face_with_raised_eyebrow', '🤨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😐️','1F610','neutral face',default,'{"deadpan","face","meh","poker face","neutral"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"deadpan","face","meh","poker face","neutral"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('neutral_face', '😐️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('neutral', '😐️') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':|', '😐️') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-|', '😐️') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-|', '😐️') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=|', '😐️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😑','1F611','expressionless face',default,'{"annoyed","face","unamused","unexpressive","meh","inexpressive","expressionless"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"annoyed","face","unamused","unexpressive","meh","inexpressive","expressionless"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('expressionless', '😑') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('expressionless_face', '😑') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('-__-', '😑') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('-_-', '😑') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('-___-', '😑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😶','1F636','face without mouth',default,'{"face","quiet","mouth","shhh","silent"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","quiet","mouth","shhh","silent"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('no_mouth', '😶') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=X', '😶') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-X', '😶') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':X', '😶') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=#', '😶') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-#', '😶') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-#', '😶') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-X', '😶') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':#', '😶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫥','1FAE5','dotted line face',default,'{"disappear","invisible","hide","depressed","introvert"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"disappear","invisible","hide","depressed","introvert"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dotted_line_face', '🫥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😶‍🌫️','1F636-200D-1F32B-FE0F','face in clouds',default,'{"face in the fog","absentminded","head in clouds"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face in the fog","absentminded","head in clouds"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('in_clouds', '😶‍🌫️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😏','1F60F','smirking face',default,'{"smirk","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"smirk","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('smirking_face', '😏') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('smirk', '😏') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('smirking', '😏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😒','1F612','unamused face',default,'{"unhappy","face","unamused"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"unhappy","face","unamused"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('unamused', '😒') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('unamused_face', '😒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙄','1F644','face with rolling eyes',default,'{"annoyed","face","rolling","eyeroll","eyes"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"annoyed","face","rolling","eyeroll","eyes"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rolling_eyes', '🙄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😬','1F62C','grimacing face',default,'{"awkward","grimace","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"awkward","grimace","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('grimacing', '😬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('grimacing_face', '😬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😮‍💨','1F62E-200D-1F4A8','face exhaling',default,'{"relief","groan","whistle","whisper","gasp","exhale"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"relief","groan","whistle","whisper","gasp","exhale"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('exhaling', '😮‍💨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('exhale', '😮‍💨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤥','1F925','lying face',default,'{"face","lie","long","nose","pinocchio"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","lie","long","nose","pinocchio"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lying', '🤥') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('lying_face', '🤥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫨','1FAE8','shaking face',default,'{"earthquake","face","shock","shaking","vibrate"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"earthquake","face","shock","shaking","vibrate"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shaking', '🫨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('shaking_face', '🫨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😌','1F60C','relieved face',default,'{"relieved","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"relieved","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('relieved', '😌') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('relieved_face', '😌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😔','1F614','pensive face',default,'{"pensive","face","dejected"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pensive","face","dejected"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pensive_face', '😔') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pensive', '😔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😪','1F62A','sleepy face',default,'{"face","sleep","side-tear","good night","snot bubble"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","sleep","side-tear","good night","snot bubble"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sleepy_face', '😪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sleepy', '😪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤤','1F924','drooling face',default,'{"hungry","face","yummy","drooling"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hungry","face","yummy","drooling"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('drooling_face', '🤤') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('drooling', '🤤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😴','1F634','sleeping face',default,'{"face","sleep","zzz","good night","tired"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","sleep","zzz","good night","tired"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sleeping', '😴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sleeping_face', '😴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😷','1F637','face with medical mask',default,'{"sick","ill","face","cold","mask","doctor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sick","ill","face","cold","mask","doctor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('medical_mask', '😷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mask', '😷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤒','1F912','face with thermometer',default,'{"ill","sick","face","fever","thermometer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ill","sick","face","fever","thermometer"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('face_with_thermometer', '🤒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤕','1F915','face with head-bandage',default,'{"hurt","face","injury","head","bandage"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hurt","face","injury","head","bandage"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('face_with_head_bandage', '🤕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤢','1F922','nauseated face',default,'{"green","nauseated","face","vomit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"green","nauseated","face","vomit"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('nauseated_face', '🤢') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('nauseated', '🤢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤮','1F92E','face vomiting',default,'{"puke","sick","vomit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"puke","sick","vomit"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('face_vomiting', '🤮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('vomiting', '🤮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤧','1F927','sneezing face',default,'{"tissue","face","sneeze","gesundheit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tissue","face","sneeze","gesundheit"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sneezing_face', '🤧') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sneezing', '🤧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥵','1F975','hot face',default,'{"red-faced","feverish","hot","heat stroke","sweating"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"red-faced","feverish","hot","heat stroke","sweating"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hot_face', '🥵') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('hot', '🥵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥶','1F976','cold face',default,'{"frostbite","icicles","cold","blue-faced","freezing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"frostbite","icicles","cold","blue-faced","freezing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cold_face', '🥶') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cold', '🥶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥴','1F974','woozy face',default,'{"dizzy","intoxicated","wavy mouth","uneven eyes","tipsy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dizzy","intoxicated","wavy mouth","uneven eyes","tipsy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woozy_face', '🥴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('woozy', '🥴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😵','1F635','face with crossed-out eyes',default,'{"face","knocked out","dead","crossed-out eyes","dead eyes"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","knocked out","dead","crossed-out eyes","dead eyes"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dizzy_face', '😵') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('knocked_out', '😵') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('%-)', '😵') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('#-)', '😵') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('X-)', '😵') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('X)', '😵') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('%)', '😵') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('#)', '😵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😵‍💫','1F635-200D-1F4AB','face with spiral eyes',default,'{"trouble","dizzy","hypnotized","spiral","whoa"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"trouble","dizzy","hypnotized","spiral","whoa"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dizzy_eyes', '😵‍💫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤯','1F92F','exploding head',default,'{"mind blown","shocked","explosion"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mind blown","shocked","explosion"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('exploding_head', '🤯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤠','1F920','cowboy hat face',default,'{"face","howdy","cowgirl","hat","cowboy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","howdy","cowgirl","hat","cowboy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cowboy_face', '🤠') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cowboy', '🤠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥳','1F973','partying face',default,'{"hat","horn","celebration","party"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hat","horn","celebration","party"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hooray', '🥳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('partying_face', '🥳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('partying', '🥳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥸','1F978','disguised face',default,'{"face","glasses","nose","disguise","incognito"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","glasses","nose","disguise","incognito"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('disguised', '🥸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('disguised_face', '🥸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😎','1F60E','smiling face with sunglasses',default,'{"face","cool","bright","sunglasses","sun"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","cool","bright","sunglasses","sun"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('smiling_face_with_sunglasses', '😎') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sunglasses_cool', '😎') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('too_cool', '😎') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('8-D', '😎') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('B-D', '😎') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('B)', '😎') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('8D', '😎') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('B-)', '😎') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('8)', '😎') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('8-)', '😎') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('BD', '😎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤓','1F913','nerd face',default,'{"face","glasses","learning","nerd","geek"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","glasses","learning","nerd","geek"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('nerd', '🤓') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('nerd_face', '🤓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧐','1F9D0','face with monocle',default,'{"face","stuffy","glasses","monocle","intelligent"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","stuffy","glasses","monocle","intelligent"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('face_with_monocle', '🧐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😕','1F615','confused face',default,'{"frown","meh","confused","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"frown","meh","confused","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('confused', '😕') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('confused_face', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-/', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=S', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-L', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-\', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-\', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':S', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-S', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=\', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':/', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':L', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-L', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-S', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-/', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=L', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':\', '😕') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=/', '😕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫤','1FAE4','face with diagonal mouth',default,'{"unsure","meh","skeptical","disappointed"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"unsure","meh","skeptical","disappointed"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('face_with_diagonal_mouth', '🫤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😟','1F61F','worried face',default,'{"sad","worried","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sad","worried","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('worried', '😟') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('worried_face', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=\', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:/', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:\', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:S', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=-L', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=L', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:-S', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=-\', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:-L', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=-/', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:L', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:-/', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=-S', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=S', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=/', '😟') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:-\', '😟') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙁','1F641','slightly frowning face',default,'{"frown","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"frown","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('slightly_frowning_face', '🙁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☹️','2639','frowning face',default,'{"frown","negative","face","sad"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"frown","negative","face","sad"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_frowning_face', '☹️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😮','1F62E','face with open mouth',default,'{"sympathy","open","mouth","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sympathy","open","mouth","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('open_mouth', '😮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('face_with_open_mouth', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:-O', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-o', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-O', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-0', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('o_O', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-o', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':O', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('O_O', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=O', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:O', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('O_o', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':0', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=0', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-0', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-O', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=o', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('o_o', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=-O', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':o', '😮') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=O', '😮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😯','1F62F','hushed face',default,'{"stunned","hushed","face","surprised"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stunned","hushed","face","surprised"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hushed_face', '😯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('hushed', '😯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😲','1F632','astonished face',default,'{"shocked","face","astonished","totally"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"shocked","face","astonished","totally"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('astonished_face', '😲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('astonished', '😲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😳','1F633','flushed face',default,'{"dazed","flushed","face","red jaws"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dazed","flushed","face","red jaws"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flushed', '😳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flushed_face', '😳') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=$', '😳') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':$', '😳') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-$', '😳') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-$', '😳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥺','1F97A','pleading face',default,'{"puppy eyes","mercy","begging"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"puppy eyes","mercy","begging"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pleading_face', '🥺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pleading', '🥺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥹','1F979','face holding back tears',default,'{"angry","resist","proud","sad","cry"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"angry","resist","proud","sad","cry"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('face_holding_back_tears', '🥹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('watery_eyes', '🥹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😦','1F626','frowning face with open mouth',default,'{"frown","open","mouth","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"frown","open","mouth","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('frowning', '😦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('frowning_face', '😦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😧','1F627','anguished face',default,'{"face","anguished"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","anguished"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('anguished_face', '😧') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('anguished', '😧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😨','1F628','fearful face',default,'{"scared","fearful","face","fear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"scared","fearful","face","fear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fearful', '😨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('fearful_face', '😨') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('D=', '😨') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('D-=', '😨') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('D:', '😨') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('D-:', '😨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😰','1F630','anxious face with sweat',default,'{"worried","face","cold","blue","anxious","sweat","considerate","rushed"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"worried","face","cold","blue","anxious","sweat","considerate","rushed"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cold_sweat', '😰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('anxious', '😰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('anxious_face', '😰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😥','1F625','sad but relieved face',default,'{"face","anxious","whew","relieved","disappointed"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","anxious","whew","relieved","disappointed"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('disappointed_relieved', '😥') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sad_relieved_face', '😥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😢','1F622','crying face',default,'{"sad","cry","face","tear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sad","cry","face","tear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cry', '😢') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('crying_face', '😢') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=''-(', '😢') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=''(', '😢') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=''-[', '😢') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':''-(', '😢') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':''[', '😢') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':''-[', '😢') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':''(', '😢') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=''[', '😢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😭','1F62D','loudly crying face',default,'{"sob","face","sad","cry","tear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sob","face","sad","cry","tear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('loudly_crying_face', '😭') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sob', '😭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😱','1F631','face screaming in fear',default,'{"munch","face","open mouth","scream","fear","scared"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"munch","face","open mouth","scream","fear","scared"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('screaming_in_fear', '😱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('scream', '😱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😖','1F616','confounded face',default,'{"face","confounded"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","confounded"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('confounded', '😖') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('confounded_face', '😖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😣','1F623','persevering face',default,'{"ouch","persevere","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ouch","persevere","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('persevering_face', '😣') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('persevere', '😣') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>.<', '😣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😞','1F61E','disappointed face',default,'{"face","disappointed"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","disappointed"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('disappointed_face', '😞') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('disappointed', '😞') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=[', '😞') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':(', '😞') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=(', '😞') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':[', '😞') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-[', '😞') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-(', '😞') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-(', '😞') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-[', '😞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😓','1F613','downcast face with sweat',default,'{"sweat","face","cold"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sweat","face","cold"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sweat', '😓') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('downcast_face', '😓') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (''':-[', '😓') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('''=-(', '😓') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('''=-[', '😓') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (''':-(', '😓') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('''=[', '😓') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('''=(', '😓') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (''':(', '😓') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (''':[', '😓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😩','1F629','weary face',default,'{"weary","distraught","face","tired"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"weary","distraught","face","tired"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('weary', '😩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('weary_face', '😩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😫','1F62B','tired face',default,'{"exhausted","face","tired"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"exhausted","face","tired"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tired_face', '😫') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('tired', '😫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥱','1F971','yawning face',default,'{"bored","tired","yawn"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bored","tired","yawn"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('yawning_face', '🥱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('yawn', '🥱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('yawning', '🥱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😤','1F624','face with steam from nose',default,'{"won","triumph","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"won","triumph","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('triumph', '😤') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('nose_steam', '😤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😡','1F621','enraged face',default,'{"angry","face","enraged","mad","red","pouting","rage"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"angry","face","enraged","mad","red","pouting","rage"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pouting_face', '😡') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pout', '😡') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('rage', '😡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😠','1F620','angry face',default,'{"angry","anger","face","mad"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"angry","anger","face","mad"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('angry', '😠') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('angry_face', '😠') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=-@', '😠') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:-[', '😠') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=(', '😠') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':@', '😠') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:(', '😠') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:[', '😠') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=-(', '😠') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=[', '😠') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=-[', '😠') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values (':-@', '😠') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:-(', '😠') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('=@', '😠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤬','1F92C','face with symbols on mouth',default,'{"angry","swearing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"angry","swearing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('face_with_symbols_on_mouth', '🤬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('censored', '🤬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😈','1F608','smiling face with horns',default,'{"malicious","face","horns","fairy tale","sardonic","smile","fantasy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"malicious","face","horns","fairy tale","sardonic","smile","fantasy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('smiling_imp', '😈') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:-)', '😈') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>:)', '😈') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=)', '😈') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('>=-)', '😈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👿','1F47F','angry face with horns',default,'{"devil","demon","imp","face","mean","fantasy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"devil","demon","imp","face","mean","fantasy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('angry_imp', '👿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('imp', '👿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💀','1F480','skull',default,'{"face","death","fairy tale","monster","skull"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","death","fairy tale","monster","skull"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('skull', '💀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☠️','2620','skull and crossbones',default,'{"face","death","crossbones","monster","skull"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","death","crossbones","monster","skull"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('skull_and_crossbones', '☠️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💩','1F4A9','pile of poo',default,'{"dung","poop","face","poo","monster"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dung","poop","face","poo","monster"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shit', '💩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('poop', '💩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤡','1F921','clown face',default,'{"face","clown"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","clown"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clown', '🤡') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('clown_face', '🤡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👹','1F479','ogre',default,'{"face","fairy tale","fantasy","monster","creature"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","fairy tale","fantasy","monster","creature"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('japanese_ogre', '👹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ogre', '👹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👺','1F47A','goblin',default,'{"face","fairy tale","fantasy","monster","creature"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","fairy tale","fantasy","monster","creature"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('japanese_goblin', '👺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('goblin', '👺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👻','1F47B','ghost',default,'{"face","fairy tale","fantasy","ghost","monster","creature"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","fairy tale","fantasy","ghost","monster","creature"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ghost', '👻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👽️','1F47D','alien',default,'{"face","ufo","alien","fantasy","extraterrestrial","creature"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","ufo","alien","fantasy","extraterrestrial","creature"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('alien', '👽️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👾','1F47E','alien monster',default,'{"face","monster","ufo","alien","extraterrestrial","creature"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","monster","ufo","alien","extraterrestrial","creature"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('space_invader', '👾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('alien_monster', '👾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤖','1F916','robot',default,'{"monster","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"monster","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('robot_face', '🤖') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('robot', '🤖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😺','1F63A','grinning cat',default,'{"cat","face","grinning","mouth","smile","open"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cat","face","grinning","mouth","smile","open"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('grinning_cat', '😺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('smiley_cat', '😺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😸','1F638','grinning cat with smiling eyes',default,'{"cat","face","grinning","smile","grin","eye"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cat","face","grinning","smile","grin","eye"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('smile_cat', '😸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('grinning_cat_with_closed_eyes', '😸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😹','1F639','cat with tears of joy',default,'{"cat","face","smile","laughing","joy","tear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cat","face","smile","laughing","joy","tear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tears_of_joy_cat', '😹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('joy_cat', '😹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😻','1F63B','smiling cat with heart-eyes',default,'{"cat","face","love","smile","heart","red","hearts","eye"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cat","face","love","smile","heart","red","hearts","eye"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('heart_eyes_cat', '😻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('smiling_cat_with_heart_eyes', '😻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😼','1F63C','cat with wry smile',default,'{"cat","face","wry","smile","ironic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cat","face","wry","smile","ironic"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wry_smile_cat', '😼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('smirk_cat', '😼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😽','1F63D','kissing cat',default,'{"eye","cat","face","kiss"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"eye","cat","face","kiss"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kissing_cat', '😽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙀','1F640','weary cat',default,'{"cat","face","weary","wow","oh","surprised"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cat","face","weary","wow","oh","surprised"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('weary_cat', '🙀') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('scream_cat', '🙀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😿','1F63F','crying cat',default,'{"unhappy","cat","face","depressed","sad","cry","tear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"unhappy","cat","face","depressed","sad","cry","tear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('crying_cat', '😿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('😾','1F63E','pouting cat',default,'{"angry","cat","face","pouting","sad"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"angry","cat","face","pouting","sad"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pouting_cat', '😾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙈','1F648','see-no-evil monkey',default,'{"face","evil","monkey","see","forbidden"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","evil","monkey","see","forbidden"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('see_no_evil', '🙈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙉','1F649','hear-no-evil monkey',default,'{"face","evil","hear","monkey","forbidden"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","evil","hear","monkey","forbidden"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hear_no_evil', '🙉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙊','1F64A','speak-no-evil monkey',default,'{"face","speak","evil","monkey","forbidden"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","speak","evil","monkey","forbidden"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('speak_no_evil', '🙊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💌','1F48C','love letter',default,'{"mail","love","heart","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mail","love","heart","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('love_letter', '💌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💘','1F498','heart with arrow',default,'{"cupid","inlove","arrow","love"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cupid","inlove","arrow","love"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cupid', '💘') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('heart_with_arrow', '💘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💝','1F49D','heart with ribbon',default,'{"ribbon","present","love","valentine"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ribbon","present","love","valentine"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('heart_with_ribbon', '💝') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('gift_heart', '💝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💖','1F496','sparkling heart',default,'{"excited","inlove","sparkle","love"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"excited","inlove","sparkle","love"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sparkling_heart', '💖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💗','1F497','growing heart',default,'{"growing","excited","pulse","love","inlove","nervous"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"growing","excited","pulse","love","inlove","nervous"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('heartpulse', '💗') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('growing_heart', '💗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💓','1F493','beating heart',default,'{"beating","heartbeat","love","pulsating"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"beating","heartbeat","love","pulsating"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('beating_heart', '💓') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('heartbeat', '💓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💞','1F49E','revolving hearts',default,'{"revolving"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"revolving"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('revolving_hearts', '💞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💕','1F495','two hearts',default,'{"love"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"love"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('two_hearts', '💕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💟','1F49F','heart decoration',default,'{"heart"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"heart"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('heart_decoration', '💟') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('❣️','2763','heart exclamation',default,'{"mark","punctuation","exclamation"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","punctuation","exclamation"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('heart_exclamation', '❣️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💔','1F494','broken heart',default,'{"broken","heartbreak","break"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"broken","heartbreak","break"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('broken_heart', '💔') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('</3', '💔') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('<\3', '💔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('❤️‍🔥','2764-FE0F-200D-1F525','heart on fire',default,'{"burn","sacred heart","love","heart","lust"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"burn","sacred heart","love","heart","lust"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('heart_on_fire', '❤️‍🔥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('❤️‍🩹','2764-FE0F-200D-1FA79','mending heart',default,'{"healthier","mending","well","recovering","recuperating","improving"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"healthier","mending","well","recovering","recuperating","improving"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mending_heart', '❤️‍🩹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('❤️','2764','red heart',default,'{"red","love","heart"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"red","love","heart"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('red_heart', '❤️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('heart', '❤️') on conflict do nothing;
insert into emoji.emoticons (ascii, emoji) values ('<3', '❤️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🩷','1FA77','pink heart',default,'{"cute","love","heart","like","pink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cute","love","heart","like","pink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pink_heart', '🩷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧡','1F9E1','orange heart',default,'{"orange"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"orange"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('orange_heart', '🧡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💛','1F49B','yellow heart',default,'{"yellow"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"yellow"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('yellow_heart', '💛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💚','1F49A','green heart',default,'{"green"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"green"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('green_heart', '💚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💙','1F499','blue heart',default,'{"blue"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"blue"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('blue_heart', '💙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🩵','1FA75','light blue heart',default,'{"teal","cyan","heart","light blue"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"teal","cyan","heart","light blue"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('light_blue_heart', '🩵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💜','1F49C','purple heart',default,'{"purple"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"purple"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('purple_heart', '💜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤎','1F90E','brown heart',default,'{"heart","brown"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"heart","brown"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('brown_heart', '🤎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖤','1F5A4','black heart',default,'{"wicked","evil","black"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wicked","evil","black"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('black_heart', '🖤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🩶','1FA76','grey heart',default,'{"slate","heart","silver","gray"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"slate","heart","silver","gray"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('grey_heart', '🩶') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('gray_heart', '🩶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤍','1F90D','white heart',default,'{"heart","white"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"heart","white"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_heart', '🤍') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💋','1F48B','kiss mark',default,'{"lips","love","kiss"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"lips","love","kiss"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kiss', '💋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💯','1F4AF','hundred points',default,'{"excellent","100","score","hundred","perfect","full"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"excellent","100","score","hundred","perfect","full"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('100', '💯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💢','1F4A2','anger symbol',default,'{"comic","angry","mad"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"comic","angry","mad"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('anger', '💢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💥','1F4A5','collision',default,'{"comic","boom","explosion"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"comic","boom","explosion"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('collision', '💥') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('boom', '💥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💫','1F4AB','dizzy',default,'{"comic","star","shootingstar"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"comic","star","shootingstar"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dizzy', '💫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💦','1F4A6','sweat droplets',default,'{"comic","sweat","splashing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"comic","sweat","splashing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sweat_drops', '💦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💨','1F4A8','dashing away',default,'{"comic","dash","running"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"comic","dash","running"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dash', '💨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('dashing_away', '💨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕳️','1F573','hole',default,'{"hole"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hole"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hole', '🕳️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💬','1F4AC','speech balloon',default,'{"balloon","talk","bubble","comic","speech","dialog"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"balloon","talk","bubble","comic","speech","dialog"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('speech_balloon', '💬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👁️‍🗨️','1F441-FE0F-200D-1F5E8-FE0F','eye in speech bubble',default,'{"balloon","speech","bubble","witness","speech bubble","eye"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"balloon","speech","bubble","witness","speech bubble","eye"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('eye_in_speech_bubble', '👁️‍🗨️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗨️','1F5E8','left speech bubble',default,'{"bubble","balloon","speech","dialog"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bubble","balloon","speech","dialog"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('left_speech_bubble', '🗨️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗯️','1F5EF','right anger bubble',default,'{"bubble","angry","balloon","mad"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bubble","angry","balloon","mad"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('right_anger_bubble', '🗯️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💭','1F4AD','thought balloon',default,'{"balloon","think","bubble","comic","thought"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"balloon","think","bubble","comic","thought"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('thought_balloon', '💭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💤','1F4A4','ZZZ',default,'{"night","sleep","zzz","good night","comic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"night","sleep","zzz","good night","comic"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('zzz', '💤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👋','1F44B','waving hand','👋','{"hello","waving hand sign","goodbye","wave","hand","waving"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hello","waving hand sign","goodbye","wave","hand","waving"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wave', '👋') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('waving_hand', '👋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👋🏻','1F44B-1F3FB','waving hand: light skin tone','👋',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('wave_tone1', '👋🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('waving_hand_tone1', '👋🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👋🏼','1F44B-1F3FC','waving hand: medium-light skin tone','👋',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('wave_tone2', '👋🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('waving_hand_tone2', '👋🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👋🏽','1F44B-1F3FD','waving hand: medium skin tone','👋',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('waving_hand_tone3', '👋🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('wave_tone3', '👋🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👋🏾','1F44B-1F3FE','waving hand: medium-dark skin tone','👋',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('waving_hand_tone4', '👋🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('wave_tone4', '👋🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👋🏿','1F44B-1F3FF','waving hand: dark skin tone','👋',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('waving_hand_tone5', '👋🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('wave_tone5', '👋🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤚','1F91A','raised back of hand','🤚','{"raised","hand","backhand"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"raised","hand","backhand"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('raised_back_of_hand', '🤚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤚🏻','1F91A-1F3FB','raised back of hand: light skin tone','🤚',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('raised_back_of_hand_tone1', '🤚🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤚🏼','1F91A-1F3FC','raised back of hand: medium-light skin tone','🤚',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('raised_back_of_hand_tone2', '🤚🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤚🏽','1F91A-1F3FD','raised back of hand: medium skin tone','🤚',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('raised_back_of_hand_tone3', '🤚🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤚🏾','1F91A-1F3FE','raised back of hand: medium-dark skin tone','🤚',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('raised_back_of_hand_tone4', '🤚🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤚🏿','1F91A-1F3FF','raised back of hand: dark skin tone','🤚',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('raised_back_of_hand_tone5', '🤚🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖐️','1F590','hand with fingers splayed','🖐️','{"five","five hand","splayed","hand","finger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"five","five hand","splayed","hand","finger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('raised_hand_with_fingers_splayed', '🖐️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖐🏻','1F590-1F3FB','hand with fingers splayed: light skin tone','🖐️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('raised_hand_with_fingers_splayed_tone1', '🖐🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖐🏼','1F590-1F3FC','hand with fingers splayed: medium-light skin tone','🖐️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('raised_hand_with_fingers_splayed_tone2', '🖐🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖐🏽','1F590-1F3FD','hand with fingers splayed: medium skin tone','🖐️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('raised_hand_with_fingers_splayed_tone3', '🖐🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖐🏾','1F590-1F3FE','hand with fingers splayed: medium-dark skin tone','🖐️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('raised_hand_with_fingers_splayed_tone4', '🖐🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖐🏿','1F590-1F3FF','hand with fingers splayed: dark skin tone','🖐️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('raised_hand_with_fingers_splayed_tone5', '🖐🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✋','270B','raised hand','✋','{"raise","high five","hand","high 5","raised hand","raised"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"raise","high five","hand","high 5","raised hand","raised"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('raised_hand', '✋') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('high_five', '✋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✋🏻','270B-1F3FB','raised hand: light skin tone','✋',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('raised_hand_tone1', '✋🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('high_five_tone1', '✋🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✋🏼','270B-1F3FC','raised hand: medium-light skin tone','✋',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('high_five_tone2', '✋🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('raised_hand_tone2', '✋🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✋🏽','270B-1F3FD','raised hand: medium skin tone','✋',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('high_five_tone3', '✋🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('raised_hand_tone3', '✋🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✋🏾','270B-1F3FE','raised hand: medium-dark skin tone','✋',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('raised_hand_tone4', '✋🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('high_five_tone4', '✋🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✋🏿','270B-1F3FF','raised hand: dark skin tone','✋',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('high_five_tone5', '✋🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('raised_hand_tone5', '✋🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖖','1F596','vulcan salute','🖖','{"vulcan","star trek","fingers","spock","hand","finger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"vulcan","star trek","fingers","spock","hand","finger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('vulcan', '🖖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖖🏻','1F596-1F3FB','vulcan salute: light skin tone','🖖',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('vulcan_tone1', '🖖🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖖🏼','1F596-1F3FC','vulcan salute: medium-light skin tone','🖖',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('vulcan_tone2', '🖖🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖖🏽','1F596-1F3FD','vulcan salute: medium skin tone','🖖',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('vulcan_tone3', '🖖🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖖🏾','1F596-1F3FE','vulcan salute: medium-dark skin tone','🖖',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('vulcan_tone4', '🖖🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖖🏿','1F596-1F3FF','vulcan salute: dark skin tone','🖖',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('vulcan_tone5', '🖖🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱','1FAF1','rightwards hand','🫱','{"hand","right","rightward"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hand","right","rightward"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rightwards_hand', '🫱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏻','1FAF1-1F3FB','rightwards hand: light skin tone','🫱',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('rightwards_hand_tone1', '🫱🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏼','1FAF1-1F3FC','rightwards hand: medium-light skin tone','🫱',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('rightwards_hand_tone2', '🫱🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏽','1FAF1-1F3FD','rightwards hand: medium skin tone','🫱',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('rightwards_hand_tone3', '🫱🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏾','1FAF1-1F3FE','rightwards hand: medium-dark skin tone','🫱',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('rightwards_hand_tone4', '🫱🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏿','1FAF1-1F3FF','rightwards hand: dark skin tone','🫱',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('rightwards_hand_tone5', '🫱🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫲','1FAF2','leftwards hand','🫲','{"left","hand","leftward"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"left","hand","leftward"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('leftwards_hand', '🫲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫲🏻','1FAF2-1F3FB','leftwards hand: light skin tone','🫲',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('leftwards_hand_tone1', '🫲🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫲🏼','1FAF2-1F3FC','leftwards hand: medium-light skin tone','🫲',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('leftwards_hand_tone2', '🫲🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫲🏽','1FAF2-1F3FD','leftwards hand: medium skin tone','🫲',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('leftwards_hand_tone3', '🫲🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫲🏾','1FAF2-1F3FE','leftwards hand: medium-dark skin tone','🫲',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('leftwards_hand_tone4', '🫲🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫲🏿','1FAF2-1F3FF','leftwards hand: dark skin tone','🫲',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('leftwards_hand_tone5', '🫲🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫳','1FAF3','palm down hand','🫳','{"dismiss","shoo","drop"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dismiss","shoo","drop"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('palm_down', '🫳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫳🏻','1FAF3-1F3FB','palm down hand: light skin tone','🫳',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('palm_down_tone1', '🫳🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫳🏼','1FAF3-1F3FC','palm down hand: medium-light skin tone','🫳',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('palm_down_tone2', '🫳🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫳🏽','1FAF3-1F3FD','palm down hand: medium skin tone','🫳',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('palm_down_tone3', '🫳🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫳🏾','1FAF3-1F3FE','palm down hand: medium-dark skin tone','🫳',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('palm_down_tone4', '🫳🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫳🏿','1FAF3-1F3FF','palm down hand: dark skin tone','🫳',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('palm_down_tone5', '🫳🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫴','1FAF4','palm up hand','🫴','{"beckon","catch","come","offer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"beckon","catch","come","offer"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('palm_up', '🫴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫴🏻','1FAF4-1F3FB','palm up hand: light skin tone','🫴',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('palm_up_tone1', '🫴🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫴🏼','1FAF4-1F3FC','palm up hand: medium-light skin tone','🫴',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('palm_up_tone2', '🫴🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫴🏽','1FAF4-1F3FD','palm up hand: medium skin tone','🫴',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('palm_up_tone3', '🫴🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫴🏾','1FAF4-1F3FE','palm up hand: medium-dark skin tone','🫴',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('palm_up_tone4', '🫴🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫴🏿','1FAF4-1F3FF','palm up hand: dark skin tone','🫴',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('palm_up_tone5', '🫴🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫷','1FAF7','leftwards pushing hand','🫷','{"stop","high five","leftward","push","wait","refuse"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stop","high five","leftward","push","wait","refuse"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('leftwards_pushing_hand', '🫷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫷🏻','1FAF7-1F3FB','leftwards pushing hand: light skin tone','🫷',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('leftwards_pushing_hand_tone1', '🫷🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫷🏼','1FAF7-1F3FC','leftwards pushing hand: medium-light skin tone','🫷',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('leftwards_pushing_hand_tone2', '🫷🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫷🏽','1FAF7-1F3FD','leftwards pushing hand: medium skin tone','🫷',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('leftwards_pushing_hand_tone3', '🫷🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫷🏾','1FAF7-1F3FE','leftwards pushing hand: medium-dark skin tone','🫷',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('leftwards_pushing_hand_tone4', '🫷🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫷🏿','1FAF7-1F3FF','leftwards pushing hand: dark skin tone','🫷',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('leftwards_pushing_hand_tone5', '🫷🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫸','1FAF8','rightwards pushing hand','🫸','{"stop","high five","rightward","push","wait","refuse"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stop","high five","rightward","push","wait","refuse"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rightwards_pushing_hand', '🫸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫸🏻','1FAF8-1F3FB','rightwards pushing hand: light skin tone','🫸',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('rightwards_pushing_hand_tone1', '🫸🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫸🏼','1FAF8-1F3FC','rightwards pushing hand: medium-light skin tone','🫸',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('rightwards_pushing_hand_tone2', '🫸🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫸🏽','1FAF8-1F3FD','rightwards pushing hand: medium skin tone','🫸',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('rightwards_pushing_hand_tone3', '🫸🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫸🏾','1FAF8-1F3FE','rightwards pushing hand: medium-dark skin tone','🫸',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('rightwards_pushing_hand_tone4', '🫸🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫸🏿','1FAF8-1F3FF','rightwards pushing hand: dark skin tone','🫸',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('rightwards_pushing_hand_tone5', '🫸🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👌','1F44C','OK hand','👌','{"perfect","hand","ok","okay"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"perfect","hand","ok","okay"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ok_hand', '👌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👌🏻','1F44C-1F3FB','OK hand: light skin tone','👌',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('ok_hand_tone1', '👌🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👌🏼','1F44C-1F3FC','OK hand: medium-light skin tone','👌',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('ok_hand_tone2', '👌🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👌🏽','1F44C-1F3FD','OK hand: medium skin tone','👌',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('ok_hand_tone3', '👌🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👌🏾','1F44C-1F3FE','OK hand: medium-dark skin tone','👌',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('ok_hand_tone4', '👌🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👌🏿','1F44C-1F3FF','OK hand: dark skin tone','👌',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('ok_hand_tone5', '👌🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤌','1F90C','pinched fingers','🤌','{"fingers","interrogation","pinched","sarcastic","hand gesture"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fingers","interrogation","pinched","sarcastic","hand gesture"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pinch', '🤌') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pinched_fingers', '🤌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤌🏻','1F90C-1F3FB','pinched fingers: light skin tone','🤌',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('pinched_fingers_tone1', '🤌🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pinch_tone1', '🤌🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤌🏼','1F90C-1F3FC','pinched fingers: medium-light skin tone','🤌',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('pinched_fingers_tone2', '🤌🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pinch_tone2', '🤌🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤌🏽','1F90C-1F3FD','pinched fingers: medium skin tone','🤌',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('pinch_tone3', '🤌🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pinched_fingers_tone3', '🤌🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤌🏾','1F90C-1F3FE','pinched fingers: medium-dark skin tone','🤌',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('pinch_tone4', '🤌🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pinched_fingers_tone4', '🤌🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤌🏿','1F90C-1F3FF','pinched fingers: dark skin tone','🤌',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('pinch_tone5', '🤌🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pinched_fingers_tone5', '🤌🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤏','1F90F','pinching hand','🤏','{"small amount"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"small amount"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pinching_hand', '🤏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤏🏻','1F90F-1F3FB','pinching hand: light skin tone','🤏',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('pinching_hand_tone1', '🤏🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤏🏼','1F90F-1F3FC','pinching hand: medium-light skin tone','🤏',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('pinching_hand_tone2', '🤏🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤏🏽','1F90F-1F3FD','pinching hand: medium skin tone','🤏',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('pinching_hand_tone3', '🤏🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤏🏾','1F90F-1F3FE','pinching hand: medium-dark skin tone','🤏',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('pinching_hand_tone4', '🤏🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤏🏿','1F90F-1F3FF','pinching hand: dark skin tone','🤏',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('pinching_hand_tone5', '🤏🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✌️','270C','victory hand','✌️','{"v","victory","peace","quotes","hand","V sign","peace sign","air quotes"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"v","victory","peace","quotes","hand","V sign","peace sign","air quotes"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('victory', '✌️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('v', '✌️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✌🏻','270C-1F3FB','victory hand: light skin tone','✌️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('v_tone1', '✌🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('victory_tone1', '✌🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✌🏼','270C-1F3FC','victory hand: medium-light skin tone','✌️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('victory_tone2', '✌🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('v_tone2', '✌🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✌🏽','270C-1F3FD','victory hand: medium skin tone','✌️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('victory_tone3', '✌🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('v_tone3', '✌🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✌🏾','270C-1F3FE','victory hand: medium-dark skin tone','✌️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('v_tone4', '✌🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('victory_tone4', '✌🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✌🏿','270C-1F3FF','victory hand: dark skin tone','✌️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('v_tone5', '✌🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('victory_tone5', '✌🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤞','1F91E','crossed fingers','🤞','{"crossed","fingers","hand","good luck","fingers crossed","luck","finger","cross"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"crossed","fingers","hand","good luck","fingers crossed","luck","finger","cross"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fingers_crossed', '🤞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤞🏻','1F91E-1F3FB','crossed fingers: light skin tone','🤞',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('fingers_crossed_tone1', '🤞🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤞🏼','1F91E-1F3FC','crossed fingers: medium-light skin tone','🤞',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('fingers_crossed_tone2', '🤞🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤞🏽','1F91E-1F3FD','crossed fingers: medium skin tone','🤞',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('fingers_crossed_tone3', '🤞🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤞🏾','1F91E-1F3FE','crossed fingers: medium-dark skin tone','🤞',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('fingers_crossed_tone4', '🤞🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤞🏿','1F91E-1F3FF','crossed fingers: dark skin tone','🤞',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('fingers_crossed_tone5', '🤞🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫰','1FAF0','hand with index finger and thumb crossed','🫰','{"money","love","heart","snap","expensive"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","love","heart","snap","expensive"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hand_with_index_finger_and_thumb_crossed', '🫰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫰🏻','1FAF0-1F3FB','hand with index finger and thumb crossed: light skin tone','🫰',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('hand_with_index_finger_and_thumb_crossed_tone1', '🫰🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫰🏼','1FAF0-1F3FC','hand with index finger and thumb crossed: medium-light skin tone','🫰',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('hand_with_index_finger_and_thumb_crossed_tone2', '🫰🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫰🏽','1FAF0-1F3FD','hand with index finger and thumb crossed: medium skin tone','🫰',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('hand_with_index_finger_and_thumb_crossed_tone3', '🫰🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫰🏾','1FAF0-1F3FE','hand with index finger and thumb crossed: medium-dark skin tone','🫰',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('hand_with_index_finger_and_thumb_crossed_tone4', '🫰🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫰🏿','1FAF0-1F3FF','hand with index finger and thumb crossed: dark skin tone','🫰',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('hand_with_index_finger_and_thumb_crossed_tone5', '🫰🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤟','1F91F','love-you gesture','🤟','{"hand","ily","love","heavy metal"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hand","ily","love","heavy metal"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('love_you_gesture', '🤟') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤟🏻','1F91F-1F3FB','love-you gesture: light skin tone','🤟',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('love_you_gesture_tone1', '🤟🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤟🏼','1F91F-1F3FC','love-you gesture: medium-light skin tone','🤟',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('love_you_gesture_tone2', '🤟🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤟🏽','1F91F-1F3FD','love-you gesture: medium skin tone','🤟',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('love_you_gesture_tone3', '🤟🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤟🏾','1F91F-1F3FE','love-you gesture: medium-dark skin tone','🤟',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('love_you_gesture_tone4', '🤟🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤟🏿','1F91F-1F3FF','love-you gesture: dark skin tone','🤟',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('love_you_gesture_tone5', '🤟🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤘','1F918','sign of the horns','🤘','{"devil","rock","horns","rock on","rock-on","heavy","heavy metal","hand","devil fingers","metal","finger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"devil","rock","horns","rock on","rock-on","heavy","heavy metal","hand","devil fingers","metal","finger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sign_of_the_horns', '🤘') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('metal', '🤘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤘🏻','1F918-1F3FB','sign of the horns: light skin tone','🤘',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('sign_of_the_horns_tone1', '🤘🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('metal_tone1', '🤘🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤘🏼','1F918-1F3FC','sign of the horns: medium-light skin tone','🤘',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('sign_of_the_horns_tone2', '🤘🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('metal_tone2', '🤘🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤘🏽','1F918-1F3FD','sign of the horns: medium skin tone','🤘',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('metal_tone3', '🤘🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sign_of_the_horns_tone3', '🤘🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤘🏾','1F918-1F3FE','sign of the horns: medium-dark skin tone','🤘',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('metal_tone4', '🤘🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sign_of_the_horns_tone4', '🤘🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤘🏿','1F918-1F3FF','sign of the horns: dark skin tone','🤘',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('metal_tone5', '🤘🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sign_of_the_horns_tone5', '🤘🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤙','1F919','call me hand','🤙','{"shaka sign","call","hand","hang loose","right on","shaka","call me hand","phone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"shaka sign","call","hand","hang loose","right on","shaka","call me hand","phone"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('call_me_hand', '🤙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤙🏻','1F919-1F3FB','call me hand: light skin tone','🤙',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('call_me_hand_tone1', '🤙🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤙🏼','1F919-1F3FC','call me hand: medium-light skin tone','🤙',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('call_me_hand_tone2', '🤙🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤙🏽','1F919-1F3FD','call me hand: medium skin tone','🤙',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('call_me_hand_tone3', '🤙🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤙🏾','1F919-1F3FE','call me hand: medium-dark skin tone','🤙',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('call_me_hand_tone4', '🤙🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤙🏿','1F919-1F3FF','call me hand: dark skin tone','🤙',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('call_me_hand_tone5', '🤙🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👈️','1F448','backhand index pointing left','👈️','{"point","backhand","index","left","hand","point left","finger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"point","backhand","index","left","hand","point left","finger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('point_left', '👈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👈🏻','1F448-1F3FB','backhand index pointing left: light skin tone','👈️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('point_left_tone1', '👈🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👈🏼','1F448-1F3FC','backhand index pointing left: medium-light skin tone','👈️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('point_left_tone2', '👈🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👈🏽','1F448-1F3FD','backhand index pointing left: medium skin tone','👈️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('point_left_tone3', '👈🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👈🏾','1F448-1F3FE','backhand index pointing left: medium-dark skin tone','👈️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('point_left_tone4', '👈🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👈🏿','1F448-1F3FF','backhand index pointing left: dark skin tone','👈️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('point_left_tone5', '👈🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👉️','1F449','backhand index pointing right','👉️','{"point","right","point right","backhand","index","hand","finger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"point","right","point right","backhand","index","hand","finger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('point_right', '👉️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👉🏻','1F449-1F3FB','backhand index pointing right: light skin tone','👉️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('point_right_tone1', '👉🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👉🏼','1F449-1F3FC','backhand index pointing right: medium-light skin tone','👉️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('point_right_tone2', '👉🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👉🏽','1F449-1F3FD','backhand index pointing right: medium skin tone','👉️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('point_right_tone3', '👉🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👉🏾','1F449-1F3FE','backhand index pointing right: medium-dark skin tone','👉️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('point_right_tone4', '👉🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👉🏿','1F449-1F3FF','backhand index pointing right: dark skin tone','👉️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('point_right_tone5', '👉🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👆️','1F446','backhand index pointing up','👆️','{"point","backhand","index","point up","hand","finger","up"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"point","backhand","index","point up","hand","finger","up"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('point_up', '👆️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👆🏻','1F446-1F3FB','backhand index pointing up: light skin tone','👆️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('point_up_tone1', '👆🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👆🏼','1F446-1F3FC','backhand index pointing up: medium-light skin tone','👆️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('point_up_tone2', '👆🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👆🏽','1F446-1F3FD','backhand index pointing up: medium skin tone','👆️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('point_up_tone3', '👆🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👆🏾','1F446-1F3FE','backhand index pointing up: medium-dark skin tone','👆️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('point_up_tone4', '👆🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👆🏿','1F446-1F3FF','backhand index pointing up: dark skin tone','👆️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('point_up_tone5', '👆🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖕','1F595','middle finger','🖕','{"hand","fingering","finger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hand","fingering","finger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('middle_finger', '🖕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖕🏻','1F595-1F3FB','middle finger: light skin tone','🖕',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('middle_finger_tone1', '🖕🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖕🏼','1F595-1F3FC','middle finger: medium-light skin tone','🖕',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('middle_finger_tone2', '🖕🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖕🏽','1F595-1F3FD','middle finger: medium skin tone','🖕',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('middle_finger_tone3', '🖕🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖕🏾','1F595-1F3FE','middle finger: medium-dark skin tone','🖕',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('middle_finger_tone4', '🖕🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖕🏿','1F595-1F3FF','middle finger: dark skin tone','🖕',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('middle_finger_tone5', '🖕🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👇️','1F447','backhand index pointing down','👇️','{"point","backhand","index","point down","hand","down","finger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"point","backhand","index","point down","hand","down","finger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('point_down', '👇️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👇🏻','1F447-1F3FB','backhand index pointing down: light skin tone','👇️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('point_down_tone1', '👇🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👇🏼','1F447-1F3FC','backhand index pointing down: medium-light skin tone','👇️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('point_down_tone2', '👇🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👇🏽','1F447-1F3FD','backhand index pointing down: medium skin tone','👇️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('point_down_tone3', '👇🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👇🏾','1F447-1F3FE','backhand index pointing down: medium-dark skin tone','👇️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('point_down_tone4', '👇🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👇🏿','1F447-1F3FF','backhand index pointing down: dark skin tone','👇️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('point_down_tone5', '👇🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☝️','261D','index pointing up','☝️','{"point","index","hand","finger","up"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"point","index","hand","finger","up"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('point_up_2', '☝️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☝🏻','261D-1F3FB','index pointing up: light skin tone','☝️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('point_up_2_tone1', '☝🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☝🏼','261D-1F3FC','index pointing up: medium-light skin tone','☝️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('point_up_2_tone2', '☝🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☝🏽','261D-1F3FD','index pointing up: medium skin tone','☝️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('point_up_2_tone3', '☝🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☝🏾','261D-1F3FE','index pointing up: medium-dark skin tone','☝️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('point_up_2_tone4', '☝🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☝🏿','261D-1F3FF','index pointing up: dark skin tone','☝️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('point_up_2_tone5', '☝🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫵','1FAF5','index pointing at the viewer','🫵','{"point","you"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"point","you"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('point_forward', '🫵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫵🏻','1FAF5-1F3FB','index pointing at the viewer: light skin tone','🫵',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('point_forward_tone1', '🫵🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫵🏼','1FAF5-1F3FC','index pointing at the viewer: medium-light skin tone','🫵',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('point_forward_tone2', '🫵🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫵🏽','1FAF5-1F3FD','index pointing at the viewer: medium skin tone','🫵',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('point_forward_tone3', '🫵🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫵🏾','1FAF5-1F3FE','index pointing at the viewer: medium-dark skin tone','🫵',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('point_forward_tone4', '🫵🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫵🏿','1FAF5-1F3FF','index pointing at the viewer: dark skin tone','🫵',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('point_forward_tone5', '🫵🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👍️','1F44D','thumbs up','👍️','{"yes","hand","like","thumb","+1","up","thumbs up"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"yes","hand","like","thumb","+1","up","thumbs up"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('+1', '👍️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('thumbsup', '👍️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('yes', '👍️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👍🏻','1F44D-1F3FB','thumbs up: light skin tone','👍️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('thumbsup_tone1', '👍🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('+1_tone1', '👍🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('yes_tone1', '👍🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👍🏼','1F44D-1F3FC','thumbs up: medium-light skin tone','👍️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('+1_tone2', '👍🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('yes_tone2', '👍🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('thumbsup_tone2', '👍🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👍🏽','1F44D-1F3FD','thumbs up: medium skin tone','👍️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('yes_tone3', '👍🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('+1_tone3', '👍🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('thumbsup_tone3', '👍🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👍🏾','1F44D-1F3FE','thumbs up: medium-dark skin tone','👍️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('yes_tone4', '👍🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('thumbsup_tone4', '👍🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('+1_tone4', '👍🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👍🏿','1F44D-1F3FF','thumbs up: dark skin tone','👍️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('+1_tone5', '👍🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('thumbsup_tone5', '👍🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('yes_tone5', '👍🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👎️','1F44E','thumbs down','👎️','{"thumbs down","dislike","hand","-1","thumb","no","thumbs","down","thumbs down sign"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"thumbs down","dislike","hand","-1","thumb","no","thumbs","down","thumbs down sign"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('thumbsdown', '👎️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('-1', '👎️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('no', '👎️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👎🏻','1F44E-1F3FB','thumbs down: light skin tone','👎️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('-1_tone1', '👎🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('no_tone1', '👎🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('thumbsdown_tone1', '👎🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👎🏼','1F44E-1F3FC','thumbs down: medium-light skin tone','👎️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('-1_tone2', '👎🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('no_tone2', '👎🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('thumbsdown_tone2', '👎🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👎🏽','1F44E-1F3FD','thumbs down: medium skin tone','👎️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('no_tone3', '👎🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('-1_tone3', '👎🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('thumbsdown_tone3', '👎🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👎🏾','1F44E-1F3FE','thumbs down: medium-dark skin tone','👎️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('no_tone4', '👎🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('-1_tone4', '👎🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('thumbsdown_tone4', '👎🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👎🏿','1F44E-1F3FF','thumbs down: dark skin tone','👎️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('thumbsdown_tone5', '👎🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('-1_tone5', '👎🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('no_tone5', '👎🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✊','270A','raised fist','✊','{"hand","punch","clenched","fist"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hand","punch","clenched","fist"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fist', '✊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✊🏻','270A-1F3FB','raised fist: light skin tone','✊',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('fist_tone1', '✊🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✊🏼','270A-1F3FC','raised fist: medium-light skin tone','✊',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('fist_tone2', '✊🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✊🏽','270A-1F3FD','raised fist: medium skin tone','✊',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('fist_tone3', '✊🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✊🏾','270A-1F3FE','raised fist: medium-dark skin tone','✊',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('fist_tone4', '✊🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✊🏿','270A-1F3FF','raised fist: dark skin tone','✊',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('fist_tone5', '✊🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👊','1F44A','oncoming fist','👊','{"oncoming fist","punch","bump","fist","bro","hand","clenched","brofist"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"oncoming fist","punch","bump","fist","bro","hand","clenched","brofist"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('punch', '👊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👊🏻','1F44A-1F3FB','oncoming fist: light skin tone','👊',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('punch_tone1', '👊🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👊🏼','1F44A-1F3FC','oncoming fist: medium-light skin tone','👊',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('punch_tone2', '👊🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👊🏽','1F44A-1F3FD','oncoming fist: medium skin tone','👊',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('punch_tone3', '👊🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👊🏾','1F44A-1F3FE','oncoming fist: medium-dark skin tone','👊',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('punch_tone4', '👊🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👊🏿','1F44A-1F3FF','oncoming fist: dark skin tone','👊',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('punch_tone5', '👊🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤛','1F91B','left-facing fist','🤛','{"left","fist","left-facing fist","leftwards"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"left","fist","left-facing fist","leftwards"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('left_facing_fist', '🤛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤛🏻','1F91B-1F3FB','left-facing fist: light skin tone','🤛',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('left_facing_fist_tone1', '🤛🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤛🏼','1F91B-1F3FC','left-facing fist: medium-light skin tone','🤛',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('left_facing_fist_tone2', '🤛🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤛🏽','1F91B-1F3FD','left-facing fist: medium skin tone','🤛',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('left_facing_fist_tone3', '🤛🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤛🏾','1F91B-1F3FE','left-facing fist: medium-dark skin tone','🤛',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('left_facing_fist_tone4', '🤛🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤛🏿','1F91B-1F3FF','left-facing fist: dark skin tone','🤛',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('left_facing_fist_tone5', '🤛🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤜','1F91C','right-facing fist','🤜','{"rightwards","right-facing fist","right","fist"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rightwards","right-facing fist","right","fist"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('right_facing_fist', '🤜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤜🏻','1F91C-1F3FB','right-facing fist: light skin tone','🤜',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('right_facing_fist_tone1', '🤜🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤜🏼','1F91C-1F3FC','right-facing fist: medium-light skin tone','🤜',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('right_facing_fist_tone2', '🤜🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤜🏽','1F91C-1F3FD','right-facing fist: medium skin tone','🤜',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('right_facing_fist_tone3', '🤜🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤜🏾','1F91C-1F3FE','right-facing fist: medium-dark skin tone','🤜',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('right_facing_fist_tone4', '🤜🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤜🏿','1F91C-1F3FF','right-facing fist: dark skin tone','🤜',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('right_facing_fist_tone5', '🤜🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👏','1F44F','clapping hands','👏','{"clapping","clapping hands","round of applause","hand","clap","applause","golf clap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clapping","clapping hands","round of applause","hand","clap","applause","golf clap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clapping_hands', '👏') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('clap', '👏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👏🏻','1F44F-1F3FB','clapping hands: light skin tone','👏',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('clapping_hands_tone1', '👏🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('clap_tone1', '👏🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👏🏼','1F44F-1F3FC','clapping hands: medium-light skin tone','👏',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('clapping_hands_tone2', '👏🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('clap_tone2', '👏🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👏🏽','1F44F-1F3FD','clapping hands: medium skin tone','👏',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('clap_tone3', '👏🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('clapping_hands_tone3', '👏🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👏🏾','1F44F-1F3FE','clapping hands: medium-dark skin tone','👏',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('clap_tone4', '👏🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('clapping_hands_tone4', '👏🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👏🏿','1F44F-1F3FF','clapping hands: dark skin tone','👏',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('clap_tone5', '👏🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('clapping_hands_tone5', '👏🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙌','1F64C','raising hands','🙌','{"hooray","raising","raising hands","hands","Festivus miracle","gesture","praise hands","celebration","hallelujah","hand","two hands","banzai","raised","arms in the air"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hooray","raising","raising hands","hands","Festivus miracle","gesture","praise hands","celebration","hallelujah","hand","two hands","banzai","raised","arms in the air"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('raised_hands', '🙌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙌🏻','1F64C-1F3FB','raising hands: light skin tone','🙌',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('raised_hands_tone1', '🙌🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙌🏼','1F64C-1F3FC','raising hands: medium-light skin tone','🙌',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('raised_hands_tone2', '🙌🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙌🏽','1F64C-1F3FD','raising hands: medium skin tone','🙌',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('raised_hands_tone3', '🙌🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙌🏾','1F64C-1F3FE','raising hands: medium-dark skin tone','🙌',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('raised_hands_tone4', '🙌🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙌🏿','1F64C-1F3FF','raising hands: dark skin tone','🙌',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('raised_hands_tone5', '🙌🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫶','1FAF6','heart hands','🫶','{"love"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"love"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('heart_hands', '🫶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫶🏻','1FAF6-1F3FB','heart hands: light skin tone','🫶',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('heart_hands_tone1', '🫶🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫶🏼','1FAF6-1F3FC','heart hands: medium-light skin tone','🫶',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('heart_hands_tone2', '🫶🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫶🏽','1FAF6-1F3FD','heart hands: medium skin tone','🫶',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('heart_hands_tone3', '🫶🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫶🏾','1FAF6-1F3FE','heart hands: medium-dark skin tone','🫶',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('heart_hands_tone4', '🫶🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫶🏿','1FAF6-1F3FF','heart hands: dark skin tone','🫶',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('heart_hands_tone5', '🫶🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👐','1F450','open hands','👐','{"jazz hands","hands","hug","open hands","hand","jazz","open"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"jazz hands","hands","hug","open hands","hand","jazz","open"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('open_hands', '👐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👐🏻','1F450-1F3FB','open hands: light skin tone','👐',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('open_hands_tone1', '👐🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👐🏼','1F450-1F3FC','open hands: medium-light skin tone','👐',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('open_hands_tone2', '👐🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👐🏽','1F450-1F3FD','open hands: medium skin tone','👐',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('open_hands_tone3', '👐🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👐🏾','1F450-1F3FE','open hands: medium-dark skin tone','👐',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('open_hands_tone4', '👐🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👐🏿','1F450-1F3FF','open hands: dark skin tone','👐',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('open_hands_tone5', '👐🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤲','1F932','palms up together','🤲','{"god","pray","prayer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"god","pray","prayer"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('palms_up_together', '🤲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤲🏻','1F932-1F3FB','palms up together: light skin tone','🤲',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('palms_up_together_tone1', '🤲🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤲🏼','1F932-1F3FC','palms up together: medium-light skin tone','🤲',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('palms_up_together_tone2', '🤲🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤲🏽','1F932-1F3FD','palms up together: medium skin tone','🤲',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('palms_up_together_tone3', '🤲🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤲🏾','1F932-1F3FE','palms up together: medium-dark skin tone','🤲',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('palms_up_together_tone4', '🤲🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤲🏿','1F932-1F3FF','palms up together: dark skin tone','🤲',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('palms_up_together_tone5', '🤲🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤝','1F91D','handshake','🤝','{"hello","goodbye","agreement","shaking hands","meeting","shake","hand","bye"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hello","goodbye","agreement","shaking hands","meeting","shake","hand","bye"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('handshake', '🤝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤝🏻','1F91D-1F3FB','handshake: light skin tone','🤝',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone1', '🤝🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤝🏼','1F91D-1F3FC','handshake: medium-light skin tone','🤝',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone2', '🤝🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤝🏽','1F91D-1F3FD','handshake: medium skin tone','🤝',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone3', '🤝🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤝🏾','1F91D-1F3FE','handshake: medium-dark skin tone','🤝',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone4', '🤝🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤝🏿','1F91D-1F3FF','handshake: dark skin tone','🤝',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone5', '🤝🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏻‍🫲🏼','1FAF1-1F3FB-200D-1FAF2-1F3FC','handshake: light skin tone, medium-light skin tone','🤝',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone1-2', '🫱🏻‍🫲🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏻‍🫲🏽','1FAF1-1F3FB-200D-1FAF2-1F3FD','handshake: light skin tone, medium skin tone','🤝',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone1-3', '🫱🏻‍🫲🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏻‍🫲🏾','1FAF1-1F3FB-200D-1FAF2-1F3FE','handshake: light skin tone, medium-dark skin tone','🤝',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone1-4', '🫱🏻‍🫲🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏻‍🫲🏿','1FAF1-1F3FB-200D-1FAF2-1F3FF','handshake: light skin tone, dark skin tone','🤝',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone1-5', '🫱🏻‍🫲🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏼‍🫲🏻','1FAF1-1F3FC-200D-1FAF2-1F3FB','handshake: medium-light skin tone, light skin tone','🤝',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone2-1', '🫱🏼‍🫲🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏼‍🫲🏽','1FAF1-1F3FC-200D-1FAF2-1F3FD','handshake: medium-light skin tone, medium skin tone','🤝',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone2-3', '🫱🏼‍🫲🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏼‍🫲🏾','1FAF1-1F3FC-200D-1FAF2-1F3FE','handshake: medium-light skin tone, medium-dark skin tone','🤝',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone2-4', '🫱🏼‍🫲🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏼‍🫲🏿','1FAF1-1F3FC-200D-1FAF2-1F3FF','handshake: medium-light skin tone, dark skin tone','🤝',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone2-5', '🫱🏼‍🫲🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏽‍🫲🏻','1FAF1-1F3FD-200D-1FAF2-1F3FB','handshake: medium skin tone, light skin tone','🤝',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone3-1', '🫱🏽‍🫲🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏽‍🫲🏼','1FAF1-1F3FD-200D-1FAF2-1F3FC','handshake: medium skin tone, medium-light skin tone','🤝',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone3-2', '🫱🏽‍🫲🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏽‍🫲🏾','1FAF1-1F3FD-200D-1FAF2-1F3FE','handshake: medium skin tone, medium-dark skin tone','🤝',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone3-4', '🫱🏽‍🫲🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏽‍🫲🏿','1FAF1-1F3FD-200D-1FAF2-1F3FF','handshake: medium skin tone, dark skin tone','🤝',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone3-5', '🫱🏽‍🫲🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏾‍🫲🏻','1FAF1-1F3FE-200D-1FAF2-1F3FB','handshake: medium-dark skin tone, light skin tone','🤝',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone4-1', '🫱🏾‍🫲🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏾‍🫲🏼','1FAF1-1F3FE-200D-1FAF2-1F3FC','handshake: medium-dark skin tone, medium-light skin tone','🤝',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone4-2', '🫱🏾‍🫲🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏾‍🫲🏽','1FAF1-1F3FE-200D-1FAF2-1F3FD','handshake: medium-dark skin tone, medium skin tone','🤝',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone4-3', '🫱🏾‍🫲🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏾‍🫲🏿','1FAF1-1F3FE-200D-1FAF2-1F3FF','handshake: medium-dark skin tone, dark skin tone','🤝',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone4-5', '🫱🏾‍🫲🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏿‍🫲🏻','1FAF1-1F3FF-200D-1FAF2-1F3FB','handshake: dark skin tone, light skin tone','🤝',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone5-1', '🫱🏿‍🫲🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏿‍🫲🏼','1FAF1-1F3FF-200D-1FAF2-1F3FC','handshake: dark skin tone, medium-light skin tone','🤝',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone5-2', '🫱🏿‍🫲🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏿‍🫲🏽','1FAF1-1F3FF-200D-1FAF2-1F3FD','handshake: dark skin tone, medium skin tone','🤝',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone5-3', '🫱🏿‍🫲🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫱🏿‍🫲🏾','1FAF1-1F3FF-200D-1FAF2-1F3FE','handshake: dark skin tone, medium-dark skin tone','🤝',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('handshake_tone5-4', '🫱🏿‍🫲🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙏','1F64F','folded hands','🙏','{"folded","gesture","thanks","high five","please","hand","high 5","bow","ask","pray"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"folded","gesture","thanks","high five","please","hand","high 5","bow","ask","pray"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pray', '🙏') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('folded_hands', '🙏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙏🏻','1F64F-1F3FB','folded hands: light skin tone','🙏',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('folded_hands_tone1', '🙏🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pray_tone1', '🙏🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙏🏼','1F64F-1F3FC','folded hands: medium-light skin tone','🙏',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('folded_hands_tone2', '🙏🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pray_tone2', '🙏🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙏🏽','1F64F-1F3FD','folded hands: medium skin tone','🙏',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('folded_hands_tone3', '🙏🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pray_tone3', '🙏🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙏🏾','1F64F-1F3FE','folded hands: medium-dark skin tone','🙏',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('pray_tone4', '🙏🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('folded_hands_tone4', '🙏🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙏🏿','1F64F-1F3FF','folded hands: dark skin tone','🙏',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('folded_hands_tone5', '🙏🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pray_tone5', '🙏🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✍️','270D','writing hand','✍️','{"writing hand","writing","hand","write"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"writing hand","writing","hand","write"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('writing_hand', '✍️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✍🏻','270D-1F3FB','writing hand: light skin tone','✍️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('writing_hand_tone1', '✍🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✍🏼','270D-1F3FC','writing hand: medium-light skin tone','✍️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('writing_hand_tone2', '✍🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✍🏽','270D-1F3FD','writing hand: medium skin tone','✍️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('writing_hand_tone3', '✍🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✍🏾','270D-1F3FE','writing hand: medium-dark skin tone','✍️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('writing_hand_tone4', '✍🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✍🏿','270D-1F3FF','writing hand: dark skin tone','✍️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('writing_hand_tone5', '✍🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💅','1F485','nail polish','💅','{"cosmetics","manicure","polish","care","nail"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cosmetics","manicure","polish","care","nail"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('nail_polish', '💅') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('nail_care', '💅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💅🏻','1F485-1F3FB','nail polish: light skin tone','💅',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('nail_care_tone1', '💅🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('nail_polish_tone1', '💅🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💅🏼','1F485-1F3FC','nail polish: medium-light skin tone','💅',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('nail_care_tone2', '💅🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('nail_polish_tone2', '💅🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💅🏽','1F485-1F3FD','nail polish: medium skin tone','💅',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('nail_care_tone3', '💅🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('nail_polish_tone3', '💅🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💅🏾','1F485-1F3FE','nail polish: medium-dark skin tone','💅',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('nail_care_tone4', '💅🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('nail_polish_tone4', '💅🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💅🏿','1F485-1F3FF','nail polish: dark skin tone','💅',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('nail_polish_tone5', '💅🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('nail_care_tone5', '💅🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤳','1F933','selfie','🤳','{"camera","phone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"camera","phone"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('selfie', '🤳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤳🏻','1F933-1F3FB','selfie: light skin tone','🤳',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('selfie_tone1', '🤳🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤳🏼','1F933-1F3FC','selfie: medium-light skin tone','🤳',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('selfie_tone2', '🤳🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤳🏽','1F933-1F3FD','selfie: medium skin tone','🤳',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('selfie_tone3', '🤳🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤳🏾','1F933-1F3FE','selfie: medium-dark skin tone','🤳',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('selfie_tone4', '🤳🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤳🏿','1F933-1F3FF','selfie: dark skin tone','🤳',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('selfie_tone5', '🤳🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💪','1F4AA','flexed biceps','💪','{"feats of strength","flex","feats","strong","flexed","comic","muscle","flexed biceps","biceps","strength"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"feats of strength","flex","feats","strong","flexed","comic","muscle","flexed biceps","biceps","strength"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('muscle', '💪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('right_bicep', '💪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💪🏻','1F4AA-1F3FB','flexed biceps: light skin tone','💪',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('right_bicep_tone1', '💪🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('muscle_tone1', '💪🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💪🏼','1F4AA-1F3FC','flexed biceps: medium-light skin tone','💪',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('right_bicep_tone2', '💪🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('muscle_tone2', '💪🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💪🏽','1F4AA-1F3FD','flexed biceps: medium skin tone','💪',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('muscle_tone3', '💪🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('right_bicep_tone3', '💪🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💪🏾','1F4AA-1F3FE','flexed biceps: medium-dark skin tone','💪',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('right_bicep_tone4', '💪🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('muscle_tone4', '💪🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💪🏿','1F4AA-1F3FF','flexed biceps: dark skin tone','💪',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('right_bicep_tone5', '💪🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('muscle_tone5', '💪🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦾','1F9BE','mechanical arm',default,'{"accessibility","prosthetic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility","prosthetic"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mechanical_arm', '🦾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦿','1F9BF','mechanical leg',default,'{"accessibility","prosthetic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility","prosthetic"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mechanical_leg', '🦿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦵','1F9B5','leg','🦵','{"limb","kick"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"limb","kick"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('leg', '🦵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦵🏻','1F9B5-1F3FB','leg: light skin tone','🦵',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('leg_tone1', '🦵🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦵🏼','1F9B5-1F3FC','leg: medium-light skin tone','🦵',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('leg_tone2', '🦵🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦵🏽','1F9B5-1F3FD','leg: medium skin tone','🦵',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('leg_tone3', '🦵🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦵🏾','1F9B5-1F3FE','leg: medium-dark skin tone','🦵',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('leg_tone4', '🦵🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦵🏿','1F9B5-1F3FF','leg: dark skin tone','🦵',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('leg_tone5', '🦵🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦶','1F9B6','foot','🦶','{"stomp","kick"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stomp","kick"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('foot', '🦶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦶🏻','1F9B6-1F3FB','foot: light skin tone','🦶',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('foot_tone1', '🦶🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦶🏼','1F9B6-1F3FC','foot: medium-light skin tone','🦶',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('foot_tone2', '🦶🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦶🏽','1F9B6-1F3FD','foot: medium skin tone','🦶',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('foot_tone3', '🦶🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦶🏾','1F9B6-1F3FE','foot: medium-dark skin tone','🦶',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('foot_tone4', '🦶🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦶🏿','1F9B6-1F3FF','foot: dark skin tone','🦶',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('foot_tone5', '🦶🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👂️','1F442','ear','👂️','{"listen","hear","body","ear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"listen","hear","body","ear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ear', '👂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👂🏻','1F442-1F3FB','ear: light skin tone','👂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('ear_tone1', '👂🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👂🏼','1F442-1F3FC','ear: medium-light skin tone','👂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('ear_tone2', '👂🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👂🏽','1F442-1F3FD','ear: medium skin tone','👂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('ear_tone3', '👂🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👂🏾','1F442-1F3FE','ear: medium-dark skin tone','👂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('ear_tone4', '👂🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👂🏿','1F442-1F3FF','ear: dark skin tone','👂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('ear_tone5', '👂🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦻','1F9BB','ear with hearing aid','🦻','{"accessibility","hard of hearing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility","hard of hearing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hearing_aid', '🦻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ear_with_hearing_aid', '🦻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦻🏻','1F9BB-1F3FB','ear with hearing aid: light skin tone','🦻',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('hearing_aid_tone1', '🦻🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ear_with_hearing_aid_tone1', '🦻🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦻🏼','1F9BB-1F3FC','ear with hearing aid: medium-light skin tone','🦻',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('hearing_aid_tone2', '🦻🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ear_with_hearing_aid_tone2', '🦻🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦻🏽','1F9BB-1F3FD','ear with hearing aid: medium skin tone','🦻',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('hearing_aid_tone3', '🦻🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ear_with_hearing_aid_tone3', '🦻🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦻🏾','1F9BB-1F3FE','ear with hearing aid: medium-dark skin tone','🦻',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('ear_with_hearing_aid_tone4', '🦻🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('hearing_aid_tone4', '🦻🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦻🏿','1F9BB-1F3FF','ear with hearing aid: dark skin tone','🦻',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('hearing_aid_tone5', '🦻🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ear_with_hearing_aid_tone5', '🦻🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👃','1F443','nose','👃','{"body","nose","smell"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"body","nose","smell"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('nose', '👃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👃🏻','1F443-1F3FB','nose: light skin tone','👃',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('nose_tone1', '👃🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👃🏼','1F443-1F3FC','nose: medium-light skin tone','👃',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('nose_tone2', '👃🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👃🏽','1F443-1F3FD','nose: medium skin tone','👃',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('nose_tone3', '👃🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👃🏾','1F443-1F3FE','nose: medium-dark skin tone','👃',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('nose_tone4', '👃🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👃🏿','1F443-1F3FF','nose: dark skin tone','👃',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('nose_tone5', '👃🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧠','1F9E0','brain',default,'{"clever","intelligent","brain"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clever","intelligent","brain"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('brain', '🧠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫀','1FAC0','anatomical heart',default,'{"organ","beat","pump","cardiology","anatomical","pulse","heart","blood"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"organ","beat","pump","cardiology","anatomical","pulse","heart","blood"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('anatomical_heart', '🫀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫁','1FAC1','lungs',default,'{"breath","air","organ","respiration","inhalation","exhalation","breathing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"breath","air","organ","respiration","inhalation","exhalation","breathing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lungs', '🫁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦷','1F9B7','tooth',default,'{"dentist"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dentist"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tooth', '🦷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦴','1F9B4','bone',default,'{"skeleton"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"skeleton"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bone', '🦴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👀','1F440','eyes',default,'{"eye","eyes","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"eye","eyes","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('eyes', '👀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👁️','1F441','eye',default,'{"body","eye","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"body","eye","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('eye', '👁️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👅','1F445','tongue',default,'{"kiss","licking","body","lick","tongue"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"kiss","licking","body","lick","tongue"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tongue', '👅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👄','1F444','mouth',default,'{"lips","mouth","kiss"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"lips","mouth","kiss"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lips', '👄') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mouth', '👄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫦','1FAE6','biting lip',default,'{"worried","uncomfortable","anxious","flirting","nervous","fear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"worried","uncomfortable","anxious","flirting","nervous","fear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('biting_lip', '🫦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👶','1F476','baby','👶','{"human","young","person"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"human","young","person"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('baby', '👶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👶🏻','1F476-1F3FB','baby: light skin tone','👶',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('baby_tone1', '👶🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👶🏼','1F476-1F3FC','baby: medium-light skin tone','👶',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('baby_tone2', '👶🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👶🏽','1F476-1F3FD','baby: medium skin tone','👶',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('baby_tone3', '👶🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👶🏾','1F476-1F3FE','baby: medium-dark skin tone','👶',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('baby_tone4', '👶🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👶🏿','1F476-1F3FF','baby: dark skin tone','👶',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('baby_tone5', '👶🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧒','1F9D2','child','🧒','{"gender-neutral","unspecified gender","person","young","human"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gender-neutral","unspecified gender","person","young","human"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('child', '🧒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧒🏻','1F9D2-1F3FB','child: light skin tone','🧒',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('child_tone1', '🧒🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧒🏼','1F9D2-1F3FC','child: medium-light skin tone','🧒',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('child_tone2', '🧒🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧒🏽','1F9D2-1F3FD','child: medium skin tone','🧒',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('child_tone3', '🧒🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧒🏾','1F9D2-1F3FE','child: medium-dark skin tone','🧒',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('child_tone4', '🧒🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧒🏿','1F9D2-1F3FF','child: dark skin tone','🧒',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('child_tone5', '🧒🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👦','1F466','boy','👦','{"human","young","person"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"human","young","person"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('boy', '👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👦🏻','1F466-1F3FB','boy: light skin tone','👦',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('boy_tone1', '👦🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👦🏼','1F466-1F3FC','boy: medium-light skin tone','👦',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('boy_tone2', '👦🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👦🏽','1F466-1F3FD','boy: medium skin tone','👦',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('boy_tone3', '👦🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👦🏾','1F466-1F3FE','boy: medium-dark skin tone','👦',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('boy_tone4', '👦🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👦🏿','1F466-1F3FF','boy: dark skin tone','👦',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('boy_tone5', '👦🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👧','1F467','girl','👧','{"person","young","zodiac","human","virgo"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"person","young","zodiac","human","virgo"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('girl', '👧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👧🏻','1F467-1F3FB','girl: light skin tone','👧',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('girl_tone1', '👧🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👧🏼','1F467-1F3FC','girl: medium-light skin tone','👧',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('girl_tone2', '👧🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👧🏽','1F467-1F3FD','girl: medium skin tone','👧',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('girl_tone3', '👧🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👧🏾','1F467-1F3FE','girl: medium-dark skin tone','👧',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('girl_tone4', '👧🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👧🏿','1F467-1F3FF','girl: dark skin tone','👧',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('girl_tone5', '👧🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑','1F9D1','person','🧑','{"gender-neutral","unspecified gender","adult","person","human"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gender-neutral","unspecified gender","adult","person","human"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('adult', '🧑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻','1F9D1-1F3FB','person: light skin tone','🧑',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('adult_tone1', '🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼','1F9D1-1F3FC','person: medium-light skin tone','🧑',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('adult_tone2', '🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽','1F9D1-1F3FD','person: medium skin tone','🧑',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('adult_tone3', '🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾','1F9D1-1F3FE','person: medium-dark skin tone','🧑',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('adult_tone4', '🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿','1F9D1-1F3FF','person: dark skin tone','🧑',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('adult_tone5', '🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱','1F471','person: blond hair','👱','{"blond","blond-haired person","hair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"blond","blond-haired person","hair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('blond_haired', '👱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏻','1F471-1F3FB','person: light skin tone, blond hair','👱',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('blond_haired_tone1', '👱🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏼','1F471-1F3FC','person: medium-light skin tone, blond hair','👱',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('blond_haired_tone2', '👱🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏽','1F471-1F3FD','person: medium skin tone, blond hair','👱',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('blond_haired_tone3', '👱🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏾','1F471-1F3FE','person: medium-dark skin tone, blond hair','👱',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('blond_haired_tone4', '👱🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏿','1F471-1F3FF','person: dark skin tone, blond hair','👱',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('blond_haired_tone5', '👱🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨','1F468','man','👨','{"adult","person","human"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"adult","person","human"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man', '👨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻','1F468-1F3FB','man: light skin tone','👨',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_tone1', '👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼','1F468-1F3FC','man: medium-light skin tone','👨',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_tone2', '👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽','1F468-1F3FD','man: medium skin tone','👨',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_tone3', '👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾','1F468-1F3FE','man: medium-dark skin tone','👨',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_tone4', '👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿','1F468-1F3FF','man: dark skin tone','👨',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_tone5', '👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔','1F9D4','person: beard','🧔','{"person","beard","facial hair","man","manly"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"person","beard","facial hair","man","manly"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_bearded', '🧔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏻','1F9D4-1F3FB','person: light skin tone, beard','🧔',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_bearded_tone1', '🧔🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏼','1F9D4-1F3FC','person: medium-light skin tone, beard','🧔',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_bearded_tone2', '🧔🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏽','1F9D4-1F3FD','person: medium skin tone, beard','🧔',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_bearded_tone3', '🧔🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏾','1F9D4-1F3FE','person: medium-dark skin tone, beard','🧔',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_bearded_tone4', '🧔🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏿','1F9D4-1F3FF','person: dark skin tone, beard','🧔',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_bearded_tone5', '🧔🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔‍♂️','1F9D4-200D-2642-FE0F','man: beard','🧔‍♂️','{"man","beard"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","beard"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_bearded', '🧔‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏻‍♂️','1F9D4-1F3FB-200D-2642-FE0F','man: light skin tone, beard','🧔‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_bearded_tone1', '🧔🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏼‍♂️','1F9D4-1F3FC-200D-2642-FE0F','man: medium-light skin tone, beard','🧔‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_bearded_tone2', '🧔🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏽‍♂️','1F9D4-1F3FD-200D-2642-FE0F','man: medium skin tone, beard','🧔‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_bearded_tone3', '🧔🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏾‍♂️','1F9D4-1F3FE-200D-2642-FE0F','man: medium-dark skin tone, beard','🧔‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_bearded_tone4', '🧔🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏿‍♂️','1F9D4-1F3FF-200D-2642-FE0F','man: dark skin tone, beard','🧔‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_bearded_tone5', '🧔🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔‍♀️','1F9D4-200D-2640-FE0F','woman: beard','🧔‍♀️','{"woman","beard"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","beard"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_bearded', '🧔‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏻‍♀️','1F9D4-1F3FB-200D-2640-FE0F','woman: light skin tone, beard','🧔‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_bearded_tone1', '🧔🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏼‍♀️','1F9D4-1F3FC-200D-2640-FE0F','woman: medium-light skin tone, beard','🧔‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_bearded_tone2', '🧔🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏽‍♀️','1F9D4-1F3FD-200D-2640-FE0F','woman: medium skin tone, beard','🧔‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_bearded_tone3', '🧔🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏾‍♀️','1F9D4-1F3FE-200D-2640-FE0F','woman: medium-dark skin tone, beard','🧔‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_bearded_tone4', '🧔🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧔🏿‍♀️','1F9D4-1F3FF-200D-2640-FE0F','woman: dark skin tone, beard','🧔‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_bearded_tone5', '🧔🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🦰','1F468-200D-1F9B0','man: red hair','👨‍🦰','{"man","red hair","adult"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","red hair","adult"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_red_haired', '👨‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🦰','1F468-1F3FB-200D-1F9B0','man: light skin tone, red hair','👨‍🦰',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_red_haired_tone1', '👨🏻‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🦰','1F468-1F3FC-200D-1F9B0','man: medium-light skin tone, red hair','👨‍🦰',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_red_haired_tone2', '👨🏼‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🦰','1F468-1F3FD-200D-1F9B0','man: medium skin tone, red hair','👨‍🦰',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_red_haired_tone3', '👨🏽‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🦰','1F468-1F3FE-200D-1F9B0','man: medium-dark skin tone, red hair','👨‍🦰',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_red_haired_tone4', '👨🏾‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🦰','1F468-1F3FF-200D-1F9B0','man: dark skin tone, red hair','👨‍🦰',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_red_haired_tone5', '👨🏿‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🦱','1F468-200D-1F9B1','man: curly hair','👨‍🦱','{"man","adult","curly hair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","adult","curly hair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_curly_haired', '👨‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🦱','1F468-1F3FB-200D-1F9B1','man: light skin tone, curly hair','👨‍🦱',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_curly_haired_tone1', '👨🏻‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🦱','1F468-1F3FC-200D-1F9B1','man: medium-light skin tone, curly hair','👨‍🦱',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_curly_haired_tone2', '👨🏼‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🦱','1F468-1F3FD-200D-1F9B1','man: medium skin tone, curly hair','👨‍🦱',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_curly_haired_tone3', '👨🏽‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🦱','1F468-1F3FE-200D-1F9B1','man: medium-dark skin tone, curly hair','👨‍🦱',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_curly_haired_tone4', '👨🏾‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🦱','1F468-1F3FF-200D-1F9B1','man: dark skin tone, curly hair','👨‍🦱',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_curly_haired_tone5', '👨🏿‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🦳','1F468-200D-1F9B3','man: white hair','👨‍🦳','{"man","adult","white hair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","adult","white hair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_white_haired', '👨‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🦳','1F468-1F3FB-200D-1F9B3','man: light skin tone, white hair','👨‍🦳',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_white_haired_tone1', '👨🏻‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🦳','1F468-1F3FC-200D-1F9B3','man: medium-light skin tone, white hair','👨‍🦳',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_white_haired_tone2', '👨🏼‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🦳','1F468-1F3FD-200D-1F9B3','man: medium skin tone, white hair','👨‍🦳',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_white_haired_tone3', '👨🏽‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🦳','1F468-1F3FE-200D-1F9B3','man: medium-dark skin tone, white hair','👨‍🦳',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_white_haired_tone4', '👨🏾‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🦳','1F468-1F3FF-200D-1F9B3','man: dark skin tone, white hair','👨‍🦳',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_white_haired_tone5', '👨🏿‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🦲','1F468-200D-1F9B2','man: bald','👨‍🦲','{"man","adult","bald"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","adult","bald"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_bald', '👨‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🦲','1F468-1F3FB-200D-1F9B2','man: light skin tone, bald','👨‍🦲',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_bald_tone1', '👨🏻‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🦲','1F468-1F3FC-200D-1F9B2','man: medium-light skin tone, bald','👨‍🦲',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_bald_tone2', '👨🏼‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🦲','1F468-1F3FD-200D-1F9B2','man: medium skin tone, bald','👨‍🦲',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_bald_tone3', '👨🏽‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🦲','1F468-1F3FE-200D-1F9B2','man: medium-dark skin tone, bald','👨‍🦲',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_bald_tone4', '👨🏾‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🦲','1F468-1F3FF-200D-1F9B2','man: dark skin tone, bald','👨‍🦲',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_bald_tone5', '👨🏿‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩','1F469','woman','👩','{"adult","person","human"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"adult","person","human"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman', '👩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻','1F469-1F3FB','woman: light skin tone','👩',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_tone1', '👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼','1F469-1F3FC','woman: medium-light skin tone','👩',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_tone2', '👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽','1F469-1F3FD','woman: medium skin tone','👩',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_tone3', '👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾','1F469-1F3FE','woman: medium-dark skin tone','👩',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_tone4', '👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿','1F469-1F3FF','woman: dark skin tone','👩',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_tone5', '👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🦰','1F469-200D-1F9B0','woman: red hair','👩‍🦰','{"red hair","adult","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"red hair","adult","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_red_haired', '👩‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🦰','1F469-1F3FB-200D-1F9B0','woman: light skin tone, red hair','👩‍🦰',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_red_haired_tone1', '👩🏻‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🦰','1F469-1F3FC-200D-1F9B0','woman: medium-light skin tone, red hair','👩‍🦰',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_red_haired_tone2', '👩🏼‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🦰','1F469-1F3FD-200D-1F9B0','woman: medium skin tone, red hair','👩‍🦰',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_red_haired_tone3', '👩🏽‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🦰','1F469-1F3FE-200D-1F9B0','woman: medium-dark skin tone, red hair','👩‍🦰',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_red_haired_tone4', '👩🏾‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🦰','1F469-1F3FF-200D-1F9B0','woman: dark skin tone, red hair','👩‍🦰',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_red_haired_tone5', '👩🏿‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🦰','1F9D1-200D-1F9B0','person: red hair','🧑‍🦰','{"gender-neutral","unspecified gender","red hair","adult","person"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gender-neutral","unspecified gender","red hair","adult","person"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('red_haired', '🧑‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🦰','1F9D1-1F3FB-200D-1F9B0','person: light skin tone, red hair','🧑‍🦰',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('red_haired_tone1', '🧑🏻‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🦰','1F9D1-1F3FC-200D-1F9B0','person: medium-light skin tone, red hair','🧑‍🦰',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('red_haired_tone2', '🧑🏼‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🦰','1F9D1-1F3FD-200D-1F9B0','person: medium skin tone, red hair','🧑‍🦰',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('red_haired_tone3', '🧑🏽‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🦰','1F9D1-1F3FE-200D-1F9B0','person: medium-dark skin tone, red hair','🧑‍🦰',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('red_haired_tone4', '🧑🏾‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🦰','1F9D1-1F3FF-200D-1F9B0','person: dark skin tone, red hair','🧑‍🦰',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('red_haired_tone5', '🧑🏿‍🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🦱','1F469-200D-1F9B1','woman: curly hair','👩‍🦱','{"woman","adult","curly hair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","adult","curly hair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_curly_haired', '👩‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🦱','1F469-1F3FB-200D-1F9B1','woman: light skin tone, curly hair','👩‍🦱',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_curly_haired_tone1', '👩🏻‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🦱','1F469-1F3FC-200D-1F9B1','woman: medium-light skin tone, curly hair','👩‍🦱',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_curly_haired_tone2', '👩🏼‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🦱','1F469-1F3FD-200D-1F9B1','woman: medium skin tone, curly hair','👩‍🦱',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_curly_haired_tone3', '👩🏽‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🦱','1F469-1F3FE-200D-1F9B1','woman: medium-dark skin tone, curly hair','👩‍🦱',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_curly_haired_tone4', '👩🏾‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🦱','1F469-1F3FF-200D-1F9B1','woman: dark skin tone, curly hair','👩‍🦱',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_curly_haired_tone5', '👩🏿‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🦱','1F9D1-200D-1F9B1','person: curly hair','🧑‍🦱','{"gender-neutral","unspecified gender","adult","person","curly hair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gender-neutral","unspecified gender","adult","person","curly hair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('curly_haired', '🧑‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🦱','1F9D1-1F3FB-200D-1F9B1','person: light skin tone, curly hair','🧑‍🦱',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('curly_haired_tone1', '🧑🏻‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🦱','1F9D1-1F3FC-200D-1F9B1','person: medium-light skin tone, curly hair','🧑‍🦱',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('curly_haired_tone2', '🧑🏼‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🦱','1F9D1-1F3FD-200D-1F9B1','person: medium skin tone, curly hair','🧑‍🦱',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('curly_haired_tone3', '🧑🏽‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🦱','1F9D1-1F3FE-200D-1F9B1','person: medium-dark skin tone, curly hair','🧑‍🦱',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('curly_haired_tone4', '🧑🏾‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🦱','1F9D1-1F3FF-200D-1F9B1','person: dark skin tone, curly hair','🧑‍🦱',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('curly_haired_tone5', '🧑🏿‍🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🦳','1F469-200D-1F9B3','woman: white hair','👩‍🦳','{"adult","white hair","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"adult","white hair","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_white_haired', '👩‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🦳','1F469-1F3FB-200D-1F9B3','woman: light skin tone, white hair','👩‍🦳',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_white_haired_tone1', '👩🏻‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🦳','1F469-1F3FC-200D-1F9B3','woman: medium-light skin tone, white hair','👩‍🦳',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_white_haired_tone2', '👩🏼‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🦳','1F469-1F3FD-200D-1F9B3','woman: medium skin tone, white hair','👩‍🦳',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_white_haired_tone3', '👩🏽‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🦳','1F469-1F3FE-200D-1F9B3','woman: medium-dark skin tone, white hair','👩‍🦳',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_white_haired_tone4', '👩🏾‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🦳','1F469-1F3FF-200D-1F9B3','woman: dark skin tone, white hair','👩‍🦳',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_white_haired_tone5', '👩🏿‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🦳','1F9D1-200D-1F9B3','person: white hair','🧑‍🦳','{"gender-neutral","unspecified gender","adult","person","white hair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gender-neutral","unspecified gender","adult","person","white hair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_haired', '🧑‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🦳','1F9D1-1F3FB-200D-1F9B3','person: light skin tone, white hair','🧑‍🦳',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('white_haired_tone1', '🧑🏻‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🦳','1F9D1-1F3FC-200D-1F9B3','person: medium-light skin tone, white hair','🧑‍🦳',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('white_haired_tone2', '🧑🏼‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🦳','1F9D1-1F3FD-200D-1F9B3','person: medium skin tone, white hair','🧑‍🦳',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('white_haired_tone3', '🧑🏽‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🦳','1F9D1-1F3FE-200D-1F9B3','person: medium-dark skin tone, white hair','🧑‍🦳',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('white_haired_tone4', '🧑🏾‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🦳','1F9D1-1F3FF-200D-1F9B3','person: dark skin tone, white hair','🧑‍🦳',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('white_haired_tone5', '🧑🏿‍🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🦲','1F469-200D-1F9B2','woman: bald','👩‍🦲','{"adult","bald","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"adult","bald","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_bald', '👩‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🦲','1F469-1F3FB-200D-1F9B2','woman: light skin tone, bald','👩‍🦲',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_bald_tone1', '👩🏻‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🦲','1F469-1F3FC-200D-1F9B2','woman: medium-light skin tone, bald','👩‍🦲',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_bald_tone2', '👩🏼‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🦲','1F469-1F3FD-200D-1F9B2','woman: medium skin tone, bald','👩‍🦲',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_bald_tone3', '👩🏽‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🦲','1F469-1F3FE-200D-1F9B2','woman: medium-dark skin tone, bald','👩‍🦲',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_bald_tone4', '👩🏾‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🦲','1F469-1F3FF-200D-1F9B2','woman: dark skin tone, bald','👩‍🦲',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_bald_tone5', '👩🏿‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🦲','1F9D1-200D-1F9B2','person: bald','🧑‍🦲','{"gender-neutral","unspecified gender","adult","person","bald"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gender-neutral","unspecified gender","adult","person","bald"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bald', '🧑‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🦲','1F9D1-1F3FB-200D-1F9B2','person: light skin tone, bald','🧑‍🦲',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('bald_tone1', '🧑🏻‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🦲','1F9D1-1F3FC-200D-1F9B2','person: medium-light skin tone, bald','🧑‍🦲',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('bald_tone2', '🧑🏼‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🦲','1F9D1-1F3FD-200D-1F9B2','person: medium skin tone, bald','🧑‍🦲',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('bald_tone3', '🧑🏽‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🦲','1F9D1-1F3FE-200D-1F9B2','person: medium-dark skin tone, bald','🧑‍🦲',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('bald_tone4', '🧑🏾‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🦲','1F9D1-1F3FF-200D-1F9B2','person: dark skin tone, bald','🧑‍🦲',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('bald_tone5', '🧑🏿‍🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱‍♀️','1F471-200D-2640-FE0F','woman: blond hair','👱‍♀️','{"woman","blonde","hair","blond-haired woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","blonde","hair","blond-haired woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_blond_haired', '👱‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏻‍♀️','1F471-1F3FB-200D-2640-FE0F','woman: light skin tone, blond hair','👱‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_blond_haired_tone1', '👱🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏼‍♀️','1F471-1F3FC-200D-2640-FE0F','woman: medium-light skin tone, blond hair','👱‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_blond_haired_tone2', '👱🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏽‍♀️','1F471-1F3FD-200D-2640-FE0F','woman: medium skin tone, blond hair','👱‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_blond_haired_tone3', '👱🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏾‍♀️','1F471-1F3FE-200D-2640-FE0F','woman: medium-dark skin tone, blond hair','👱‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_blond_haired_tone4', '👱🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏿‍♀️','1F471-1F3FF-200D-2640-FE0F','woman: dark skin tone, blond hair','👱‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_blond_haired_tone5', '👱🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱‍♂️','1F471-200D-2642-FE0F','man: blond hair','👱‍♂️','{"blond","man","hair","blond-haired man"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"blond","man","hair","blond-haired man"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_blond_haired', '👱‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏻‍♂️','1F471-1F3FB-200D-2642-FE0F','man: light skin tone, blond hair','👱‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_blond_haired_tone1', '👱🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏼‍♂️','1F471-1F3FC-200D-2642-FE0F','man: medium-light skin tone, blond hair','👱‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_blond_haired_tone2', '👱🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏽‍♂️','1F471-1F3FD-200D-2642-FE0F','man: medium skin tone, blond hair','👱‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_blond_haired_tone3', '👱🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏾‍♂️','1F471-1F3FE-200D-2642-FE0F','man: medium-dark skin tone, blond hair','👱‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_blond_haired_tone4', '👱🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👱🏿‍♂️','1F471-1F3FF-200D-2642-FE0F','man: dark skin tone, blond hair','👱‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_blond_haired_tone5', '👱🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧓','1F9D3','older person','🧓','{"gender-neutral","unspecified gender","adult","person","human","old"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gender-neutral","unspecified gender","adult","person","human","old"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('older_adult', '🧓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧓🏻','1F9D3-1F3FB','older person: light skin tone','🧓',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('older_adult_tone1', '🧓🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧓🏼','1F9D3-1F3FC','older person: medium-light skin tone','🧓',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('older_adult_tone2', '🧓🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧓🏽','1F9D3-1F3FD','older person: medium skin tone','🧓',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('older_adult_tone3', '🧓🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧓🏾','1F9D3-1F3FE','older person: medium-dark skin tone','🧓',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('older_adult_tone4', '🧓🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧓🏿','1F9D3-1F3FF','older person: dark skin tone','🧓',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('older_adult_tone5', '🧓🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👴','1F474','old man','👴','{"adult","person","man","grandpa","human","old"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"adult","person","man","grandpa","human","old"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('older_man', '👴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👴🏻','1F474-1F3FB','old man: light skin tone','👴',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('older_man_tone1', '👴🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👴🏼','1F474-1F3FC','old man: medium-light skin tone','👴',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('older_man_tone2', '👴🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👴🏽','1F474-1F3FD','old man: medium skin tone','👴',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('older_man_tone3', '👴🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👴🏾','1F474-1F3FE','old man: medium-dark skin tone','👴',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('older_man_tone4', '👴🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👴🏿','1F474-1F3FF','old man: dark skin tone','👴',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('older_man_tone5', '👴🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👵','1F475','old woman','👵','{"adult","person","woman","human","old","grandma"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"adult","person","woman","human","old","grandma"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('older_woman', '👵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👵🏻','1F475-1F3FB','old woman: light skin tone','👵',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('older_woman_tone1', '👵🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👵🏼','1F475-1F3FC','old woman: medium-light skin tone','👵',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('older_woman_tone2', '👵🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👵🏽','1F475-1F3FD','old woman: medium skin tone','👵',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('older_woman_tone3', '👵🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👵🏾','1F475-1F3FE','old woman: medium-dark skin tone','👵',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('older_woman_tone4', '👵🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👵🏿','1F475-1F3FF','old woman: dark skin tone','👵',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('older_woman_tone5', '👵🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍','1F64D','person frowning','🙍','{"angry","negative","face","gesture","frown","head"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"angry","negative","face","gesture","frown","head"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_frowning', '🙍') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏻','1F64D-1F3FB','person frowning: light skin tone','🙍',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_frowning_tone1', '🙍🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏼','1F64D-1F3FC','person frowning: medium-light skin tone','🙍',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_frowning_tone2', '🙍🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏽','1F64D-1F3FD','person frowning: medium skin tone','🙍',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_frowning_tone3', '🙍🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏾','1F64D-1F3FE','person frowning: medium-dark skin tone','🙍',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_frowning_tone4', '🙍🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏿','1F64D-1F3FF','person frowning: dark skin tone','🙍',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_frowning_tone5', '🙍🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍‍♂️','1F64D-200D-2642-FE0F','man frowning','🙍‍♂️','{"man","gesture","frowning"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","gesture","frowning"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_frowning', '🙍‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏻‍♂️','1F64D-1F3FB-200D-2642-FE0F','man frowning: light skin tone','🙍‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_frowning_tone1', '🙍🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏼‍♂️','1F64D-1F3FC-200D-2642-FE0F','man frowning: medium-light skin tone','🙍‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_frowning_tone2', '🙍🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏽‍♂️','1F64D-1F3FD-200D-2642-FE0F','man frowning: medium skin tone','🙍‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_frowning_tone3', '🙍🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏾‍♂️','1F64D-1F3FE-200D-2642-FE0F','man frowning: medium-dark skin tone','🙍‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_frowning_tone4', '🙍🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏿‍♂️','1F64D-1F3FF-200D-2642-FE0F','man frowning: dark skin tone','🙍‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_frowning_tone5', '🙍🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍‍♀️','1F64D-200D-2640-FE0F','woman frowning','🙍‍♀️','{"gesture","frowning","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gesture","frowning","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_frowning', '🙍‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏻‍♀️','1F64D-1F3FB-200D-2640-FE0F','woman frowning: light skin tone','🙍‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_frowning_tone1', '🙍🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏼‍♀️','1F64D-1F3FC-200D-2640-FE0F','woman frowning: medium-light skin tone','🙍‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_frowning_tone2', '🙍🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏽‍♀️','1F64D-1F3FD-200D-2640-FE0F','woman frowning: medium skin tone','🙍‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_frowning_tone3', '🙍🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏾‍♀️','1F64D-1F3FE-200D-2640-FE0F','woman frowning: medium-dark skin tone','🙍‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_frowning_tone4', '🙍🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙍🏿‍♀️','1F64D-1F3FF-200D-2640-FE0F','woman frowning: dark skin tone','🙍‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_frowning_tone5', '🙍🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎','1F64E','person pouting','🙎','{"negative","face","gesture","pouting","sad","head"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"negative","face","gesture","pouting","sad","head"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_pouting', '🙎') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pouting', '🙎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏻','1F64E-1F3FB','person pouting: light skin tone','🙎',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_pouting_tone1', '🙎🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pouting_tone1', '🙎🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏼','1F64E-1F3FC','person pouting: medium-light skin tone','🙎',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('pouting_tone2', '🙎🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_pouting_tone2', '🙎🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏽','1F64E-1F3FD','person pouting: medium skin tone','🙎',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_pouting_tone3', '🙎🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pouting_tone3', '🙎🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏾','1F64E-1F3FE','person pouting: medium-dark skin tone','🙎',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_pouting_tone4', '🙎🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pouting_tone4', '🙎🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏿','1F64E-1F3FF','person pouting: dark skin tone','🙎',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_pouting_tone5', '🙎🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pouting_tone5', '🙎🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎‍♂️','1F64E-200D-2642-FE0F','man pouting','🙎‍♂️','{"man","gesture","pouting"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","gesture","pouting"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_pouting', '🙎‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏻‍♂️','1F64E-1F3FB-200D-2642-FE0F','man pouting: light skin tone','🙎‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_pouting_tone1', '🙎🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏼‍♂️','1F64E-1F3FC-200D-2642-FE0F','man pouting: medium-light skin tone','🙎‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_pouting_tone2', '🙎🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏽‍♂️','1F64E-1F3FD-200D-2642-FE0F','man pouting: medium skin tone','🙎‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_pouting_tone3', '🙎🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏾‍♂️','1F64E-1F3FE-200D-2642-FE0F','man pouting: medium-dark skin tone','🙎‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_pouting_tone4', '🙎🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏿‍♂️','1F64E-1F3FF-200D-2642-FE0F','man pouting: dark skin tone','🙎‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_pouting_tone5', '🙎🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎‍♀️','1F64E-200D-2640-FE0F','woman pouting','🙎‍♀️','{"woman","gesture","pouting"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","gesture","pouting"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_pouting', '🙎‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏻‍♀️','1F64E-1F3FB-200D-2640-FE0F','woman pouting: light skin tone','🙎‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_pouting_tone1', '🙎🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏼‍♀️','1F64E-1F3FC-200D-2640-FE0F','woman pouting: medium-light skin tone','🙎‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_pouting_tone2', '🙎🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏽‍♀️','1F64E-1F3FD-200D-2640-FE0F','woman pouting: medium skin tone','🙎‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_pouting_tone3', '🙎🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏾‍♀️','1F64E-1F3FE-200D-2640-FE0F','woman pouting: medium-dark skin tone','🙎‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_pouting_tone4', '🙎🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙎🏿‍♀️','1F64E-1F3FF-200D-2640-FE0F','woman pouting: dark skin tone','🙎‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_pouting_tone5', '🙎🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅','1F645','person gesturing NO','🙅','{"face","gesture","hand","human","person gesturing no","head","forbidden","prohibited"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","gesture","hand","human","person gesturing no","head","forbidden","prohibited"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_gesturing_no', '🙅') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('no_good', '🙅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏻','1F645-1F3FB','person gesturing NO: light skin tone','🙅',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_gesturing_no_tone1', '🙅🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('no_good_tone1', '🙅🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏼','1F645-1F3FC','person gesturing NO: medium-light skin tone','🙅',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('no_good_tone2', '🙅🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_gesturing_no_tone2', '🙅🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏽','1F645-1F3FD','person gesturing NO: medium skin tone','🙅',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_gesturing_no_tone3', '🙅🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('no_good_tone3', '🙅🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏾','1F645-1F3FE','person gesturing NO: medium-dark skin tone','🙅',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_gesturing_no_tone4', '🙅🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('no_good_tone4', '🙅🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏿','1F645-1F3FF','person gesturing NO: dark skin tone','🙅',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('no_good_tone5', '🙅🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_gesturing_no_tone5', '🙅🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅‍♂️','1F645-200D-2642-FE0F','man gesturing NO','🙅‍♂️','{"gesture","man","hand","man gesturing no","forbidden","prohibited"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gesture","man","hand","man gesturing no","forbidden","prohibited"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_gesturing_no', '🙅‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏻‍♂️','1F645-1F3FB-200D-2642-FE0F','man gesturing NO: light skin tone','🙅‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_gesturing_no_tone1', '🙅🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏼‍♂️','1F645-1F3FC-200D-2642-FE0F','man gesturing NO: medium-light skin tone','🙅‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_gesturing_no_tone2', '🙅🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏽‍♂️','1F645-1F3FD-200D-2642-FE0F','man gesturing NO: medium skin tone','🙅‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_gesturing_no_tone3', '🙅🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏾‍♂️','1F645-1F3FE-200D-2642-FE0F','man gesturing NO: medium-dark skin tone','🙅‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_gesturing_no_tone4', '🙅🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏿‍♂️','1F645-1F3FF-200D-2642-FE0F','man gesturing NO: dark skin tone','🙅‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_gesturing_no_tone5', '🙅🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅‍♀️','1F645-200D-2640-FE0F','woman gesturing NO','🙅‍♀️','{"woman","gesture","hand","woman gesturing no","forbidden","prohibited"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","gesture","hand","woman gesturing no","forbidden","prohibited"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_gesturing_no', '🙅‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏻‍♀️','1F645-1F3FB-200D-2640-FE0F','woman gesturing NO: light skin tone','🙅‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_gesturing_no_tone1', '🙅🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏼‍♀️','1F645-1F3FC-200D-2640-FE0F','woman gesturing NO: medium-light skin tone','🙅‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_gesturing_no_tone2', '🙅🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏽‍♀️','1F645-1F3FD-200D-2640-FE0F','woman gesturing NO: medium skin tone','🙅‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_gesturing_no_tone3', '🙅🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏾‍♀️','1F645-1F3FE-200D-2640-FE0F','woman gesturing NO: medium-dark skin tone','🙅‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_gesturing_no_tone4', '🙅🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙅🏿‍♀️','1F645-1F3FF-200D-2640-FE0F','woman gesturing NO: dark skin tone','🙅‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_gesturing_no_tone5', '🙅🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆','1F646','person gesturing OK','🙆','{"face","gesture","ok","hand","human","person gesturing ok","head"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","gesture","ok","hand","human","person gesturing ok","head"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('all_good', '🙆') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_gesturing_ok', '🙆') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏻','1F646-1F3FB','person gesturing OK: light skin tone','🙆',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('all_good_tone1', '🙆🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_gesturing_ok_tone1', '🙆🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏼','1F646-1F3FC','person gesturing OK: medium-light skin tone','🙆',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('all_good_tone2', '🙆🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_gesturing_ok_tone2', '🙆🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏽','1F646-1F3FD','person gesturing OK: medium skin tone','🙆',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_gesturing_ok_tone3', '🙆🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('all_good_tone3', '🙆🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏾','1F646-1F3FE','person gesturing OK: medium-dark skin tone','🙆',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_gesturing_ok_tone4', '🙆🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('all_good_tone4', '🙆🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏿','1F646-1F3FF','person gesturing OK: dark skin tone','🙆',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('all_good_tone5', '🙆🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_gesturing_ok_tone5', '🙆🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆‍♂️','1F646-200D-2642-FE0F','man gesturing OK','🙆‍♂️','{"gesture","ok","man gesturing ok","man","hand"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gesture","ok","man gesturing ok","man","hand"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_gesturing_ok', '🙆‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏻‍♂️','1F646-1F3FB-200D-2642-FE0F','man gesturing OK: light skin tone','🙆‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_gesturing_ok_tone1', '🙆🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏼‍♂️','1F646-1F3FC-200D-2642-FE0F','man gesturing OK: medium-light skin tone','🙆‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_gesturing_ok_tone2', '🙆🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏽‍♂️','1F646-1F3FD-200D-2642-FE0F','man gesturing OK: medium skin tone','🙆‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_gesturing_ok_tone3', '🙆🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏾‍♂️','1F646-1F3FE-200D-2642-FE0F','man gesturing OK: medium-dark skin tone','🙆‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_gesturing_ok_tone4', '🙆🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏿‍♂️','1F646-1F3FF-200D-2642-FE0F','man gesturing OK: dark skin tone','🙆‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_gesturing_ok_tone5', '🙆🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆‍♀️','1F646-200D-2640-FE0F','woman gesturing OK','🙆‍♀️','{"woman","woman gesturing ok","gesture","ok","hand"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","woman gesturing ok","gesture","ok","hand"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_gesturing_ok', '🙆‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏻‍♀️','1F646-1F3FB-200D-2640-FE0F','woman gesturing OK: light skin tone','🙆‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_gesturing_ok_tone1', '🙆🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏼‍♀️','1F646-1F3FC-200D-2640-FE0F','woman gesturing OK: medium-light skin tone','🙆‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_gesturing_ok_tone2', '🙆🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏽‍♀️','1F646-1F3FD-200D-2640-FE0F','woman gesturing OK: medium skin tone','🙆‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_gesturing_ok_tone3', '🙆🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏾‍♀️','1F646-1F3FE-200D-2640-FE0F','woman gesturing OK: medium-dark skin tone','🙆‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_gesturing_ok_tone4', '🙆🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙆🏿‍♀️','1F646-1F3FF-200D-2640-FE0F','woman gesturing OK: dark skin tone','🙆‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_gesturing_ok_tone5', '🙆🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁','1F481','person tipping hand','💁','{"face","information","hand","human","tipping","head","sassy","help"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","information","hand","human","tipping","head","sassy","help"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_tipping_hand', '💁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏻','1F481-1F3FB','person tipping hand: light skin tone','💁',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_tipping_hand_tone1', '💁🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏼','1F481-1F3FC','person tipping hand: medium-light skin tone','💁',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_tipping_hand_tone2', '💁🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏽','1F481-1F3FD','person tipping hand: medium skin tone','💁',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_tipping_hand_tone3', '💁🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏾','1F481-1F3FE','person tipping hand: medium-dark skin tone','💁',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_tipping_hand_tone4', '💁🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏿','1F481-1F3FF','person tipping hand: dark skin tone','💁',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_tipping_hand_tone5', '💁🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁‍♂️','1F481-200D-2642-FE0F','man tipping hand','💁‍♂️','{"man","sassy","tipping hand"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","sassy","tipping hand"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_tipping_hand', '💁‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏻‍♂️','1F481-1F3FB-200D-2642-FE0F','man tipping hand: light skin tone','💁‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_tipping_hand_tone1', '💁🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏼‍♂️','1F481-1F3FC-200D-2642-FE0F','man tipping hand: medium-light skin tone','💁‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_tipping_hand_tone2', '💁🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏽‍♂️','1F481-1F3FD-200D-2642-FE0F','man tipping hand: medium skin tone','💁‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_tipping_hand_tone3', '💁🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏾‍♂️','1F481-1F3FE-200D-2642-FE0F','man tipping hand: medium-dark skin tone','💁‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_tipping_hand_tone4', '💁🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏿‍♂️','1F481-1F3FF-200D-2642-FE0F','man tipping hand: dark skin tone','💁‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_tipping_hand_tone5', '💁🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁‍♀️','1F481-200D-2640-FE0F','woman tipping hand','💁‍♀️','{"woman","sassy","tipping hand"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","sassy","tipping hand"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_tipping_hand', '💁‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏻‍♀️','1F481-1F3FB-200D-2640-FE0F','woman tipping hand: light skin tone','💁‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_tipping_hand_tone1', '💁🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏼‍♀️','1F481-1F3FC-200D-2640-FE0F','woman tipping hand: medium-light skin tone','💁‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_tipping_hand_tone2', '💁🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏽‍♀️','1F481-1F3FD-200D-2640-FE0F','woman tipping hand: medium skin tone','💁‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_tipping_hand_tone3', '💁🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏾‍♀️','1F481-1F3FE-200D-2640-FE0F','woman tipping hand: medium-dark skin tone','💁‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_tipping_hand_tone4', '💁🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💁🏿‍♀️','1F481-1F3FF-200D-2640-FE0F','woman tipping hand: dark skin tone','💁‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_tipping_hand_tone5', '💁🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋','1F64B','person raising hand','🙋','{"face","gesture","happy","hand","human","head","raised"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","gesture","happy","hand","human","head","raised"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_raising_hand', '🙋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏻','1F64B-1F3FB','person raising hand: light skin tone','🙋',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_raising_hand_tone1', '🙋🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏼','1F64B-1F3FC','person raising hand: medium-light skin tone','🙋',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_raising_hand_tone2', '🙋🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏽','1F64B-1F3FD','person raising hand: medium skin tone','🙋',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_raising_hand_tone3', '🙋🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏾','1F64B-1F3FE','person raising hand: medium-dark skin tone','🙋',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_raising_hand_tone4', '🙋🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏿','1F64B-1F3FF','person raising hand: dark skin tone','🙋',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_raising_hand_tone5', '🙋🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋‍♂️','1F64B-200D-2642-FE0F','man raising hand','🙋‍♂️','{"man","gesture","raising hand"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","gesture","raising hand"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_raising_hand', '🙋‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏻‍♂️','1F64B-1F3FB-200D-2642-FE0F','man raising hand: light skin tone','🙋‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_raising_hand_tone1', '🙋🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏼‍♂️','1F64B-1F3FC-200D-2642-FE0F','man raising hand: medium-light skin tone','🙋‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_raising_hand_tone2', '🙋🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏽‍♂️','1F64B-1F3FD-200D-2642-FE0F','man raising hand: medium skin tone','🙋‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_raising_hand_tone3', '🙋🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏾‍♂️','1F64B-1F3FE-200D-2642-FE0F','man raising hand: medium-dark skin tone','🙋‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_raising_hand_tone4', '🙋🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏿‍♂️','1F64B-1F3FF-200D-2642-FE0F','man raising hand: dark skin tone','🙋‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_raising_hand_tone5', '🙋🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋‍♀️','1F64B-200D-2640-FE0F','woman raising hand','🙋‍♀️','{"gesture","raising hand","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gesture","raising hand","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_raising_hand', '🙋‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏻‍♀️','1F64B-1F3FB-200D-2640-FE0F','woman raising hand: light skin tone','🙋‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_raising_hand_tone1', '🙋🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏼‍♀️','1F64B-1F3FC-200D-2640-FE0F','woman raising hand: medium-light skin tone','🙋‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_raising_hand_tone2', '🙋🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏽‍♀️','1F64B-1F3FD-200D-2640-FE0F','woman raising hand: medium skin tone','🙋‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_raising_hand_tone3', '🙋🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏾‍♀️','1F64B-1F3FE-200D-2640-FE0F','woman raising hand: medium-dark skin tone','🙋‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_raising_hand_tone4', '🙋🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙋🏿‍♀️','1F64B-1F3FF-200D-2640-FE0F','woman raising hand: dark skin tone','🙋‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_raising_hand_tone5', '🙋🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏','1F9CF','deaf person','🧏','{"hear","ear","accessibility","deaf"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hear","ear","accessibility","deaf"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('deaf_person', '🧏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏻','1F9CF-1F3FB','deaf person: light skin tone','🧏',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('deaf_person_tone1', '🧏🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏼','1F9CF-1F3FC','deaf person: medium-light skin tone','🧏',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('deaf_person_tone2', '🧏🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏽','1F9CF-1F3FD','deaf person: medium skin tone','🧏',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('deaf_person_tone3', '🧏🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏾','1F9CF-1F3FE','deaf person: medium-dark skin tone','🧏',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('deaf_person_tone4', '🧏🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏿','1F9CF-1F3FF','deaf person: dark skin tone','🧏',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('deaf_person_tone5', '🧏🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏‍♂️','1F9CF-200D-2642-FE0F','deaf man','🧏‍♂️','{"man","deaf"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","deaf"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('deaf_man', '🧏‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏻‍♂️','1F9CF-1F3FB-200D-2642-FE0F','deaf man: light skin tone','🧏‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('deaf_man_tone1', '🧏🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏼‍♂️','1F9CF-1F3FC-200D-2642-FE0F','deaf man: medium-light skin tone','🧏‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('deaf_man_tone2', '🧏🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏽‍♂️','1F9CF-1F3FD-200D-2642-FE0F','deaf man: medium skin tone','🧏‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('deaf_man_tone3', '🧏🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏾‍♂️','1F9CF-1F3FE-200D-2642-FE0F','deaf man: medium-dark skin tone','🧏‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('deaf_man_tone4', '🧏🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏿‍♂️','1F9CF-1F3FF-200D-2642-FE0F','deaf man: dark skin tone','🧏‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('deaf_man_tone5', '🧏🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏‍♀️','1F9CF-200D-2640-FE0F','deaf woman','🧏‍♀️','{"woman","deaf"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","deaf"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('deaf_woman', '🧏‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏻‍♀️','1F9CF-1F3FB-200D-2640-FE0F','deaf woman: light skin tone','🧏‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('deaf_woman_tone1', '🧏🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏼‍♀️','1F9CF-1F3FC-200D-2640-FE0F','deaf woman: medium-light skin tone','🧏‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('deaf_woman_tone2', '🧏🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏽‍♀️','1F9CF-1F3FD-200D-2640-FE0F','deaf woman: medium skin tone','🧏‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('deaf_woman_tone3', '🧏🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏾‍♀️','1F9CF-1F3FE-200D-2640-FE0F','deaf woman: medium-dark skin tone','🧏‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('deaf_woman_tone4', '🧏🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧏🏿‍♀️','1F9CF-1F3FF-200D-2640-FE0F','deaf woman: dark skin tone','🧏‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('deaf_woman_tone5', '🧏🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇','1F647','person bowing','🙇','{"face","gesture","sorry","human","bow","apology","head"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","gesture","sorry","human","bow","apology","head"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_bowing', '🙇') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bow', '🙇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏻','1F647-1F3FB','person bowing: light skin tone','🙇',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('bow_tone1', '🙇🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_bowing_tone1', '🙇🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏼','1F647-1F3FC','person bowing: medium-light skin tone','🙇',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_bowing_tone2', '🙇🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bow_tone2', '🙇🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏽','1F647-1F3FD','person bowing: medium skin tone','🙇',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('bow_tone3', '🙇🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_bowing_tone3', '🙇🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏾','1F647-1F3FE','person bowing: medium-dark skin tone','🙇',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('bow_tone4', '🙇🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_bowing_tone4', '🙇🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏿','1F647-1F3FF','person bowing: dark skin tone','🙇',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_bowing_tone5', '🙇🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bow_tone5', '🙇🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇‍♂️','1F647-200D-2642-FE0F','man bowing','🙇‍♂️','{"gesture","favor","bowing","sorry","man","apology"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gesture","favor","bowing","sorry","man","apology"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_bowing', '🙇‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏻‍♂️','1F647-1F3FB-200D-2642-FE0F','man bowing: light skin tone','🙇‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_bowing_tone1', '🙇🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏼‍♂️','1F647-1F3FC-200D-2642-FE0F','man bowing: medium-light skin tone','🙇‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_bowing_tone2', '🙇🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏽‍♂️','1F647-1F3FD-200D-2642-FE0F','man bowing: medium skin tone','🙇‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_bowing_tone3', '🙇🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏾‍♂️','1F647-1F3FE-200D-2642-FE0F','man bowing: medium-dark skin tone','🙇‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_bowing_tone4', '🙇🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏿‍♂️','1F647-1F3FF-200D-2642-FE0F','man bowing: dark skin tone','🙇‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_bowing_tone5', '🙇🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇‍♀️','1F647-200D-2640-FE0F','woman bowing','🙇‍♀️','{"woman","gesture","favor","bowing","sorry","apology"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","gesture","favor","bowing","sorry","apology"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_bowing', '🙇‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏻‍♀️','1F647-1F3FB-200D-2640-FE0F','woman bowing: light skin tone','🙇‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_bowing_tone1', '🙇🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏼‍♀️','1F647-1F3FC-200D-2640-FE0F','woman bowing: medium-light skin tone','🙇‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_bowing_tone2', '🙇🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏽‍♀️','1F647-1F3FD-200D-2640-FE0F','woman bowing: medium skin tone','🙇‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_bowing_tone3', '🙇🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏾‍♀️','1F647-1F3FE-200D-2640-FE0F','woman bowing: medium-dark skin tone','🙇‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_bowing_tone4', '🙇🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🙇🏿‍♀️','1F647-1F3FF-200D-2640-FE0F','woman bowing: dark skin tone','🙇‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_bowing_tone5', '🙇🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦','1F926','person facepalming','🤦','{"palm","face","exasperation","facepalm","disbelief","human","head"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"palm","face","exasperation","facepalm","disbelief","human","head"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('facepalm', '🤦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_facepalming', '🤦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏻','1F926-1F3FB','person facepalming: light skin tone','🤦',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('facepalm_tone1', '🤦🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_facepalming_tone1', '🤦🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏼','1F926-1F3FC','person facepalming: medium-light skin tone','🤦',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('facepalm_tone2', '🤦🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_facepalming_tone2', '🤦🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏽','1F926-1F3FD','person facepalming: medium skin tone','🤦',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('facepalm_tone3', '🤦🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_facepalming_tone3', '🤦🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏾','1F926-1F3FE','person facepalming: medium-dark skin tone','🤦',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_facepalming_tone4', '🤦🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('facepalm_tone4', '🤦🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏿','1F926-1F3FF','person facepalming: dark skin tone','🤦',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_facepalming_tone5', '🤦🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('facepalm_tone5', '🤦🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦‍♂️','1F926-200D-2642-FE0F','man facepalming','🤦‍♂️','{"face","exasperation","man","facepalm","disbelief","head"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","exasperation","man","facepalm","disbelief","head"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_facepalming', '🤦‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏻‍♂️','1F926-1F3FB-200D-2642-FE0F','man facepalming: light skin tone','🤦‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_facepalming_tone1', '🤦🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏼‍♂️','1F926-1F3FC-200D-2642-FE0F','man facepalming: medium-light skin tone','🤦‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_facepalming_tone2', '🤦🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏽‍♂️','1F926-1F3FD-200D-2642-FE0F','man facepalming: medium skin tone','🤦‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_facepalming_tone3', '🤦🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏾‍♂️','1F926-1F3FE-200D-2642-FE0F','man facepalming: medium-dark skin tone','🤦‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_facepalming_tone4', '🤦🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏿‍♂️','1F926-1F3FF-200D-2642-FE0F','man facepalming: dark skin tone','🤦‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_facepalming_tone5', '🤦🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦‍♀️','1F926-200D-2640-FE0F','woman facepalming','🤦‍♀️','{"face","woman","exasperation","facepalm","disbelief","head"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","woman","exasperation","facepalm","disbelief","head"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_facepalming', '🤦‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏻‍♀️','1F926-1F3FB-200D-2640-FE0F','woman facepalming: light skin tone','🤦‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_facepalming_tone1', '🤦🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏼‍♀️','1F926-1F3FC-200D-2640-FE0F','woman facepalming: medium-light skin tone','🤦‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_facepalming_tone2', '🤦🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏽‍♀️','1F926-1F3FD-200D-2640-FE0F','woman facepalming: medium skin tone','🤦‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_facepalming_tone3', '🤦🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏾‍♀️','1F926-1F3FE-200D-2640-FE0F','woman facepalming: medium-dark skin tone','🤦‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_facepalming_tone4', '🤦🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤦🏿‍♀️','1F926-1F3FF-200D-2640-FE0F','woman facepalming: dark skin tone','🤦‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_facepalming_tone5', '🤦🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷','1F937','person shrugging','🤷','{"face","doubt","shrug","human","indifference","ignorance","head"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","doubt","shrug","human","indifference","ignorance","head"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_shrugging', '🤷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('shrug', '🤷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏻','1F937-1F3FB','person shrugging: light skin tone','🤷',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_shrugging_tone1', '🤷🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('shrug_tone1', '🤷🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏼','1F937-1F3FC','person shrugging: medium-light skin tone','🤷',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('shrug_tone2', '🤷🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_shrugging_tone2', '🤷🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏽','1F937-1F3FD','person shrugging: medium skin tone','🤷',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('shrug_tone3', '🤷🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_shrugging_tone3', '🤷🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏾','1F937-1F3FE','person shrugging: medium-dark skin tone','🤷',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_shrugging_tone4', '🤷🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('shrug_tone4', '🤷🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏿','1F937-1F3FF','person shrugging: dark skin tone','🤷',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('shrug_tone5', '🤷🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_shrugging_tone5', '🤷🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷‍♂️','1F937-200D-2642-FE0F','man shrugging','🤷‍♂️','{"doubt","shrug","man","indifference","ignorance"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"doubt","shrug","man","indifference","ignorance"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_shrugging', '🤷‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏻‍♂️','1F937-1F3FB-200D-2642-FE0F','man shrugging: light skin tone','🤷‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_shrugging_tone1', '🤷🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏼‍♂️','1F937-1F3FC-200D-2642-FE0F','man shrugging: medium-light skin tone','🤷‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_shrugging_tone2', '🤷🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏽‍♂️','1F937-1F3FD-200D-2642-FE0F','man shrugging: medium skin tone','🤷‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_shrugging_tone3', '🤷🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏾‍♂️','1F937-1F3FE-200D-2642-FE0F','man shrugging: medium-dark skin tone','🤷‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_shrugging_tone4', '🤷🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏿‍♂️','1F937-1F3FF-200D-2642-FE0F','man shrugging: dark skin tone','🤷‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_shrugging_tone5', '🤷🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷‍♀️','1F937-200D-2640-FE0F','woman shrugging','🤷‍♀️','{"woman","doubt","shrug","indifference","ignorance"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","doubt","shrug","indifference","ignorance"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_shrugging', '🤷‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏻‍♀️','1F937-1F3FB-200D-2640-FE0F','woman shrugging: light skin tone','🤷‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_shrugging_tone1', '🤷🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏼‍♀️','1F937-1F3FC-200D-2640-FE0F','woman shrugging: medium-light skin tone','🤷‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_shrugging_tone2', '🤷🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏽‍♀️','1F937-1F3FD-200D-2640-FE0F','woman shrugging: medium skin tone','🤷‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_shrugging_tone3', '🤷🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏾‍♀️','1F937-1F3FE-200D-2640-FE0F','woman shrugging: medium-dark skin tone','🤷‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_shrugging_tone4', '🤷🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤷🏿‍♀️','1F937-1F3FF-200D-2640-FE0F','woman shrugging: dark skin tone','🤷‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_shrugging_tone5', '🤷🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍⚕️','1F9D1-200D-2695-FE0F','health worker','🧑‍⚕️','{"therapist","nurse","healthcare","doctor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"therapist","nurse","healthcare","doctor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('health_worker', '🧑‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍⚕️','1F9D1-1F3FB-200D-2695-FE0F','health worker: light skin tone','🧑‍⚕️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('health_worker_tone1', '🧑🏻‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍⚕️','1F9D1-1F3FC-200D-2695-FE0F','health worker: medium-light skin tone','🧑‍⚕️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('health_worker_tone2', '🧑🏼‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍⚕️','1F9D1-1F3FD-200D-2695-FE0F','health worker: medium skin tone','🧑‍⚕️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('health_worker_tone3', '🧑🏽‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍⚕️','1F9D1-1F3FE-200D-2695-FE0F','health worker: medium-dark skin tone','🧑‍⚕️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('health_worker_tone4', '🧑🏾‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍⚕️','1F9D1-1F3FF-200D-2695-FE0F','health worker: dark skin tone','🧑‍⚕️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('health_worker_tone5', '🧑🏿‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍⚕️','1F468-200D-2695-FE0F','man health worker','👨‍⚕️','{"stethoscope","doctor smock","doctor","man","therapist","healthcare","nurse"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stethoscope","doctor smock","doctor","man","therapist","healthcare","nurse"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_health_worker', '👨‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍⚕️','1F468-1F3FB-200D-2695-FE0F','man health worker: light skin tone','👨‍⚕️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_health_worker_tone1', '👨🏻‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍⚕️','1F468-1F3FC-200D-2695-FE0F','man health worker: medium-light skin tone','👨‍⚕️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_health_worker_tone2', '👨🏼‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍⚕️','1F468-1F3FD-200D-2695-FE0F','man health worker: medium skin tone','👨‍⚕️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_health_worker_tone3', '👨🏽‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍⚕️','1F468-1F3FE-200D-2695-FE0F','man health worker: medium-dark skin tone','👨‍⚕️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_health_worker_tone4', '👨🏾‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍⚕️','1F468-1F3FF-200D-2695-FE0F','man health worker: dark skin tone','👨‍⚕️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_health_worker_tone5', '👨🏿‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍⚕️','1F469-200D-2695-FE0F','woman health worker','👩‍⚕️','{"woman","stethoscope","doctor smock","doctor","therapist","healthcare","nurse"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","stethoscope","doctor smock","doctor","therapist","healthcare","nurse"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_health_worker', '👩‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍⚕️','1F469-1F3FB-200D-2695-FE0F','woman health worker: light skin tone','👩‍⚕️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_health_worker_tone1', '👩🏻‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍⚕️','1F469-1F3FC-200D-2695-FE0F','woman health worker: medium-light skin tone','👩‍⚕️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_health_worker_tone2', '👩🏼‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍⚕️','1F469-1F3FD-200D-2695-FE0F','woman health worker: medium skin tone','👩‍⚕️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_health_worker_tone3', '👩🏽‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍⚕️','1F469-1F3FE-200D-2695-FE0F','woman health worker: medium-dark skin tone','👩‍⚕️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_health_worker_tone4', '👩🏾‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍⚕️','1F469-1F3FF-200D-2695-FE0F','woman health worker: dark skin tone','👩‍⚕️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_health_worker_tone5', '👩🏿‍⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🎓','1F9D1-200D-1F393','student','🧑‍🎓','{"graduate"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"graduate"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('student', '🧑‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🎓','1F9D1-1F3FB-200D-1F393','student: light skin tone','🧑‍🎓',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('student_tone1', '🧑🏻‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🎓','1F9D1-1F3FC-200D-1F393','student: medium-light skin tone','🧑‍🎓',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('student_tone2', '🧑🏼‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🎓','1F9D1-1F3FD-200D-1F393','student: medium skin tone','🧑‍🎓',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('student_tone3', '🧑🏽‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🎓','1F9D1-1F3FE-200D-1F393','student: medium-dark skin tone','🧑‍🎓',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('student_tone4', '🧑🏾‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🎓','1F9D1-1F3FF-200D-1F393','student: dark skin tone','🧑‍🎓',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('student_tone5', '🧑🏿‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🎓','1F468-200D-1F393','man student','👨‍🎓','{"graduation","man","graduate","undergraduate","student","collegian","black robe"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"graduation","man","graduate","undergraduate","student","collegian","black robe"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_student', '👨‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🎓','1F468-1F3FB-200D-1F393','man student: light skin tone','👨‍🎓',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_student_tone1', '👨🏻‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🎓','1F468-1F3FC-200D-1F393','man student: medium-light skin tone','👨‍🎓',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_student_tone2', '👨🏼‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🎓','1F468-1F3FD-200D-1F393','man student: medium skin tone','👨‍🎓',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_student_tone3', '👨🏽‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🎓','1F468-1F3FE-200D-1F393','man student: medium-dark skin tone','👨‍🎓',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_student_tone4', '👨🏾‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🎓','1F468-1F3FF-200D-1F393','man student: dark skin tone','👨‍🎓',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_student_tone5', '👨🏿‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🎓','1F469-200D-1F393','woman student','👩‍🎓','{"graduation","woman","graduate","undergraduate","student","collegian","black robe"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"graduation","woman","graduate","undergraduate","student","collegian","black robe"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_student', '👩‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🎓','1F469-1F3FB-200D-1F393','woman student: light skin tone','👩‍🎓',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_student_tone1', '👩🏻‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🎓','1F469-1F3FC-200D-1F393','woman student: medium-light skin tone','👩‍🎓',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_student_tone2', '👩🏼‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🎓','1F469-1F3FD-200D-1F393','woman student: medium skin tone','👩‍🎓',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_student_tone3', '👩🏽‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🎓','1F469-1F3FE-200D-1F393','woman student: medium-dark skin tone','👩‍🎓',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_student_tone4', '👩🏾‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🎓','1F469-1F3FF-200D-1F393','woman student: dark skin tone','👩‍🎓',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_student_tone5', '👩🏿‍🎓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🏫','1F9D1-200D-1F3EB','teacher','🧑‍🏫','{"instructor","professor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"instructor","professor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('teacher', '🧑‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🏫','1F9D1-1F3FB-200D-1F3EB','teacher: light skin tone','🧑‍🏫',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('teacher_tone1', '🧑🏻‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🏫','1F9D1-1F3FC-200D-1F3EB','teacher: medium-light skin tone','🧑‍🏫',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('teacher_tone2', '🧑🏼‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🏫','1F9D1-1F3FD-200D-1F3EB','teacher: medium skin tone','🧑‍🏫',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('teacher_tone3', '🧑🏽‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🏫','1F9D1-1F3FE-200D-1F3EB','teacher: medium-dark skin tone','🧑‍🏫',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('teacher_tone4', '🧑🏾‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🏫','1F9D1-1F3FF-200D-1F3EB','teacher: dark skin tone','🧑‍🏫',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('teacher_tone5', '🧑🏿‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🏫','1F468-200D-1F3EB','man teacher','👨‍🏫','{"chalkboard","educator","professor","man","lecturer","instructor","teacher"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"chalkboard","educator","professor","man","lecturer","instructor","teacher"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_teacher', '👨‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🏫','1F468-1F3FB-200D-1F3EB','man teacher: light skin tone','👨‍🏫',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_teacher_tone1', '👨🏻‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🏫','1F468-1F3FC-200D-1F3EB','man teacher: medium-light skin tone','👨‍🏫',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_teacher_tone2', '👨🏼‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🏫','1F468-1F3FD-200D-1F3EB','man teacher: medium skin tone','👨‍🏫',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_teacher_tone3', '👨🏽‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🏫','1F468-1F3FE-200D-1F3EB','man teacher: medium-dark skin tone','👨‍🏫',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_teacher_tone4', '👨🏾‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🏫','1F468-1F3FF-200D-1F3EB','man teacher: dark skin tone','👨‍🏫',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_teacher_tone5', '👨🏿‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🏫','1F469-200D-1F3EB','woman teacher','👩‍🏫','{"chalkboard","educator","professor","woman","lecturer","instructor","teacher"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"chalkboard","educator","professor","woman","lecturer","instructor","teacher"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_teacher', '👩‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🏫','1F469-1F3FB-200D-1F3EB','woman teacher: light skin tone','👩‍🏫',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_teacher_tone1', '👩🏻‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🏫','1F469-1F3FC-200D-1F3EB','woman teacher: medium-light skin tone','👩‍🏫',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_teacher_tone2', '👩🏼‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🏫','1F469-1F3FD-200D-1F3EB','woman teacher: medium skin tone','👩‍🏫',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_teacher_tone3', '👩🏽‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🏫','1F469-1F3FE-200D-1F3EB','woman teacher: medium-dark skin tone','👩‍🏫',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_teacher_tone4', '👩🏾‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🏫','1F469-1F3FF-200D-1F3EB','woman teacher: dark skin tone','👩‍🏫',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_teacher_tone5', '👩🏿‍🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍⚖️','1F9D1-200D-2696-FE0F','judge','🧑‍⚖️','{"scales","justice"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"scales","justice"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('judge', '🧑‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍⚖️','1F9D1-1F3FB-200D-2696-FE0F','judge: light skin tone','🧑‍⚖️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('judge_tone1', '🧑🏻‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍⚖️','1F9D1-1F3FC-200D-2696-FE0F','judge: medium-light skin tone','🧑‍⚖️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('judge_tone2', '🧑🏼‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍⚖️','1F9D1-1F3FD-200D-2696-FE0F','judge: medium skin tone','🧑‍⚖️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('judge_tone3', '🧑🏽‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍⚖️','1F9D1-1F3FE-200D-2696-FE0F','judge: medium-dark skin tone','🧑‍⚖️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('judge_tone4', '🧑🏾‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍⚖️','1F9D1-1F3FF-200D-2696-FE0F','judge: dark skin tone','🧑‍⚖️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('judge_tone5', '🧑🏿‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍⚖️','1F468-200D-2696-FE0F','man judge','👨‍⚖️','{"justice","judge","scales","law","judge hammer","man","order","gavel","black robe"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"justice","judge","scales","law","judge hammer","man","order","gavel","black robe"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_judge', '👨‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍⚖️','1F468-1F3FB-200D-2696-FE0F','man judge: light skin tone','👨‍⚖️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_judge_tone1', '👨🏻‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍⚖️','1F468-1F3FC-200D-2696-FE0F','man judge: medium-light skin tone','👨‍⚖️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_judge_tone2', '👨🏼‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍⚖️','1F468-1F3FD-200D-2696-FE0F','man judge: medium skin tone','👨‍⚖️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_judge_tone3', '👨🏽‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍⚖️','1F468-1F3FE-200D-2696-FE0F','man judge: medium-dark skin tone','👨‍⚖️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_judge_tone4', '👨🏾‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍⚖️','1F468-1F3FF-200D-2696-FE0F','man judge: dark skin tone','👨‍⚖️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_judge_tone5', '👨🏿‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍⚖️','1F469-200D-2696-FE0F','woman judge','👩‍⚖️','{"justice","woman","judge","scales","law","judge hammer","order","gavel","black robe"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"justice","woman","judge","scales","law","judge hammer","order","gavel","black robe"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_judge', '👩‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍⚖️','1F469-1F3FB-200D-2696-FE0F','woman judge: light skin tone','👩‍⚖️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_judge_tone1', '👩🏻‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍⚖️','1F469-1F3FC-200D-2696-FE0F','woman judge: medium-light skin tone','👩‍⚖️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_judge_tone2', '👩🏼‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍⚖️','1F469-1F3FD-200D-2696-FE0F','woman judge: medium skin tone','👩‍⚖️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_judge_tone3', '👩🏽‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍⚖️','1F469-1F3FE-200D-2696-FE0F','woman judge: medium-dark skin tone','👩‍⚖️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_judge_tone4', '👩🏾‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍⚖️','1F469-1F3FF-200D-2696-FE0F','woman judge: dark skin tone','👩‍⚖️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_judge_tone5', '👩🏿‍⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🌾','1F9D1-200D-1F33E','farmer','🧑‍🌾','{"gardener","rancher"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gardener","rancher"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('farmer', '🧑‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🌾','1F9D1-1F3FB-200D-1F33E','farmer: light skin tone','🧑‍🌾',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('farmer_tone1', '🧑🏻‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🌾','1F9D1-1F3FC-200D-1F33E','farmer: medium-light skin tone','🧑‍🌾',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('farmer_tone2', '🧑🏼‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🌾','1F9D1-1F3FD-200D-1F33E','farmer: medium skin tone','🧑‍🌾',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('farmer_tone3', '🧑🏽‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🌾','1F9D1-1F3FE-200D-1F33E','farmer: medium-dark skin tone','🧑‍🌾',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('farmer_tone4', '🧑🏾‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🌾','1F9D1-1F3FF-200D-1F33E','farmer: dark skin tone','🧑‍🌾',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('farmer_tone5', '🧑🏿‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🌾','1F468-200D-1F33E','man farmer','👨‍🌾','{"gardener","farmer","strawhat","man","pitchfork","rancher"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gardener","farmer","strawhat","man","pitchfork","rancher"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_farmer', '👨‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🌾','1F468-1F3FB-200D-1F33E','man farmer: light skin tone','👨‍🌾',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_farmer_tone1', '👨🏻‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🌾','1F468-1F3FC-200D-1F33E','man farmer: medium-light skin tone','👨‍🌾',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_farmer_tone2', '👨🏼‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🌾','1F468-1F3FD-200D-1F33E','man farmer: medium skin tone','👨‍🌾',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_farmer_tone3', '👨🏽‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🌾','1F468-1F3FE-200D-1F33E','man farmer: medium-dark skin tone','👨‍🌾',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_farmer_tone4', '👨🏾‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🌾','1F468-1F3FF-200D-1F33E','man farmer: dark skin tone','👨‍🌾',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_farmer_tone5', '👨🏿‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🌾','1F469-200D-1F33E','woman farmer','👩‍🌾','{"gardener","braids","woman","farmer","pitchfork","rancher"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gardener","braids","woman","farmer","pitchfork","rancher"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_farmer', '👩‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🌾','1F469-1F3FB-200D-1F33E','woman farmer: light skin tone','👩‍🌾',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_farmer_tone1', '👩🏻‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🌾','1F469-1F3FC-200D-1F33E','woman farmer: medium-light skin tone','👩‍🌾',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_farmer_tone2', '👩🏼‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🌾','1F469-1F3FD-200D-1F33E','woman farmer: medium skin tone','👩‍🌾',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_farmer_tone3', '👩🏽‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🌾','1F469-1F3FE-200D-1F33E','woman farmer: medium-dark skin tone','👩‍🌾',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_farmer_tone4', '👩🏾‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🌾','1F469-1F3FF-200D-1F33E','woman farmer: dark skin tone','👩‍🌾',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_farmer_tone5', '👩🏿‍🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🍳','1F9D1-200D-1F373','cook','🧑‍🍳','{"chef"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"chef"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cook', '🧑‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🍳','1F9D1-1F3FB-200D-1F373','cook: light skin tone','🧑‍🍳',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('cook_tone1', '🧑🏻‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🍳','1F9D1-1F3FC-200D-1F373','cook: medium-light skin tone','🧑‍🍳',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('cook_tone2', '🧑🏼‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🍳','1F9D1-1F3FD-200D-1F373','cook: medium skin tone','🧑‍🍳',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('cook_tone3', '🧑🏽‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🍳','1F9D1-1F3FE-200D-1F373','cook: medium-dark skin tone','🧑‍🍳',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('cook_tone4', '🧑🏾‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🍳','1F9D1-1F3FF-200D-1F373','cook: dark skin tone','🧑‍🍳',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('cook_tone5', '🧑🏿‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🍳','1F468-200D-1F373','man cook','👨‍🍳','{"cooking","food","man","cook","chef","chef''s hat","toque"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cooking","food","man","cook","chef","chef''s hat","toque"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_cook', '👨‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🍳','1F468-1F3FB-200D-1F373','man cook: light skin tone','👨‍🍳',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_cook_tone1', '👨🏻‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🍳','1F468-1F3FC-200D-1F373','man cook: medium-light skin tone','👨‍🍳',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_cook_tone2', '👨🏼‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🍳','1F468-1F3FD-200D-1F373','man cook: medium skin tone','👨‍🍳',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_cook_tone3', '👨🏽‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🍳','1F468-1F3FE-200D-1F373','man cook: medium-dark skin tone','👨‍🍳',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_cook_tone4', '👨🏾‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🍳','1F468-1F3FF-200D-1F373','man cook: dark skin tone','👨‍🍳',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_cook_tone5', '👨🏿‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🍳','1F469-200D-1F373','woman cook','👩‍🍳','{"cooking","woman","food","cook","chef","chef''s hat","toque"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cooking","woman","food","cook","chef","chef''s hat","toque"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_cook', '👩‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🍳','1F469-1F3FB-200D-1F373','woman cook: light skin tone','👩‍🍳',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_cook_tone1', '👩🏻‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🍳','1F469-1F3FC-200D-1F373','woman cook: medium-light skin tone','👩‍🍳',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_cook_tone2', '👩🏼‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🍳','1F469-1F3FD-200D-1F373','woman cook: medium skin tone','👩‍🍳',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_cook_tone3', '👩🏽‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🍳','1F469-1F3FE-200D-1F373','woman cook: medium-dark skin tone','👩‍🍳',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_cook_tone4', '👩🏾‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🍳','1F469-1F3FF-200D-1F373','woman cook: dark skin tone','👩‍🍳',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_cook_tone5', '👩🏿‍🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🔧','1F9D1-200D-1F527','mechanic','🧑‍🔧','{"plumber","electrician","tradesperson"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plumber","electrician","tradesperson"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mechanic', '🧑‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🔧','1F9D1-1F3FB-200D-1F527','mechanic: light skin tone','🧑‍🔧',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('mechanic_tone1', '🧑🏻‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🔧','1F9D1-1F3FC-200D-1F527','mechanic: medium-light skin tone','🧑‍🔧',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('mechanic_tone2', '🧑🏼‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🔧','1F9D1-1F3FD-200D-1F527','mechanic: medium skin tone','🧑‍🔧',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('mechanic_tone3', '🧑🏽‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🔧','1F9D1-1F3FE-200D-1F527','mechanic: medium-dark skin tone','🧑‍🔧',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('mechanic_tone4', '🧑🏾‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🔧','1F9D1-1F3FF-200D-1F527','mechanic: dark skin tone','🧑‍🔧',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('mechanic_tone5', '🧑🏿‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🔧','1F468-200D-1F527','man mechanic','👨‍🔧','{"plumber","tradesperson","auto mechanic","overalls","man","mechanic","blue hat","wrench","electrician"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plumber","tradesperson","auto mechanic","overalls","man","mechanic","blue hat","wrench","electrician"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_mechanic', '👨‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🔧','1F468-1F3FB-200D-1F527','man mechanic: light skin tone','👨‍🔧',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_mechanic_tone1', '👨🏻‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🔧','1F468-1F3FC-200D-1F527','man mechanic: medium-light skin tone','👨‍🔧',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_mechanic_tone2', '👨🏼‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🔧','1F468-1F3FD-200D-1F527','man mechanic: medium skin tone','👨‍🔧',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_mechanic_tone3', '👨🏽‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🔧','1F468-1F3FE-200D-1F527','man mechanic: medium-dark skin tone','👨‍🔧',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_mechanic_tone4', '👨🏾‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🔧','1F468-1F3FF-200D-1F527','man mechanic: dark skin tone','👨‍🔧',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_mechanic_tone5', '👨🏿‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🔧','1F469-200D-1F527','woman mechanic','👩‍🔧','{"plumber","tradesperson","auto mechanic","woman","overalls","mechanic","blue hat","wrench","electrician"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plumber","tradesperson","auto mechanic","woman","overalls","mechanic","blue hat","wrench","electrician"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_mechanic', '👩‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🔧','1F469-1F3FB-200D-1F527','woman mechanic: light skin tone','👩‍🔧',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_mechanic_tone1', '👩🏻‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🔧','1F469-1F3FC-200D-1F527','woman mechanic: medium-light skin tone','👩‍🔧',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_mechanic_tone2', '👩🏼‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🔧','1F469-1F3FD-200D-1F527','woman mechanic: medium skin tone','👩‍🔧',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_mechanic_tone3', '👩🏽‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🔧','1F469-1F3FE-200D-1F527','woman mechanic: medium-dark skin tone','👩‍🔧',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_mechanic_tone4', '👩🏾‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🔧','1F469-1F3FF-200D-1F527','woman mechanic: dark skin tone','👩‍🔧',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_mechanic_tone5', '👩🏿‍🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🏭','1F9D1-200D-1F3ED','factory worker','🧑‍🏭','{"assembly","worker","industrial","factory"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"assembly","worker","industrial","factory"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('factory_worker', '🧑‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🏭','1F9D1-1F3FB-200D-1F3ED','factory worker: light skin tone','🧑‍🏭',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('factory_worker_tone1', '🧑🏻‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🏭','1F9D1-1F3FC-200D-1F3ED','factory worker: medium-light skin tone','🧑‍🏭',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('factory_worker_tone2', '🧑🏼‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🏭','1F9D1-1F3FD-200D-1F3ED','factory worker: medium skin tone','🧑‍🏭',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('factory_worker_tone3', '🧑🏽‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🏭','1F9D1-1F3FE-200D-1F3ED','factory worker: medium-dark skin tone','🧑‍🏭',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('factory_worker_tone4', '🧑🏾‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🏭','1F9D1-1F3FF-200D-1F3ED','factory worker: dark skin tone','🧑‍🏭',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('factory_worker_tone5', '🧑🏿‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🏭','1F468-200D-1F3ED','man factory worker','👨‍🏭','{"factory","welding","welding helmet","assembly","worker","industrial","man","welder"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"factory","welding","welding helmet","assembly","worker","industrial","man","welder"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_factory_worker', '👨‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🏭','1F468-1F3FB-200D-1F3ED','man factory worker: light skin tone','👨‍🏭',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_factory_worker_tone1', '👨🏻‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🏭','1F468-1F3FC-200D-1F3ED','man factory worker: medium-light skin tone','👨‍🏭',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_factory_worker_tone2', '👨🏼‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🏭','1F468-1F3FD-200D-1F3ED','man factory worker: medium skin tone','👨‍🏭',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_factory_worker_tone3', '👨🏽‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🏭','1F468-1F3FE-200D-1F3ED','man factory worker: medium-dark skin tone','👨‍🏭',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_factory_worker_tone4', '👨🏾‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🏭','1F468-1F3FF-200D-1F3ED','man factory worker: dark skin tone','👨‍🏭',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_factory_worker_tone5', '👨🏿‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🏭','1F469-200D-1F3ED','woman factory worker','👩‍🏭','{"woman","factory","welding","welding helmet","assembly","worker","industrial","welder"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","factory","welding","welding helmet","assembly","worker","industrial","welder"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_factory_worker', '👩‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🏭','1F469-1F3FB-200D-1F3ED','woman factory worker: light skin tone','👩‍🏭',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_factory_worker_tone1', '👩🏻‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🏭','1F469-1F3FC-200D-1F3ED','woman factory worker: medium-light skin tone','👩‍🏭',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_factory_worker_tone2', '👩🏼‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🏭','1F469-1F3FD-200D-1F3ED','woman factory worker: medium skin tone','👩‍🏭',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_factory_worker_tone3', '👩🏽‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🏭','1F469-1F3FE-200D-1F3ED','woman factory worker: medium-dark skin tone','👩‍🏭',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_factory_worker_tone4', '👩🏾‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🏭','1F469-1F3FF-200D-1F3ED','woman factory worker: dark skin tone','👩‍🏭',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_factory_worker_tone5', '👩🏿‍🏭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍💼','1F9D1-200D-1F4BC','office worker','🧑‍💼','{"business","manager","architect","white-collar"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"business","manager","architect","white-collar"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('office_worker', '🧑‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍💼','1F9D1-1F3FB-200D-1F4BC','office worker: light skin tone','🧑‍💼',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('office_worker_tone1', '🧑🏻‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍💼','1F9D1-1F3FC-200D-1F4BC','office worker: medium-light skin tone','🧑‍💼',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('office_worker_tone2', '🧑🏼‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍💼','1F9D1-1F3FD-200D-1F4BC','office worker: medium skin tone','🧑‍💼',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('office_worker_tone3', '🧑🏽‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍💼','1F9D1-1F3FE-200D-1F4BC','office worker: medium-dark skin tone','🧑‍💼',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('office_worker_tone4', '🧑🏾‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍💼','1F9D1-1F3FF-200D-1F4BC','office worker: dark skin tone','🧑‍💼',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('office_worker_tone5', '🧑🏿‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍💼','1F468-200D-1F4BC','man office worker','👨‍💼','{"office","copy","man","manager","architect","papers","business","white-collar"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"office","copy","man","manager","architect","papers","business","white-collar"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_office_worker', '👨‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍💼','1F468-1F3FB-200D-1F4BC','man office worker: light skin tone','👨‍💼',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_office_worker_tone1', '👨🏻‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍💼','1F468-1F3FC-200D-1F4BC','man office worker: medium-light skin tone','👨‍💼',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_office_worker_tone2', '👨🏼‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍💼','1F468-1F3FD-200D-1F4BC','man office worker: medium skin tone','👨‍💼',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_office_worker_tone3', '👨🏽‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍💼','1F468-1F3FE-200D-1F4BC','man office worker: medium-dark skin tone','👨‍💼',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_office_worker_tone4', '👨🏾‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍💼','1F468-1F3FF-200D-1F4BC','man office worker: dark skin tone','👨‍💼',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_office_worker_tone5', '👨🏿‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍💼','1F469-200D-1F4BC','woman office worker','👩‍💼','{"woman","office","copy","manager","architect","papers","business","white-collar"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","office","copy","manager","architect","papers","business","white-collar"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_office_worker', '👩‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍💼','1F469-1F3FB-200D-1F4BC','woman office worker: light skin tone','👩‍💼',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_office_worker_tone1', '👩🏻‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍💼','1F469-1F3FC-200D-1F4BC','woman office worker: medium-light skin tone','👩‍💼',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_office_worker_tone2', '👩🏼‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍💼','1F469-1F3FD-200D-1F4BC','woman office worker: medium skin tone','👩‍💼',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_office_worker_tone3', '👩🏽‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍💼','1F469-1F3FE-200D-1F4BC','woman office worker: medium-dark skin tone','👩‍💼',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_office_worker_tone4', '👩🏾‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍💼','1F469-1F3FF-200D-1F4BC','woman office worker: dark skin tone','👩‍💼',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_office_worker_tone5', '👩🏿‍💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🔬','1F9D1-200D-1F52C','scientist','🧑‍🔬','{"physicist","biologist","chemist","engineer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"physicist","biologist","chemist","engineer"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('scientist', '🧑‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🔬','1F9D1-1F3FB-200D-1F52C','scientist: light skin tone','🧑‍🔬',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('scientist_tone1', '🧑🏻‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🔬','1F9D1-1F3FC-200D-1F52C','scientist: medium-light skin tone','🧑‍🔬',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('scientist_tone2', '🧑🏼‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🔬','1F9D1-1F3FD-200D-1F52C','scientist: medium skin tone','🧑‍🔬',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('scientist_tone3', '🧑🏽‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🔬','1F9D1-1F3FE-200D-1F52C','scientist: medium-dark skin tone','🧑‍🔬',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('scientist_tone4', '🧑🏾‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🔬','1F9D1-1F3FF-200D-1F52C','scientist: dark skin tone','🧑‍🔬',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('scientist_tone5', '🧑🏿‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🔬','1F468-200D-1F52C','man scientist','👨‍🔬','{"laboratory","erlenmeyer flask","scientist","safety glasses","physicist","biologist","chemist","experiment","man","engineer","lab","mathematician"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"laboratory","erlenmeyer flask","scientist","safety glasses","physicist","biologist","chemist","experiment","man","engineer","lab","mathematician"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_scientist', '👨‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🔬','1F468-1F3FB-200D-1F52C','man scientist: light skin tone','👨‍🔬',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_scientist_tone1', '👨🏻‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🔬','1F468-1F3FC-200D-1F52C','man scientist: medium-light skin tone','👨‍🔬',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_scientist_tone2', '👨🏼‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🔬','1F468-1F3FD-200D-1F52C','man scientist: medium skin tone','👨‍🔬',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_scientist_tone3', '👨🏽‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🔬','1F468-1F3FE-200D-1F52C','man scientist: medium-dark skin tone','👨‍🔬',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_scientist_tone4', '👨🏾‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🔬','1F468-1F3FF-200D-1F52C','man scientist: dark skin tone','👨‍🔬',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_scientist_tone5', '👨🏿‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🔬','1F469-200D-1F52C','woman scientist','👩‍🔬','{"laboratory","erlenmeyer flask","woman","scientist","safety glasses","physicist","biologist","chemist","experiment","engineer","lab","mathematician"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"laboratory","erlenmeyer flask","woman","scientist","safety glasses","physicist","biologist","chemist","experiment","engineer","lab","mathematician"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_scientist', '👩‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🔬','1F469-1F3FB-200D-1F52C','woman scientist: light skin tone','👩‍🔬',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_scientist_tone1', '👩🏻‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🔬','1F469-1F3FC-200D-1F52C','woman scientist: medium-light skin tone','👩‍🔬',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_scientist_tone2', '👩🏼‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🔬','1F469-1F3FD-200D-1F52C','woman scientist: medium skin tone','👩‍🔬',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_scientist_tone3', '👩🏽‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🔬','1F469-1F3FE-200D-1F52C','woman scientist: medium-dark skin tone','👩‍🔬',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_scientist_tone4', '👩🏾‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🔬','1F469-1F3FF-200D-1F52C','woman scientist: dark skin tone','👩‍🔬',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_scientist_tone5', '👩🏿‍🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍💻','1F9D1-200D-1F4BB','technologist','🧑‍💻','{"software","coder","developer","inventor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"software","coder","developer","inventor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('technologist', '🧑‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍💻','1F9D1-1F3FB-200D-1F4BB','technologist: light skin tone','🧑‍💻',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('technologist_tone1', '🧑🏻‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍💻','1F9D1-1F3FC-200D-1F4BB','technologist: medium-light skin tone','🧑‍💻',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('technologist_tone2', '🧑🏼‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍💻','1F9D1-1F3FD-200D-1F4BB','technologist: medium skin tone','🧑‍💻',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('technologist_tone3', '🧑🏽‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍💻','1F9D1-1F3FE-200D-1F4BB','technologist: medium-dark skin tone','🧑‍💻',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('technologist_tone4', '🧑🏾‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍💻','1F9D1-1F3FF-200D-1F4BB','technologist: dark skin tone','🧑‍💻',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('technologist_tone5', '🧑🏿‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍💻','1F468-200D-1F4BB','man technologist','👨‍💻','{"code","graphs","inventor","developer","smart","glasses","man","software","tablet","technologist","clever","coder","coding"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"code","graphs","inventor","developer","smart","glasses","man","software","tablet","technologist","clever","coder","coding"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_technologist', '👨‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍💻','1F468-1F3FB-200D-1F4BB','man technologist: light skin tone','👨‍💻',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_technologist_tone1', '👨🏻‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍💻','1F468-1F3FC-200D-1F4BB','man technologist: medium-light skin tone','👨‍💻',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_technologist_tone2', '👨🏼‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍💻','1F468-1F3FD-200D-1F4BB','man technologist: medium skin tone','👨‍💻',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_technologist_tone3', '👨🏽‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍💻','1F468-1F3FE-200D-1F4BB','man technologist: medium-dark skin tone','👨‍💻',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_technologist_tone4', '👨🏾‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍💻','1F468-1F3FF-200D-1F4BB','man technologist: dark skin tone','👨‍💻',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_technologist_tone5', '👨🏿‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍💻','1F469-200D-1F4BB','woman technologist','👩‍💻','{"code","graphs","inventor","developer","woman","smart","glasses","software","tablet","technologist","clever","coder","coding"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"code","graphs","inventor","developer","woman","smart","glasses","software","tablet","technologist","clever","coder","coding"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_technologist', '👩‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍💻','1F469-1F3FB-200D-1F4BB','woman technologist: light skin tone','👩‍💻',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_technologist_tone1', '👩🏻‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍💻','1F469-1F3FC-200D-1F4BB','woman technologist: medium-light skin tone','👩‍💻',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_technologist_tone2', '👩🏼‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍💻','1F469-1F3FD-200D-1F4BB','woman technologist: medium skin tone','👩‍💻',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_technologist_tone3', '👩🏽‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍💻','1F469-1F3FE-200D-1F4BB','woman technologist: medium-dark skin tone','👩‍💻',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_technologist_tone4', '👩🏾‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍💻','1F469-1F3FF-200D-1F4BB','woman technologist: dark skin tone','👩‍💻',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_technologist_tone5', '👩🏿‍💻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🎤','1F9D1-200D-1F3A4','singer','🧑‍🎤','{"star","rock","entertainer","actor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"star","rock","entertainer","actor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('singer', '🧑‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🎤','1F9D1-1F3FB-200D-1F3A4','singer: light skin tone','🧑‍🎤',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('singer_tone1', '🧑🏻‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🎤','1F9D1-1F3FC-200D-1F3A4','singer: medium-light skin tone','🧑‍🎤',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('singer_tone2', '🧑🏼‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🎤','1F9D1-1F3FD-200D-1F3A4','singer: medium skin tone','🧑‍🎤',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('singer_tone3', '🧑🏽‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🎤','1F9D1-1F3FE-200D-1F3A4','singer: medium-dark skin tone','🧑‍🎤',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('singer_tone4', '🧑🏾‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🎤','1F9D1-1F3FF-200D-1F3A4','singer: dark skin tone','🧑‍🎤',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('singer_tone5', '🧑🏿‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🎤','1F468-200D-1F3A4','man singer','👨‍🎤','{"rock","entertainer","musician","singer","actor","man","star","microphone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rock","entertainer","musician","singer","actor","man","star","microphone"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_singer', '👨‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🎤','1F468-1F3FB-200D-1F3A4','man singer: light skin tone','👨‍🎤',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_singer_tone1', '👨🏻‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🎤','1F468-1F3FC-200D-1F3A4','man singer: medium-light skin tone','👨‍🎤',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_singer_tone2', '👨🏼‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🎤','1F468-1F3FD-200D-1F3A4','man singer: medium skin tone','👨‍🎤',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_singer_tone3', '👨🏽‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🎤','1F468-1F3FE-200D-1F3A4','man singer: medium-dark skin tone','👨‍🎤',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_singer_tone4', '👨🏾‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🎤','1F468-1F3FF-200D-1F3A4','man singer: dark skin tone','👨‍🎤',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_singer_tone5', '👨🏿‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🎤','1F469-200D-1F3A4','woman singer','👩‍🎤','{"rock","entertainer","woman","dress","musician","singer","actor","glamorous","star","glamour","microphone","wavy hair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rock","entertainer","woman","dress","musician","singer","actor","glamorous","star","glamour","microphone","wavy hair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_singer', '👩‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🎤','1F469-1F3FB-200D-1F3A4','woman singer: light skin tone','👩‍🎤',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_singer_tone1', '👩🏻‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🎤','1F469-1F3FC-200D-1F3A4','woman singer: medium-light skin tone','👩‍🎤',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_singer_tone2', '👩🏼‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🎤','1F469-1F3FD-200D-1F3A4','woman singer: medium skin tone','👩‍🎤',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_singer_tone3', '👩🏽‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🎤','1F469-1F3FE-200D-1F3A4','woman singer: medium-dark skin tone','👩‍🎤',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_singer_tone4', '👩🏾‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🎤','1F469-1F3FF-200D-1F3A4','woman singer: dark skin tone','👩‍🎤',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_singer_tone5', '👩🏿‍🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🎨','1F9D1-200D-1F3A8','artist','🧑‍🎨','{"palette"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"palette"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('artist', '🧑‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🎨','1F9D1-1F3FB-200D-1F3A8','artist: light skin tone','🧑‍🎨',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('artist_tone1', '🧑🏻‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🎨','1F9D1-1F3FC-200D-1F3A8','artist: medium-light skin tone','🧑‍🎨',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('artist_tone2', '🧑🏼‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🎨','1F9D1-1F3FD-200D-1F3A8','artist: medium skin tone','🧑‍🎨',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('artist_tone3', '🧑🏽‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🎨','1F9D1-1F3FE-200D-1F3A8','artist: medium-dark skin tone','🧑‍🎨',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('artist_tone4', '🧑🏾‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🎨','1F9D1-1F3FF-200D-1F3A8','artist: dark skin tone','🧑‍🎨',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('artist_tone5', '🧑🏿‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🎨','1F468-200D-1F3A8','man artist','👨‍🎨','{"drawing","french hat","artist","brush","creativity","man","colors","illustrating","palette","illustrator","beret","creative","painting","art","painter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"drawing","french hat","artist","brush","creativity","man","colors","illustrating","palette","illustrator","beret","creative","painting","art","painter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_artist', '👨‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🎨','1F468-1F3FB-200D-1F3A8','man artist: light skin tone','👨‍🎨',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_artist_tone1', '👨🏻‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🎨','1F468-1F3FC-200D-1F3A8','man artist: medium-light skin tone','👨‍🎨',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_artist_tone2', '👨🏼‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🎨','1F468-1F3FD-200D-1F3A8','man artist: medium skin tone','👨‍🎨',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_artist_tone3', '👨🏽‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🎨','1F468-1F3FE-200D-1F3A8','man artist: medium-dark skin tone','👨‍🎨',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_artist_tone4', '👨🏾‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🎨','1F468-1F3FF-200D-1F3A8','man artist: dark skin tone','👨‍🎨',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_artist_tone5', '👨🏿‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🎨','1F469-200D-1F3A8','woman artist','👩‍🎨','{"drawing","french hat","woman","artist","brush","creativity","illustrating","colors","palette","illustrator","beret","creative","painting","art","painter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"drawing","french hat","woman","artist","brush","creativity","illustrating","colors","palette","illustrator","beret","creative","painting","art","painter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_artist', '👩‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🎨','1F469-1F3FB-200D-1F3A8','woman artist: light skin tone','👩‍🎨',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_artist_tone1', '👩🏻‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🎨','1F469-1F3FC-200D-1F3A8','woman artist: medium-light skin tone','👩‍🎨',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_artist_tone2', '👩🏼‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🎨','1F469-1F3FD-200D-1F3A8','woman artist: medium skin tone','👩‍🎨',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_artist_tone3', '👩🏽‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🎨','1F469-1F3FE-200D-1F3A8','woman artist: medium-dark skin tone','👩‍🎨',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_artist_tone4', '👩🏾‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🎨','1F469-1F3FF-200D-1F3A8','woman artist: dark skin tone','👩‍🎨',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_artist_tone5', '👩🏿‍🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍✈️','1F9D1-200D-2708-FE0F','pilot','🧑‍✈️','{"plane"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plane"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pilot', '🧑‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍✈️','1F9D1-1F3FB-200D-2708-FE0F','pilot: light skin tone','🧑‍✈️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('pilot_tone1', '🧑🏻‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍✈️','1F9D1-1F3FC-200D-2708-FE0F','pilot: medium-light skin tone','🧑‍✈️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('pilot_tone2', '🧑🏼‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍✈️','1F9D1-1F3FD-200D-2708-FE0F','pilot: medium skin tone','🧑‍✈️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('pilot_tone3', '🧑🏽‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍✈️','1F9D1-1F3FE-200D-2708-FE0F','pilot: medium-dark skin tone','🧑‍✈️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('pilot_tone4', '🧑🏾‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍✈️','1F9D1-1F3FF-200D-2708-FE0F','pilot: dark skin tone','🧑‍✈️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('pilot_tone5', '🧑🏿‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍✈️','1F468-200D-2708-FE0F','man pilot','👨‍✈️','{"plane","man","control stick","pilot","flying"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plane","man","control stick","pilot","flying"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_pilot', '👨‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍✈️','1F468-1F3FB-200D-2708-FE0F','man pilot: light skin tone','👨‍✈️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_pilot_tone1', '👨🏻‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍✈️','1F468-1F3FC-200D-2708-FE0F','man pilot: medium-light skin tone','👨‍✈️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_pilot_tone2', '👨🏼‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍✈️','1F468-1F3FD-200D-2708-FE0F','man pilot: medium skin tone','👨‍✈️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_pilot_tone3', '👨🏽‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍✈️','1F468-1F3FE-200D-2708-FE0F','man pilot: medium-dark skin tone','👨‍✈️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_pilot_tone4', '👨🏾‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍✈️','1F468-1F3FF-200D-2708-FE0F','man pilot: dark skin tone','👨‍✈️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_pilot_tone5', '👨🏿‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍✈️','1F469-200D-2708-FE0F','woman pilot','👩‍✈️','{"woman","plane","control stick","pilot","flying"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","plane","control stick","pilot","flying"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_pilot', '👩‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍✈️','1F469-1F3FB-200D-2708-FE0F','woman pilot: light skin tone','👩‍✈️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_pilot_tone1', '👩🏻‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍✈️','1F469-1F3FC-200D-2708-FE0F','woman pilot: medium-light skin tone','👩‍✈️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_pilot_tone2', '👩🏼‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍✈️','1F469-1F3FD-200D-2708-FE0F','woman pilot: medium skin tone','👩‍✈️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_pilot_tone3', '👩🏽‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍✈️','1F469-1F3FE-200D-2708-FE0F','woman pilot: medium-dark skin tone','👩‍✈️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_pilot_tone4', '👩🏾‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍✈️','1F469-1F3FF-200D-2708-FE0F','woman pilot: dark skin tone','👩‍✈️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_pilot_tone5', '👩🏿‍✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🚀','1F9D1-200D-1F680','astronaut','🧑‍🚀','{"rocket"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rocket"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('astronaut', '🧑‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🚀','1F9D1-1F3FB-200D-1F680','astronaut: light skin tone','🧑‍🚀',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('astronaut_tone1', '🧑🏻‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🚀','1F9D1-1F3FC-200D-1F680','astronaut: medium-light skin tone','🧑‍🚀',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('astronaut_tone2', '🧑🏼‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🚀','1F9D1-1F3FD-200D-1F680','astronaut: medium skin tone','🧑‍🚀',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('astronaut_tone3', '🧑🏽‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🚀','1F9D1-1F3FE-200D-1F680','astronaut: medium-dark skin tone','🧑‍🚀',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('astronaut_tone4', '🧑🏾‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🚀','1F9D1-1F3FF-200D-1F680','astronaut: dark skin tone','🧑‍🚀',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('astronaut_tone5', '🧑🏿‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🚀','1F468-200D-1F680','man astronaut','👨‍🚀','{"spaceship","universe","space","man","spacesuit","astronaut","rocket"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"spaceship","universe","space","man","spacesuit","astronaut","rocket"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_astronaut', '👨‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🚀','1F468-1F3FB-200D-1F680','man astronaut: light skin tone','👨‍🚀',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_astronaut_tone1', '👨🏻‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🚀','1F468-1F3FC-200D-1F680','man astronaut: medium-light skin tone','👨‍🚀',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_astronaut_tone2', '👨🏼‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🚀','1F468-1F3FD-200D-1F680','man astronaut: medium skin tone','👨‍🚀',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_astronaut_tone3', '👨🏽‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🚀','1F468-1F3FE-200D-1F680','man astronaut: medium-dark skin tone','👨‍🚀',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_astronaut_tone4', '👨🏾‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🚀','1F468-1F3FF-200D-1F680','man astronaut: dark skin tone','👨‍🚀',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_astronaut_tone5', '👨🏿‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🚀','1F469-200D-1F680','woman astronaut','👩‍🚀','{"spaceship","universe","woman","space","spacesuit","astronaut","rocket"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"spaceship","universe","woman","space","spacesuit","astronaut","rocket"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_astronaut', '👩‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🚀','1F469-1F3FB-200D-1F680','woman astronaut: light skin tone','👩‍🚀',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_astronaut_tone1', '👩🏻‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🚀','1F469-1F3FC-200D-1F680','woman astronaut: medium-light skin tone','👩‍🚀',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_astronaut_tone2', '👩🏼‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🚀','1F469-1F3FD-200D-1F680','woman astronaut: medium skin tone','👩‍🚀',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_astronaut_tone3', '👩🏽‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🚀','1F469-1F3FE-200D-1F680','woman astronaut: medium-dark skin tone','👩‍🚀',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_astronaut_tone4', '👩🏾‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🚀','1F469-1F3FF-200D-1F680','woman astronaut: dark skin tone','👩‍🚀',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_astronaut_tone5', '👩🏿‍🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🚒','1F9D1-200D-1F692','firefighter','🧑‍🚒','{"firetruck"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"firetruck"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('firefighter', '🧑‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🚒','1F9D1-1F3FB-200D-1F692','firefighter: light skin tone','🧑‍🚒',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('firefighter_tone1', '🧑🏻‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🚒','1F9D1-1F3FC-200D-1F692','firefighter: medium-light skin tone','🧑‍🚒',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('firefighter_tone2', '🧑🏼‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🚒','1F9D1-1F3FD-200D-1F692','firefighter: medium skin tone','🧑‍🚒',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('firefighter_tone3', '🧑🏽‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🚒','1F9D1-1F3FE-200D-1F692','firefighter: medium-dark skin tone','🧑‍🚒',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('firefighter_tone4', '🧑🏾‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🚒','1F9D1-1F3FF-200D-1F692','firefighter: dark skin tone','🧑‍🚒',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('firefighter_tone5', '🧑🏿‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🚒','1F468-200D-1F692','man firefighter','👨‍🚒','{"red helmet","firetruck","man","rescue","save","water hose","firefighter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"red helmet","firetruck","man","rescue","save","water hose","firefighter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_firefighter', '👨‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🚒','1F468-1F3FB-200D-1F692','man firefighter: light skin tone','👨‍🚒',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_firefighter_tone1', '👨🏻‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🚒','1F468-1F3FC-200D-1F692','man firefighter: medium-light skin tone','👨‍🚒',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_firefighter_tone2', '👨🏼‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🚒','1F468-1F3FD-200D-1F692','man firefighter: medium skin tone','👨‍🚒',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_firefighter_tone3', '👨🏽‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🚒','1F468-1F3FE-200D-1F692','man firefighter: medium-dark skin tone','👨‍🚒',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_firefighter_tone4', '👨🏾‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🚒','1F468-1F3FF-200D-1F692','man firefighter: dark skin tone','👨‍🚒',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_firefighter_tone5', '👨🏿‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🚒','1F469-200D-1F692','woman firefighter','👩‍🚒','{"red helmet","firetruck","woman","rescue","save","water hose","firefighter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"red helmet","firetruck","woman","rescue","save","water hose","firefighter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_firefighter', '👩‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🚒','1F469-1F3FB-200D-1F692','woman firefighter: light skin tone','👩‍🚒',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_firefighter_tone1', '👩🏻‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🚒','1F469-1F3FC-200D-1F692','woman firefighter: medium-light skin tone','👩‍🚒',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_firefighter_tone2', '👩🏼‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🚒','1F469-1F3FD-200D-1F692','woman firefighter: medium skin tone','👩‍🚒',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_firefighter_tone3', '👩🏽‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🚒','1F469-1F3FE-200D-1F692','woman firefighter: medium-dark skin tone','👩‍🚒',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_firefighter_tone4', '👩🏾‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🚒','1F469-1F3FF-200D-1F692','woman firefighter: dark skin tone','👩‍🚒',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_firefighter_tone5', '👩🏿‍🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮','1F46E','police officer','👮','{"justice","police","blue","law","cop","officer","badge"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"justice","police","blue","law","cop","officer","badge"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cop', '👮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('police_officer', '👮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏻','1F46E-1F3FB','police officer: light skin tone','👮',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('cop_tone1', '👮🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('police_officer_tone1', '👮🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏼','1F46E-1F3FC','police officer: medium-light skin tone','👮',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('cop_tone2', '👮🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('police_officer_tone2', '👮🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏽','1F46E-1F3FD','police officer: medium skin tone','👮',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('police_officer_tone3', '👮🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cop_tone3', '👮🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏾','1F46E-1F3FE','police officer: medium-dark skin tone','👮',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('cop_tone4', '👮🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('police_officer_tone4', '👮🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏿','1F46E-1F3FF','police officer: dark skin tone','👮',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('police_officer_tone5', '👮🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cop_tone5', '👮🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮‍♂️','1F46E-200D-2642-FE0F','man police officer','👮‍♂️','{"cop","police","man","officer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cop","police","man","officer"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_police_officer', '👮‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏻‍♂️','1F46E-1F3FB-200D-2642-FE0F','man police officer: light skin tone','👮‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_police_officer_tone1', '👮🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏼‍♂️','1F46E-1F3FC-200D-2642-FE0F','man police officer: medium-light skin tone','👮‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_police_officer_tone2', '👮🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏽‍♂️','1F46E-1F3FD-200D-2642-FE0F','man police officer: medium skin tone','👮‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_police_officer_tone3', '👮🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏾‍♂️','1F46E-1F3FE-200D-2642-FE0F','man police officer: medium-dark skin tone','👮‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_police_officer_tone4', '👮🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏿‍♂️','1F46E-1F3FF-200D-2642-FE0F','man police officer: dark skin tone','👮‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_police_officer_tone5', '👮🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮‍♀️','1F46E-200D-2640-FE0F','woman police officer','👮‍♀️','{"cop","police","officer","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cop","police","officer","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_police_officer', '👮‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏻‍♀️','1F46E-1F3FB-200D-2640-FE0F','woman police officer: light skin tone','👮‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_police_officer_tone1', '👮🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏼‍♀️','1F46E-1F3FC-200D-2640-FE0F','woman police officer: medium-light skin tone','👮‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_police_officer_tone2', '👮🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏽‍♀️','1F46E-1F3FD-200D-2640-FE0F','woman police officer: medium skin tone','👮‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_police_officer_tone3', '👮🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏾‍♀️','1F46E-1F3FE-200D-2640-FE0F','woman police officer: medium-dark skin tone','👮‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_police_officer_tone4', '👮🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👮🏿‍♀️','1F46E-1F3FF-200D-2640-FE0F','woman police officer: dark skin tone','👮‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_police_officer_tone5', '👮🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵️','1F575','detective','🕵️','{"coat","magnifying glass","cloak","sherlock","investigator","sleuth","spy","magnifier"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"coat","magnifying glass","cloak","sherlock","investigator","sleuth","spy","magnifier"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('detective', '🕵️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏻','1F575-1F3FB','detective: light skin tone','🕵️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('detective_tone1', '🕵🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏼','1F575-1F3FC','detective: medium-light skin tone','🕵️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('detective_tone2', '🕵🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏽','1F575-1F3FD','detective: medium skin tone','🕵️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('detective_tone3', '🕵🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏾','1F575-1F3FE','detective: medium-dark skin tone','🕵️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('detective_tone4', '🕵🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏿','1F575-1F3FF','detective: dark skin tone','🕵️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('detective_tone5', '🕵🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵️‍♂️','1F575-FE0F-200D-2642-FE0F','man detective','🕵️‍♂️','{"man","detective","spy","sleuth"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","detective","spy","sleuth"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_detective', '🕵️‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏻‍♂️','1F575-1F3FB-200D-2642-FE0F','man detective: light skin tone','🕵️‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_detective_tone1', '🕵🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏼‍♂️','1F575-1F3FC-200D-2642-FE0F','man detective: medium-light skin tone','🕵️‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_detective_tone2', '🕵🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏽‍♂️','1F575-1F3FD-200D-2642-FE0F','man detective: medium skin tone','🕵️‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_detective_tone3', '🕵🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏾‍♂️','1F575-1F3FE-200D-2642-FE0F','man detective: medium-dark skin tone','🕵️‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_detective_tone4', '🕵🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏿‍♂️','1F575-1F3FF-200D-2642-FE0F','man detective: dark skin tone','🕵️‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_detective_tone5', '🕵🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵️‍♀️','1F575-FE0F-200D-2640-FE0F','woman detective','🕵️‍♀️','{"sleuth","detective","spy","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sleuth","detective","spy","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_detective', '🕵️‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏻‍♀️','1F575-1F3FB-200D-2640-FE0F','woman detective: light skin tone','🕵️‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_detective_tone1', '🕵🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏼‍♀️','1F575-1F3FC-200D-2640-FE0F','woman detective: medium-light skin tone','🕵️‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_detective_tone2', '🕵🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏽‍♀️','1F575-1F3FD-200D-2640-FE0F','woman detective: medium skin tone','🕵️‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_detective_tone3', '🕵🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏾‍♀️','1F575-1F3FE-200D-2640-FE0F','woman detective: medium-dark skin tone','🕵️‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_detective_tone4', '🕵🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕵🏿‍♀️','1F575-1F3FF-200D-2640-FE0F','woman detective: dark skin tone','🕵️‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_detective_tone5', '🕵🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂','1F482','guard','💂','{"england","britain","guard","queen","protection","london","royal guard","furry hat guard","great britain"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"england","britain","guard","queen","protection","london","royal guard","furry hat guard","great britain"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('guard', '💂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏻','1F482-1F3FB','guard: light skin tone','💂',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('guard_tone1', '💂🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏼','1F482-1F3FC','guard: medium-light skin tone','💂',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('guard_tone2', '💂🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏽','1F482-1F3FD','guard: medium skin tone','💂',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('guard_tone3', '💂🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏾','1F482-1F3FE','guard: medium-dark skin tone','💂',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('guard_tone4', '💂🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏿','1F482-1F3FF','guard: dark skin tone','💂',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('guard_tone5', '💂🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂‍♂️','1F482-200D-2642-FE0F','man guard','💂‍♂️','{"man","guard"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","guard"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_guard', '💂‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏻‍♂️','1F482-1F3FB-200D-2642-FE0F','man guard: light skin tone','💂‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_guard_tone1', '💂🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏼‍♂️','1F482-1F3FC-200D-2642-FE0F','man guard: medium-light skin tone','💂‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_guard_tone2', '💂🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏽‍♂️','1F482-1F3FD-200D-2642-FE0F','man guard: medium skin tone','💂‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_guard_tone3', '💂🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏾‍♂️','1F482-1F3FE-200D-2642-FE0F','man guard: medium-dark skin tone','💂‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_guard_tone4', '💂🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏿‍♂️','1F482-1F3FF-200D-2642-FE0F','man guard: dark skin tone','💂‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_guard_tone5', '💂🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂‍♀️','1F482-200D-2640-FE0F','woman guard','💂‍♀️','{"guard","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"guard","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_guard', '💂‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏻‍♀️','1F482-1F3FB-200D-2640-FE0F','woman guard: light skin tone','💂‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_guard_tone1', '💂🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏼‍♀️','1F482-1F3FC-200D-2640-FE0F','woman guard: medium-light skin tone','💂‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_guard_tone2', '💂🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏽‍♀️','1F482-1F3FD-200D-2640-FE0F','woman guard: medium skin tone','💂‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_guard_tone3', '💂🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏾‍♀️','1F482-1F3FE-200D-2640-FE0F','woman guard: medium-dark skin tone','💂‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_guard_tone4', '💂🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💂🏿‍♀️','1F482-1F3FF-200D-2640-FE0F','woman guard: dark skin tone','💂‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_guard_tone5', '💂🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥷','1F977','ninja','🥷','{"fighter","stealth","hidden"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fighter","stealth","hidden"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ninja', '🥷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥷🏻','1F977-1F3FB','ninja: light skin tone','🥷',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('ninja_tone1', '🥷🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥷🏼','1F977-1F3FC','ninja: medium-light skin tone','🥷',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('ninja_tone2', '🥷🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥷🏽','1F977-1F3FD','ninja: medium skin tone','🥷',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('ninja_tone3', '🥷🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥷🏾','1F977-1F3FE','ninja: medium-dark skin tone','🥷',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('ninja_tone4', '🥷🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥷🏿','1F977-1F3FF','ninja: dark skin tone','🥷',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('ninja_tone5', '🥷🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷','1F477','construction worker','👷','{"helmet","striped west","worker","construction","hat"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"helmet","striped west","worker","construction","hat"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('construction_worker', '👷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏻','1F477-1F3FB','construction worker: light skin tone','👷',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('construction_worker_tone1', '👷🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏼','1F477-1F3FC','construction worker: medium-light skin tone','👷',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('construction_worker_tone2', '👷🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏽','1F477-1F3FD','construction worker: medium skin tone','👷',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('construction_worker_tone3', '👷🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏾','1F477-1F3FE','construction worker: medium-dark skin tone','👷',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('construction_worker_tone4', '👷🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏿','1F477-1F3FF','construction worker: dark skin tone','👷',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('construction_worker_tone5', '👷🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷‍♂️','1F477-200D-2642-FE0F','man construction worker','👷‍♂️','{"man","construction","worker"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","construction","worker"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_construction_worker', '👷‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏻‍♂️','1F477-1F3FB-200D-2642-FE0F','man construction worker: light skin tone','👷‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_construction_worker_tone1', '👷🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏼‍♂️','1F477-1F3FC-200D-2642-FE0F','man construction worker: medium-light skin tone','👷‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_construction_worker_tone2', '👷🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏽‍♂️','1F477-1F3FD-200D-2642-FE0F','man construction worker: medium skin tone','👷‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_construction_worker_tone3', '👷🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏾‍♂️','1F477-1F3FE-200D-2642-FE0F','man construction worker: medium-dark skin tone','👷‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_construction_worker_tone4', '👷🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏿‍♂️','1F477-1F3FF-200D-2642-FE0F','man construction worker: dark skin tone','👷‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_construction_worker_tone5', '👷🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷‍♀️','1F477-200D-2640-FE0F','woman construction worker','👷‍♀️','{"construction","worker","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"construction","worker","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_construction_worker', '👷‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏻‍♀️','1F477-1F3FB-200D-2640-FE0F','woman construction worker: light skin tone','👷‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_construction_worker_tone1', '👷🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏼‍♀️','1F477-1F3FC-200D-2640-FE0F','woman construction worker: medium-light skin tone','👷‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_construction_worker_tone2', '👷🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏽‍♀️','1F477-1F3FD-200D-2640-FE0F','woman construction worker: medium skin tone','👷‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_construction_worker_tone3', '👷🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏾‍♀️','1F477-1F3FE-200D-2640-FE0F','woman construction worker: medium-dark skin tone','👷‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_construction_worker_tone4', '👷🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👷🏿‍♀️','1F477-1F3FF-200D-2640-FE0F','woman construction worker: dark skin tone','👷‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_construction_worker_tone5', '👷🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫅','1FAC5','person with crown','🫅','{"royalty","regal","noble","monarch"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"royalty","regal","noble","monarch"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_with_crown', '🫅') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('royalty', '🫅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫅🏻','1FAC5-1F3FB','person with crown: light skin tone','🫅',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('royalty_tone1', '🫅🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_with_crown_tone1', '🫅🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫅🏼','1FAC5-1F3FC','person with crown: medium-light skin tone','🫅',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('royalty_tone2', '🫅🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_with_crown_tone2', '🫅🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫅🏽','1FAC5-1F3FD','person with crown: medium skin tone','🫅',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_with_crown_tone3', '🫅🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('royalty_tone3', '🫅🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫅🏾','1FAC5-1F3FE','person with crown: medium-dark skin tone','🫅',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('royalty_tone4', '🫅🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_with_crown_tone4', '🫅🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫅🏿','1FAC5-1F3FF','person with crown: dark skin tone','🫅',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_with_crown_tone5', '🫅🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('royalty_tone5', '🫅🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤴','1F934','prince','🤴','{"charming","crown","fairy tale","prince","fantasy","pink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"charming","crown","fairy tale","prince","fantasy","pink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('prince', '🤴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤴🏻','1F934-1F3FB','prince: light skin tone','🤴',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('prince_tone1', '🤴🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤴🏼','1F934-1F3FC','prince: medium-light skin tone','🤴',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('prince_tone2', '🤴🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤴🏽','1F934-1F3FD','prince: medium skin tone','🤴',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('prince_tone3', '🤴🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤴🏾','1F934-1F3FE','prince: medium-dark skin tone','🤴',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('prince_tone4', '🤴🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤴🏿','1F934-1F3FF','prince: dark skin tone','🤴',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('prince_tone5', '🤴🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👸','1F478','princess','👸','{"pink dress","princess crown","fairy tale","crown","fantasy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pink dress","princess crown","fairy tale","crown","fantasy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('princess', '👸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👸🏻','1F478-1F3FB','princess: light skin tone','👸',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('princess_tone1', '👸🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👸🏼','1F478-1F3FC','princess: medium-light skin tone','👸',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('princess_tone2', '👸🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👸🏽','1F478-1F3FD','princess: medium skin tone','👸',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('princess_tone3', '👸🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👸🏾','1F478-1F3FE','princess: medium-dark skin tone','👸',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('princess_tone4', '👸🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👸🏿','1F478-1F3FF','princess: dark skin tone','👸',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('princess_tone5', '👸🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳','1F473','person wearing turban','👳','{"man","religion","turban","beard"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","religion","turban","beard"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_wearing_turban', '👳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏻','1F473-1F3FB','person wearing turban: light skin tone','👳',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_wearing_turban_tone1', '👳🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏼','1F473-1F3FC','person wearing turban: medium-light skin tone','👳',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_wearing_turban_tone2', '👳🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏽','1F473-1F3FD','person wearing turban: medium skin tone','👳',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_wearing_turban_tone3', '👳🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏾','1F473-1F3FE','person wearing turban: medium-dark skin tone','👳',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_wearing_turban_tone4', '👳🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏿','1F473-1F3FF','person wearing turban: dark skin tone','👳',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_wearing_turban_tone5', '👳🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳‍♂️','1F473-200D-2642-FE0F','man wearing turban','👳‍♂️','{"man","turban"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","turban"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_wearing_turban', '👳‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏻‍♂️','1F473-1F3FB-200D-2642-FE0F','man wearing turban: light skin tone','👳‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_wearing_turban_tone1', '👳🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏼‍♂️','1F473-1F3FC-200D-2642-FE0F','man wearing turban: medium-light skin tone','👳‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_wearing_turban_tone2', '👳🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏽‍♂️','1F473-1F3FD-200D-2642-FE0F','man wearing turban: medium skin tone','👳‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_wearing_turban_tone3', '👳🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏾‍♂️','1F473-1F3FE-200D-2642-FE0F','man wearing turban: medium-dark skin tone','👳‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_wearing_turban_tone4', '👳🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏿‍♂️','1F473-1F3FF-200D-2642-FE0F','man wearing turban: dark skin tone','👳‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_wearing_turban_tone5', '👳🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳‍♀️','1F473-200D-2640-FE0F','woman wearing turban','👳‍♀️','{"turban","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"turban","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_wearing_turban', '👳‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏻‍♀️','1F473-1F3FB-200D-2640-FE0F','woman wearing turban: light skin tone','👳‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_wearing_turban_tone1', '👳🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏼‍♀️','1F473-1F3FC-200D-2640-FE0F','woman wearing turban: medium-light skin tone','👳‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_wearing_turban_tone2', '👳🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏽‍♀️','1F473-1F3FD-200D-2640-FE0F','woman wearing turban: medium skin tone','👳‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_wearing_turban_tone3', '👳🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏾‍♀️','1F473-1F3FE-200D-2640-FE0F','woman wearing turban: medium-dark skin tone','👳‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_wearing_turban_tone4', '👳🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👳🏿‍♀️','1F473-1F3FF-200D-2640-FE0F','woman wearing turban: dark skin tone','👳‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_wearing_turban_tone5', '👳🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👲','1F472','person with skullcap','👲','{"person","skullcap","cap","gua pi mao","hat"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"person","skullcap","cap","gua pi mao","hat"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_with_skullcap', '👲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👲🏻','1F472-1F3FB','person with skullcap: light skin tone','👲',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_with_skullcap_tone1', '👲🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👲🏼','1F472-1F3FC','person with skullcap: medium-light skin tone','👲',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_with_skullcap_tone2', '👲🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👲🏽','1F472-1F3FD','person with skullcap: medium skin tone','👲',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_with_skullcap_tone3', '👲🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👲🏾','1F472-1F3FE','person with skullcap: medium-dark skin tone','👲',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_with_skullcap_tone4', '👲🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👲🏿','1F472-1F3FF','person with skullcap: dark skin tone','👲',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_with_skullcap_tone5', '👲🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧕','1F9D5','woman with headscarf','🧕','{"religion","religious","headscarf","muslim","hijab","tichel","mantilla"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"religion","religious","headscarf","muslim","hijab","tichel","mantilla"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_with_headscarf', '🧕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧕🏻','1F9D5-1F3FB','woman with headscarf: light skin tone','🧕',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_headscarf_tone1', '🧕🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧕🏼','1F9D5-1F3FC','woman with headscarf: medium-light skin tone','🧕',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_headscarf_tone2', '🧕🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧕🏽','1F9D5-1F3FD','woman with headscarf: medium skin tone','🧕',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_headscarf_tone3', '🧕🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧕🏾','1F9D5-1F3FE','woman with headscarf: medium-dark skin tone','🧕',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_headscarf_tone4', '🧕🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧕🏿','1F9D5-1F3FF','woman with headscarf: dark skin tone','🧕',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_headscarf_tone5', '🧕🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵','1F935','person in tuxedo','🤵','{"tuxedo","person","groom"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tuxedo","person","groom"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_in_tuxedo', '🤵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏻','1F935-1F3FB','person in tuxedo: light skin tone','🤵',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_in_tuxedo_tone1', '🤵🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏼','1F935-1F3FC','person in tuxedo: medium-light skin tone','🤵',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_in_tuxedo_tone2', '🤵🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏽','1F935-1F3FD','person in tuxedo: medium skin tone','🤵',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_in_tuxedo_tone3', '🤵🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏾','1F935-1F3FE','person in tuxedo: medium-dark skin tone','🤵',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_in_tuxedo_tone4', '🤵🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏿','1F935-1F3FF','person in tuxedo: dark skin tone','🤵',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_in_tuxedo_tone5', '🤵🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵‍♂️','1F935-200D-2642-FE0F','man in tuxedo','🤵‍♂️','{"man","tuxedo"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","tuxedo"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_in_tuxedo', '🤵‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏻‍♂️','1F935-1F3FB-200D-2642-FE0F','man in tuxedo: light skin tone','🤵‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_in_tuxedo_tone1', '🤵🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏼‍♂️','1F935-1F3FC-200D-2642-FE0F','man in tuxedo: medium-light skin tone','🤵‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_in_tuxedo_tone2', '🤵🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏽‍♂️','1F935-1F3FD-200D-2642-FE0F','man in tuxedo: medium skin tone','🤵‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_in_tuxedo_tone3', '🤵🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏾‍♂️','1F935-1F3FE-200D-2642-FE0F','man in tuxedo: medium-dark skin tone','🤵‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_in_tuxedo_tone4', '🤵🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏿‍♂️','1F935-1F3FF-200D-2642-FE0F','man in tuxedo: dark skin tone','🤵‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_in_tuxedo_tone5', '🤵🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵‍♀️','1F935-200D-2640-FE0F','woman in tuxedo','🤵‍♀️','{"tuxedo","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tuxedo","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_in_tuxedo', '🤵‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏻‍♀️','1F935-1F3FB-200D-2640-FE0F','woman in tuxedo: light skin tone','🤵‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_tuxedo_tone1', '🤵🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏼‍♀️','1F935-1F3FC-200D-2640-FE0F','woman in tuxedo: medium-light skin tone','🤵‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_tuxedo_tone2', '🤵🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏽‍♀️','1F935-1F3FD-200D-2640-FE0F','woman in tuxedo: medium skin tone','🤵‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_tuxedo_tone3', '🤵🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏾‍♀️','1F935-1F3FE-200D-2640-FE0F','woman in tuxedo: medium-dark skin tone','🤵‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_tuxedo_tone4', '🤵🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤵🏿‍♀️','1F935-1F3FF-200D-2640-FE0F','woman in tuxedo: dark skin tone','🤵‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_tuxedo_tone5', '🤵🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰','1F470','person with veil','👰','{"wedding","veil","person","bride"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wedding","veil","person","bride"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_with_veil', '👰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏻','1F470-1F3FB','person with veil: light skin tone','👰',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_with_veil_tone1', '👰🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏼','1F470-1F3FC','person with veil: medium-light skin tone','👰',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_with_veil_tone2', '👰🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏽','1F470-1F3FD','person with veil: medium skin tone','👰',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_with_veil_tone3', '👰🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏾','1F470-1F3FE','person with veil: medium-dark skin tone','👰',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_with_veil_tone4', '👰🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏿','1F470-1F3FF','person with veil: dark skin tone','👰',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_with_veil_tone5', '👰🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰‍♂️','1F470-200D-2642-FE0F','man with veil','👰‍♂️','{"man","veil"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","veil"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_with_veil', '👰‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏻‍♂️','1F470-1F3FB-200D-2642-FE0F','man with veil: light skin tone','👰‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_with_veil_tone1', '👰🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏼‍♂️','1F470-1F3FC-200D-2642-FE0F','man with veil: medium-light skin tone','👰‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_with_veil_tone2', '👰🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏽‍♂️','1F470-1F3FD-200D-2642-FE0F','man with veil: medium skin tone','👰‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_with_veil_tone3', '👰🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏾‍♂️','1F470-1F3FE-200D-2642-FE0F','man with veil: medium-dark skin tone','👰‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_with_veil_tone4', '👰🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏿‍♂️','1F470-1F3FF-200D-2642-FE0F','man with veil: dark skin tone','👰‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_with_veil_tone5', '👰🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰‍♀️','1F470-200D-2640-FE0F','woman with veil','👰‍♀️','{"wedding","woman","love","married","bride","veil","marriage","wedding dress","female"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wedding","woman","love","married","bride","veil","marriage","wedding dress","female"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_with_veil', '👰‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏻‍♀️','1F470-1F3FB-200D-2640-FE0F','woman with veil: light skin tone','👰‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_veil_tone1', '👰🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏼‍♀️','1F470-1F3FC-200D-2640-FE0F','woman with veil: medium-light skin tone','👰‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_veil_tone2', '👰🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏽‍♀️','1F470-1F3FD-200D-2640-FE0F','woman with veil: medium skin tone','👰‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_veil_tone3', '👰🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏾‍♀️','1F470-1F3FE-200D-2640-FE0F','woman with veil: medium-dark skin tone','👰‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_veil_tone4', '👰🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👰🏿‍♀️','1F470-1F3FF-200D-2640-FE0F','woman with veil: dark skin tone','👰‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_veil_tone5', '👰🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤰','1F930','pregnant woman','🤰','{"pregnant","child","mother","woman","love","trust","birth","baby","motherhood"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pregnant","child","mother","woman","love","trust","birth","baby","motherhood"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pregnant_woman', '🤰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤰🏻','1F930-1F3FB','pregnant woman: light skin tone','🤰',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_woman_tone1', '🤰🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤰🏼','1F930-1F3FC','pregnant woman: medium-light skin tone','🤰',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_woman_tone2', '🤰🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤰🏽','1F930-1F3FD','pregnant woman: medium skin tone','🤰',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_woman_tone3', '🤰🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤰🏾','1F930-1F3FE','pregnant woman: medium-dark skin tone','🤰',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_woman_tone4', '🤰🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤰🏿','1F930-1F3FF','pregnant woman: dark skin tone','🤰',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_woman_tone5', '🤰🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫃','1FAC3','pregnant man','🫃','{"pregnant","bloated","belly","full"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pregnant","bloated","belly","full"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pregnant_man', '🫃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫃🏻','1FAC3-1F3FB','pregnant man: light skin tone','🫃',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_man_tone1', '🫃🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫃🏼','1FAC3-1F3FC','pregnant man: medium-light skin tone','🫃',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_man_tone2', '🫃🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫃🏽','1FAC3-1F3FD','pregnant man: medium skin tone','🫃',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_man_tone3', '🫃🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫃🏾','1FAC3-1F3FE','pregnant man: medium-dark skin tone','🫃',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_man_tone4', '🫃🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫃🏿','1FAC3-1F3FF','pregnant man: dark skin tone','🫃',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_man_tone5', '🫃🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫄','1FAC4','pregnant person','🫄','{"pregnant","bloated","belly","full"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pregnant","bloated","belly","full"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pregnant_person', '🫄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫄🏻','1FAC4-1F3FB','pregnant person: light skin tone','🫄',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_person_tone1', '🫄🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫄🏼','1FAC4-1F3FC','pregnant person: medium-light skin tone','🫄',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_person_tone2', '🫄🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫄🏽','1FAC4-1F3FD','pregnant person: medium skin tone','🫄',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_person_tone3', '🫄🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫄🏾','1FAC4-1F3FE','pregnant person: medium-dark skin tone','🫄',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_person_tone4', '🫄🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫄🏿','1FAC4-1F3FF','pregnant person: dark skin tone','🫄',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('pregnant_person_tone5', '🫄🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤱','1F931','breast-feeding','🤱','{"mother","nursing","love","trust","baby","breast","motherhood"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mother","nursing","love","trust","baby","breast","motherhood"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('breast_feeding', '🤱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤱🏻','1F931-1F3FB','breast-feeding: light skin tone','🤱',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('breast_feeding_tone1', '🤱🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤱🏼','1F931-1F3FC','breast-feeding: medium-light skin tone','🤱',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('breast_feeding_tone2', '🤱🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤱🏽','1F931-1F3FD','breast-feeding: medium skin tone','🤱',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('breast_feeding_tone3', '🤱🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤱🏾','1F931-1F3FE','breast-feeding: medium-dark skin tone','🤱',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('breast_feeding_tone4', '🤱🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤱🏿','1F931-1F3FF','breast-feeding: dark skin tone','🤱',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('breast_feeding_tone5', '🤱🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🍼','1F469-200D-1F37C','woman feeding baby','👩‍🍼','{"feeding","nursing","baby","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"feeding","nursing","baby","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_feeding_baby', '👩‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🍼','1F469-1F3FB-200D-1F37C','woman feeding baby: light skin tone','👩‍🍼',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_feeding_baby_tone1', '👩🏻‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🍼','1F469-1F3FC-200D-1F37C','woman feeding baby: medium-light skin tone','👩‍🍼',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_feeding_baby_tone2', '👩🏼‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🍼','1F469-1F3FD-200D-1F37C','woman feeding baby: medium skin tone','👩‍🍼',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_feeding_baby_tone3', '👩🏽‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🍼','1F469-1F3FE-200D-1F37C','woman feeding baby: medium-dark skin tone','👩‍🍼',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_feeding_baby_tone4', '👩🏾‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🍼','1F469-1F3FF-200D-1F37C','woman feeding baby: dark skin tone','👩‍🍼',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_feeding_baby_tone5', '👩🏿‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🍼','1F468-200D-1F37C','man feeding baby','👨‍🍼','{"feeding","man","baby","nursing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"feeding","man","baby","nursing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_feeding_baby', '👨‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🍼','1F468-1F3FB-200D-1F37C','man feeding baby: light skin tone','👨‍🍼',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_feeding_baby_tone1', '👨🏻‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🍼','1F468-1F3FC-200D-1F37C','man feeding baby: medium-light skin tone','👨‍🍼',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_feeding_baby_tone2', '👨🏼‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🍼','1F468-1F3FD-200D-1F37C','man feeding baby: medium skin tone','👨‍🍼',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_feeding_baby_tone3', '👨🏽‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🍼','1F468-1F3FE-200D-1F37C','man feeding baby: medium-dark skin tone','👨‍🍼',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_feeding_baby_tone4', '👨🏾‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🍼','1F468-1F3FF-200D-1F37C','man feeding baby: dark skin tone','👨‍🍼',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_feeding_baby_tone5', '👨🏿‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🍼','1F9D1-200D-1F37C','person feeding baby','🧑‍🍼','{"feeding","nursing","baby","person"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"feeding","nursing","baby","person"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_feeding_baby', '🧑‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🍼','1F9D1-1F3FB-200D-1F37C','person feeding baby: light skin tone','🧑‍🍼',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_feeding_baby_tone1', '🧑🏻‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🍼','1F9D1-1F3FC-200D-1F37C','person feeding baby: medium-light skin tone','🧑‍🍼',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_feeding_baby_tone2', '🧑🏼‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🍼','1F9D1-1F3FD-200D-1F37C','person feeding baby: medium skin tone','🧑‍🍼',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_feeding_baby_tone3', '🧑🏽‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🍼','1F9D1-1F3FE-200D-1F37C','person feeding baby: medium-dark skin tone','🧑‍🍼',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_feeding_baby_tone4', '🧑🏾‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🍼','1F9D1-1F3FF-200D-1F37C','person feeding baby: dark skin tone','🧑‍🍼',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_feeding_baby_tone5', '🧑🏿‍🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👼','1F47C','baby angel','👼','{"face","angel","fairy tale","fantasy","baby"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","angel","fairy tale","fantasy","baby"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('angel', '👼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👼🏻','1F47C-1F3FB','baby angel: light skin tone','👼',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('angel_tone1', '👼🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👼🏼','1F47C-1F3FC','baby angel: medium-light skin tone','👼',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('angel_tone2', '👼🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👼🏽','1F47C-1F3FD','baby angel: medium skin tone','👼',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('angel_tone3', '👼🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👼🏾','1F47C-1F3FE','baby angel: medium-dark skin tone','👼',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('angel_tone4', '👼🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👼🏿','1F47C-1F3FF','baby angel: dark skin tone','👼',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('angel_tone5', '👼🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎅','1F385','Santa Claus','🎅','{"claus","celebration","jolly","happy","saint nicholas","father","xmas","christmas","santa","santa claus","holiday"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"claus","celebration","jolly","happy","saint nicholas","father","xmas","christmas","santa","santa claus","holiday"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('santa', '🎅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎅🏻','1F385-1F3FB','Santa Claus: light skin tone','🎅',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('santa_tone1', '🎅🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎅🏼','1F385-1F3FC','Santa Claus: medium-light skin tone','🎅',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('santa_tone2', '🎅🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎅🏽','1F385-1F3FD','Santa Claus: medium skin tone','🎅',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('santa_tone3', '🎅🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎅🏾','1F385-1F3FE','Santa Claus: medium-dark skin tone','🎅',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('santa_tone4', '🎅🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎅🏿','1F385-1F3FF','Santa Claus: dark skin tone','🎅',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('santa_tone5', '🎅🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤶','1F936','Mrs. Claus','🤶','{"mother","mrs. claus","mrs. clause","claus","celebration","jolly","happy","xmas","christmas","holiday","mrs."}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mother","mrs. claus","mrs. clause","claus","celebration","jolly","happy","xmas","christmas","holiday","mrs."}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mrs_claus', '🤶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤶🏻','1F936-1F3FB','Mrs. Claus: light skin tone','🤶',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('mrs_claus_tone1', '🤶🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤶🏼','1F936-1F3FC','Mrs. Claus: medium-light skin tone','🤶',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('mrs_claus_tone2', '🤶🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤶🏽','1F936-1F3FD','Mrs. Claus: medium skin tone','🤶',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('mrs_claus_tone3', '🤶🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤶🏾','1F936-1F3FE','Mrs. Claus: medium-dark skin tone','🤶',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('mrs_claus_tone4', '🤶🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤶🏿','1F936-1F3FF','Mrs. Claus: dark skin tone','🤶',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('mrs_claus_tone5', '🤶🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🎄','1F9D1-200D-1F384','mx claus','🧑‍🎄','{"claus","christmas"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"claus","christmas"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mx_claus', '🧑‍🎄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🎄','1F9D1-1F3FB-200D-1F384','mx claus: light skin tone','🧑‍🎄',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('mx_claus_tone1', '🧑🏻‍🎄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🎄','1F9D1-1F3FC-200D-1F384','mx claus: medium-light skin tone','🧑‍🎄',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('mx_claus_tone2', '🧑🏼‍🎄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🎄','1F9D1-1F3FD-200D-1F384','mx claus: medium skin tone','🧑‍🎄',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('mx_claus_tone3', '🧑🏽‍🎄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🎄','1F9D1-1F3FE-200D-1F384','mx claus: medium-dark skin tone','🧑‍🎄',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('mx_claus_tone4', '🧑🏾‍🎄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🎄','1F9D1-1F3FF-200D-1F384','mx claus: dark skin tone','🧑‍🎄',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('mx_claus_tone5', '🧑🏿‍🎄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸','1F9B8','superhero','🦸','{"heroine","good","superpower","hero"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"heroine","good","superpower","hero"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('superhero', '🦸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏻','1F9B8-1F3FB','superhero: light skin tone','🦸',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('superhero_tone1', '🦸🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏼','1F9B8-1F3FC','superhero: medium-light skin tone','🦸',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('superhero_tone2', '🦸🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏽','1F9B8-1F3FD','superhero: medium skin tone','🦸',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('superhero_tone3', '🦸🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏾','1F9B8-1F3FE','superhero: medium-dark skin tone','🦸',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('superhero_tone4', '🦸🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏿','1F9B8-1F3FF','superhero: dark skin tone','🦸',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('superhero_tone5', '🦸🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸‍♂️','1F9B8-200D-2642-FE0F','man superhero','🦸‍♂️','{"man","good","superpower","hero"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","good","superpower","hero"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_superhero', '🦸‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏻‍♂️','1F9B8-1F3FB-200D-2642-FE0F','man superhero: light skin tone','🦸‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_superhero_tone1', '🦸🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏼‍♂️','1F9B8-1F3FC-200D-2642-FE0F','man superhero: medium-light skin tone','🦸‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_superhero_tone2', '🦸🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏽‍♂️','1F9B8-1F3FD-200D-2642-FE0F','man superhero: medium skin tone','🦸‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_superhero_tone3', '🦸🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏾‍♂️','1F9B8-1F3FE-200D-2642-FE0F','man superhero: medium-dark skin tone','🦸‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_superhero_tone4', '🦸🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏿‍♂️','1F9B8-1F3FF-200D-2642-FE0F','man superhero: dark skin tone','🦸‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_superhero_tone5', '🦸🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸‍♀️','1F9B8-200D-2640-FE0F','woman superhero','🦸‍♀️','{"woman","hero","heroine","good","superpower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","hero","heroine","good","superpower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_superhero', '🦸‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏻‍♀️','1F9B8-1F3FB-200D-2640-FE0F','woman superhero: light skin tone','🦸‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_superhero_tone1', '🦸🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏼‍♀️','1F9B8-1F3FC-200D-2640-FE0F','woman superhero: medium-light skin tone','🦸‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_superhero_tone2', '🦸🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏽‍♀️','1F9B8-1F3FD-200D-2640-FE0F','woman superhero: medium skin tone','🦸‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_superhero_tone3', '🦸🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏾‍♀️','1F9B8-1F3FE-200D-2640-FE0F','woman superhero: medium-dark skin tone','🦸‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_superhero_tone4', '🦸🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦸🏿‍♀️','1F9B8-1F3FF-200D-2640-FE0F','woman superhero: dark skin tone','🦸‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_superhero_tone5', '🦸🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹','1F9B9','supervillain','🦹','{"villain","evil","criminal","superpower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"villain","evil","criminal","superpower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('supervillain', '🦹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏻','1F9B9-1F3FB','supervillain: light skin tone','🦹',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('supervillain_tone1', '🦹🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏼','1F9B9-1F3FC','supervillain: medium-light skin tone','🦹',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('supervillain_tone2', '🦹🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏽','1F9B9-1F3FD','supervillain: medium skin tone','🦹',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('supervillain_tone3', '🦹🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏾','1F9B9-1F3FE','supervillain: medium-dark skin tone','🦹',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('supervillain_tone4', '🦹🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏿','1F9B9-1F3FF','supervillain: dark skin tone','🦹',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('supervillain_tone5', '🦹🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹‍♂️','1F9B9-200D-2642-FE0F','man supervillain','🦹‍♂️','{"villain","evil","criminal","man","superpower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"villain","evil","criminal","man","superpower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_supervillain', '🦹‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏻‍♂️','1F9B9-1F3FB-200D-2642-FE0F','man supervillain: light skin tone','🦹‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_supervillain_tone1', '🦹🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏼‍♂️','1F9B9-1F3FC-200D-2642-FE0F','man supervillain: medium-light skin tone','🦹‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_supervillain_tone2', '🦹🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏽‍♂️','1F9B9-1F3FD-200D-2642-FE0F','man supervillain: medium skin tone','🦹‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_supervillain_tone3', '🦹🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏾‍♂️','1F9B9-1F3FE-200D-2642-FE0F','man supervillain: medium-dark skin tone','🦹‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_supervillain_tone4', '🦹🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏿‍♂️','1F9B9-1F3FF-200D-2642-FE0F','man supervillain: dark skin tone','🦹‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_supervillain_tone5', '🦹🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹‍♀️','1F9B9-200D-2640-FE0F','woman supervillain','🦹‍♀️','{"woman","villain","evil","criminal","superpower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","villain","evil","criminal","superpower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_supervillain', '🦹‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏻‍♀️','1F9B9-1F3FB-200D-2640-FE0F','woman supervillain: light skin tone','🦹‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_supervillain_tone1', '🦹🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏼‍♀️','1F9B9-1F3FC-200D-2640-FE0F','woman supervillain: medium-light skin tone','🦹‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_supervillain_tone2', '🦹🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏽‍♀️','1F9B9-1F3FD-200D-2640-FE0F','woman supervillain: medium skin tone','🦹‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_supervillain_tone3', '🦹🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏾‍♀️','1F9B9-1F3FE-200D-2640-FE0F','woman supervillain: medium-dark skin tone','🦹‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_supervillain_tone4', '🦹🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦹🏿‍♀️','1F9B9-1F3FF-200D-2640-FE0F','woman supervillain: dark skin tone','🦹‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_supervillain_tone5', '🦹🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙','1F9D9','mage','🧙','{"sage","magician","witch","wand","sorceress","sorcerer","wizard"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sage","magician","witch","wand","sorceress","sorcerer","wizard"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mage', '🧙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏻','1F9D9-1F3FB','mage: light skin tone','🧙',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('mage_tone1', '🧙🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏼','1F9D9-1F3FC','mage: medium-light skin tone','🧙',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('mage_tone2', '🧙🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏽','1F9D9-1F3FD','mage: medium skin tone','🧙',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('mage_tone3', '🧙🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏾','1F9D9-1F3FE','mage: medium-dark skin tone','🧙',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('mage_tone4', '🧙🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏿','1F9D9-1F3FF','mage: dark skin tone','🧙',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('mage_tone5', '🧙🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙‍♂️','1F9D9-200D-2642-FE0F','man mage','🧙‍♂️','{"wizard","sorcerer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wizard","sorcerer"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_mage', '🧙‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏻‍♂️','1F9D9-1F3FB-200D-2642-FE0F','man mage: light skin tone','🧙‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_mage_tone1', '🧙🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏼‍♂️','1F9D9-1F3FC-200D-2642-FE0F','man mage: medium-light skin tone','🧙‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_mage_tone2', '🧙🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏽‍♂️','1F9D9-1F3FD-200D-2642-FE0F','man mage: medium skin tone','🧙‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_mage_tone3', '🧙🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏾‍♂️','1F9D9-1F3FE-200D-2642-FE0F','man mage: medium-dark skin tone','🧙‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_mage_tone4', '🧙🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏿‍♂️','1F9D9-1F3FF-200D-2642-FE0F','man mage: dark skin tone','🧙‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_mage_tone5', '🧙🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙‍♀️','1F9D9-200D-2640-FE0F','woman mage','🧙‍♀️','{"sorceress","witch"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sorceress","witch"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_mage', '🧙‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏻‍♀️','1F9D9-1F3FB-200D-2640-FE0F','woman mage: light skin tone','🧙‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_mage_tone1', '🧙🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏼‍♀️','1F9D9-1F3FC-200D-2640-FE0F','woman mage: medium-light skin tone','🧙‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_mage_tone2', '🧙🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏽‍♀️','1F9D9-1F3FD-200D-2640-FE0F','woman mage: medium skin tone','🧙‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_mage_tone3', '🧙🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏾‍♀️','1F9D9-1F3FE-200D-2640-FE0F','woman mage: medium-dark skin tone','🧙‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_mage_tone4', '🧙🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧙🏿‍♀️','1F9D9-1F3FF-200D-2640-FE0F','woman mage: dark skin tone','🧙‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_mage_tone5', '🧙🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚','1F9DA','fairy','🧚','{"puck","titania","oberon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"puck","titania","oberon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fairy', '🧚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏻','1F9DA-1F3FB','fairy: light skin tone','🧚',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('fairy_tone1', '🧚🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏼','1F9DA-1F3FC','fairy: medium-light skin tone','🧚',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('fairy_tone2', '🧚🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏽','1F9DA-1F3FD','fairy: medium skin tone','🧚',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('fairy_tone3', '🧚🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏾','1F9DA-1F3FE','fairy: medium-dark skin tone','🧚',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('fairy_tone4', '🧚🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏿','1F9DA-1F3FF','fairy: dark skin tone','🧚',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('fairy_tone5', '🧚🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚‍♂️','1F9DA-200D-2642-FE0F','man fairy','🧚‍♂️','{"puck","oberon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"puck","oberon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_fairy', '🧚‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏻‍♂️','1F9DA-1F3FB-200D-2642-FE0F','man fairy: light skin tone','🧚‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_fairy_tone1', '🧚🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏼‍♂️','1F9DA-1F3FC-200D-2642-FE0F','man fairy: medium-light skin tone','🧚‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_fairy_tone2', '🧚🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏽‍♂️','1F9DA-1F3FD-200D-2642-FE0F','man fairy: medium skin tone','🧚‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_fairy_tone3', '🧚🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏾‍♂️','1F9DA-1F3FE-200D-2642-FE0F','man fairy: medium-dark skin tone','🧚‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_fairy_tone4', '🧚🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏿‍♂️','1F9DA-1F3FF-200D-2642-FE0F','man fairy: dark skin tone','🧚‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_fairy_tone5', '🧚🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚‍♀️','1F9DA-200D-2640-FE0F','woman fairy','🧚‍♀️','{"titania"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"titania"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_fairy', '🧚‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏻‍♀️','1F9DA-1F3FB-200D-2640-FE0F','woman fairy: light skin tone','🧚‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_fairy_tone1', '🧚🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏼‍♀️','1F9DA-1F3FC-200D-2640-FE0F','woman fairy: medium-light skin tone','🧚‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_fairy_tone2', '🧚🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏽‍♀️','1F9DA-1F3FD-200D-2640-FE0F','woman fairy: medium skin tone','🧚‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_fairy_tone3', '🧚🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏾‍♀️','1F9DA-1F3FE-200D-2640-FE0F','woman fairy: medium-dark skin tone','🧚‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_fairy_tone4', '🧚🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧚🏿‍♀️','1F9DA-1F3FF-200D-2640-FE0F','woman fairy: dark skin tone','🧚‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_fairy_tone5', '🧚🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛','1F9DB','vampire','🧛','{"undead","dracula"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"undead","dracula"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('vampire', '🧛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏻','1F9DB-1F3FB','vampire: light skin tone','🧛',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('vampire_tone1', '🧛🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏼','1F9DB-1F3FC','vampire: medium-light skin tone','🧛',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('vampire_tone2', '🧛🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏽','1F9DB-1F3FD','vampire: medium skin tone','🧛',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('vampire_tone3', '🧛🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏾','1F9DB-1F3FE','vampire: medium-dark skin tone','🧛',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('vampire_tone4', '🧛🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏿','1F9DB-1F3FF','vampire: dark skin tone','🧛',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('vampire_tone5', '🧛🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛‍♂️','1F9DB-200D-2642-FE0F','man vampire','🧛‍♂️','{"undead","dracula"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"undead","dracula"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_vampire', '🧛‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏻‍♂️','1F9DB-1F3FB-200D-2642-FE0F','man vampire: light skin tone','🧛‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_vampire_tone1', '🧛🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏼‍♂️','1F9DB-1F3FC-200D-2642-FE0F','man vampire: medium-light skin tone','🧛‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_vampire_tone2', '🧛🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏽‍♂️','1F9DB-1F3FD-200D-2642-FE0F','man vampire: medium skin tone','🧛‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_vampire_tone3', '🧛🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏾‍♂️','1F9DB-1F3FE-200D-2642-FE0F','man vampire: medium-dark skin tone','🧛‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_vampire_tone4', '🧛🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏿‍♂️','1F9DB-1F3FF-200D-2642-FE0F','man vampire: dark skin tone','🧛‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_vampire_tone5', '🧛🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛‍♀️','1F9DB-200D-2640-FE0F','woman vampire','🧛‍♀️','{"undead"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"undead"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_vampire', '🧛‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏻‍♀️','1F9DB-1F3FB-200D-2640-FE0F','woman vampire: light skin tone','🧛‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_vampire_tone1', '🧛🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏼‍♀️','1F9DB-1F3FC-200D-2640-FE0F','woman vampire: medium-light skin tone','🧛‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_vampire_tone2', '🧛🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏽‍♀️','1F9DB-1F3FD-200D-2640-FE0F','woman vampire: medium skin tone','🧛‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_vampire_tone3', '🧛🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏾‍♀️','1F9DB-1F3FE-200D-2640-FE0F','woman vampire: medium-dark skin tone','🧛‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_vampire_tone4', '🧛🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧛🏿‍♀️','1F9DB-1F3FF-200D-2640-FE0F','woman vampire: dark skin tone','🧛‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_vampire_tone5', '🧛🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜','1F9DC','merperson','🧜','{"merwoman","merman","mermaid"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"merwoman","merman","mermaid"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('merperson', '🧜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏻','1F9DC-1F3FB','merperson: light skin tone','🧜',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('merperson_tone1', '🧜🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏼','1F9DC-1F3FC','merperson: medium-light skin tone','🧜',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('merperson_tone2', '🧜🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏽','1F9DC-1F3FD','merperson: medium skin tone','🧜',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('merperson_tone3', '🧜🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏾','1F9DC-1F3FE','merperson: medium-dark skin tone','🧜',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('merperson_tone4', '🧜🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏿','1F9DC-1F3FF','merperson: dark skin tone','🧜',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('merperson_tone5', '🧜🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜‍♂️','1F9DC-200D-2642-FE0F','merman','🧜‍♂️','{"triton"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"triton"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('merman', '🧜‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏻‍♂️','1F9DC-1F3FB-200D-2642-FE0F','merman: light skin tone','🧜‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('merman_tone1', '🧜🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏼‍♂️','1F9DC-1F3FC-200D-2642-FE0F','merman: medium-light skin tone','🧜‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('merman_tone2', '🧜🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏽‍♂️','1F9DC-1F3FD-200D-2642-FE0F','merman: medium skin tone','🧜‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('merman_tone3', '🧜🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏾‍♂️','1F9DC-1F3FE-200D-2642-FE0F','merman: medium-dark skin tone','🧜‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('merman_tone4', '🧜🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏿‍♂️','1F9DC-1F3FF-200D-2642-FE0F','merman: dark skin tone','🧜‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('merman_tone5', '🧜🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜‍♀️','1F9DC-200D-2640-FE0F','mermaid','🧜‍♀️','{"merwoman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"merwoman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mermaid', '🧜‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏻‍♀️','1F9DC-1F3FB-200D-2640-FE0F','mermaid: light skin tone','🧜‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('mermaid_tone1', '🧜🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏼‍♀️','1F9DC-1F3FC-200D-2640-FE0F','mermaid: medium-light skin tone','🧜‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('mermaid_tone2', '🧜🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏽‍♀️','1F9DC-1F3FD-200D-2640-FE0F','mermaid: medium skin tone','🧜‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('mermaid_tone3', '🧜🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏾‍♀️','1F9DC-1F3FE-200D-2640-FE0F','mermaid: medium-dark skin tone','🧜‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('mermaid_tone4', '🧜🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧜🏿‍♀️','1F9DC-1F3FF-200D-2640-FE0F','mermaid: dark skin tone','🧜‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('mermaid_tone5', '🧜🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝','1F9DD','elf','🧝','{"pointy ears","arrow","mystic","magical","bow"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pointy ears","arrow","mystic","magical","bow"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('elf', '🧝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏻','1F9DD-1F3FB','elf: light skin tone','🧝',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('elf_tone1', '🧝🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏼','1F9DD-1F3FC','elf: medium-light skin tone','🧝',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('elf_tone2', '🧝🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏽','1F9DD-1F3FD','elf: medium skin tone','🧝',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('elf_tone3', '🧝🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏾','1F9DD-1F3FE','elf: medium-dark skin tone','🧝',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('elf_tone4', '🧝🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏿','1F9DD-1F3FF','elf: dark skin tone','🧝',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('elf_tone5', '🧝🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝‍♂️','1F9DD-200D-2642-FE0F','man elf','🧝‍♂️','{"magical"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"magical"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_elf', '🧝‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏻‍♂️','1F9DD-1F3FB-200D-2642-FE0F','man elf: light skin tone','🧝‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_elf_tone1', '🧝🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏼‍♂️','1F9DD-1F3FC-200D-2642-FE0F','man elf: medium-light skin tone','🧝‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_elf_tone2', '🧝🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏽‍♂️','1F9DD-1F3FD-200D-2642-FE0F','man elf: medium skin tone','🧝‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_elf_tone3', '🧝🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏾‍♂️','1F9DD-1F3FE-200D-2642-FE0F','man elf: medium-dark skin tone','🧝‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_elf_tone4', '🧝🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏿‍♂️','1F9DD-1F3FF-200D-2642-FE0F','man elf: dark skin tone','🧝‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_elf_tone5', '🧝🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝‍♀️','1F9DD-200D-2640-FE0F','woman elf','🧝‍♀️','{"magical"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"magical"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_elf', '🧝‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏻‍♀️','1F9DD-1F3FB-200D-2640-FE0F','woman elf: light skin tone','🧝‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_elf_tone1', '🧝🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏼‍♀️','1F9DD-1F3FC-200D-2640-FE0F','woman elf: medium-light skin tone','🧝‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_elf_tone2', '🧝🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏽‍♀️','1F9DD-1F3FD-200D-2640-FE0F','woman elf: medium skin tone','🧝‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_elf_tone3', '🧝🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏾‍♀️','1F9DD-1F3FE-200D-2640-FE0F','woman elf: medium-dark skin tone','🧝‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_elf_tone4', '🧝🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧝🏿‍♀️','1F9DD-1F3FF-200D-2640-FE0F','woman elf: dark skin tone','🧝‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_elf_tone5', '🧝🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧞','1F9DE','genie',default,'{"magic","djinn","wish","magic lamp"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"magic","djinn","wish","magic lamp"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('genie', '🧞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧞‍♂️','1F9DE-200D-2642-FE0F','man genie',default,'{"djinn"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"djinn"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_genie', '🧞‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧞‍♀️','1F9DE-200D-2640-FE0F','woman genie',default,'{"djinn"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"djinn"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_genie', '🧞‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧟','1F9DF','zombie',default,'{"undead","walking dead","brain","decayed"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"undead","walking dead","brain","decayed"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('zombie', '🧟') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧟‍♂️','1F9DF-200D-2642-FE0F','man zombie',default,'{"undead","walking dead"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"undead","walking dead"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_zombie', '🧟‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧟‍♀️','1F9DF-200D-2640-FE0F','woman zombie',default,'{"undead","walking dead"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"undead","walking dead"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_zombie', '🧟‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧌','1F9CC','troll',default,'{"fairy tale","monster","fantasy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fairy tale","monster","fantasy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('troll', '🧌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆','1F486','person getting massage','💆','{"salon","massage","person","face","human"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"salon","massage","person","face","human"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_getting_massage', '💆') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('massage', '💆') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏻','1F486-1F3FB','person getting massage: light skin tone','💆',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('massage_tone1', '💆🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_getting_massage_tone1', '💆🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏼','1F486-1F3FC','person getting massage: medium-light skin tone','💆',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('massage_tone2', '💆🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_getting_massage_tone2', '💆🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏽','1F486-1F3FD','person getting massage: medium skin tone','💆',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_getting_massage_tone3', '💆🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('massage_tone3', '💆🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏾','1F486-1F3FE','person getting massage: medium-dark skin tone','💆',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_getting_massage_tone4', '💆🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('massage_tone4', '💆🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏿','1F486-1F3FF','person getting massage: dark skin tone','💆',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('massage_tone5', '💆🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_getting_massage_tone5', '💆🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆‍♂️','1F486-200D-2642-FE0F','man getting massage','💆‍♂️','{"man","massage","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","massage","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_getting_massage', '💆‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏻‍♂️','1F486-1F3FB-200D-2642-FE0F','man getting massage: light skin tone','💆‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_getting_massage_tone1', '💆🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏼‍♂️','1F486-1F3FC-200D-2642-FE0F','man getting massage: medium-light skin tone','💆‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_getting_massage_tone2', '💆🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏽‍♂️','1F486-1F3FD-200D-2642-FE0F','man getting massage: medium skin tone','💆‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_getting_massage_tone3', '💆🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏾‍♂️','1F486-1F3FE-200D-2642-FE0F','man getting massage: medium-dark skin tone','💆‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_getting_massage_tone4', '💆🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏿‍♂️','1F486-1F3FF-200D-2642-FE0F','man getting massage: dark skin tone','💆‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_getting_massage_tone5', '💆🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆‍♀️','1F486-200D-2640-FE0F','woman getting massage','💆‍♀️','{"massage","face","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"massage","face","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_getting_massage', '💆‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏻‍♀️','1F486-1F3FB-200D-2640-FE0F','woman getting massage: light skin tone','💆‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_getting_massage_tone1', '💆🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏼‍♀️','1F486-1F3FC-200D-2640-FE0F','woman getting massage: medium-light skin tone','💆‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_getting_massage_tone2', '💆🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏽‍♀️','1F486-1F3FD-200D-2640-FE0F','woman getting massage: medium skin tone','💆‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_getting_massage_tone3', '💆🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏾‍♀️','1F486-1F3FE-200D-2640-FE0F','woman getting massage: medium-dark skin tone','💆‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_getting_massage_tone4', '💆🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💆🏿‍♀️','1F486-1F3FF-200D-2640-FE0F','woman getting massage: dark skin tone','💆‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_getting_massage_tone5', '💆🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇','1F487','person getting haircut','💇','{"person","parlor","haircut","human","barber","beauty"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"person","parlor","haircut","human","barber","beauty"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_getting_haircut', '💇') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('haircut', '💇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏻','1F487-1F3FB','person getting haircut: light skin tone','💇',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('haircut_tone1', '💇🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_getting_haircut_tone1', '💇🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏼','1F487-1F3FC','person getting haircut: medium-light skin tone','💇',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_getting_haircut_tone2', '💇🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('haircut_tone2', '💇🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏽','1F487-1F3FD','person getting haircut: medium skin tone','💇',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_getting_haircut_tone3', '💇🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('haircut_tone3', '💇🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏾','1F487-1F3FE','person getting haircut: medium-dark skin tone','💇',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('haircut_tone4', '💇🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_getting_haircut_tone4', '💇🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏿','1F487-1F3FF','person getting haircut: dark skin tone','💇',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('haircut_tone5', '💇🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_getting_haircut_tone5', '💇🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇‍♂️','1F487-200D-2642-FE0F','man getting haircut','💇‍♂️','{"man","haircut"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","haircut"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_getting_haircut', '💇‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏻‍♂️','1F487-1F3FB-200D-2642-FE0F','man getting haircut: light skin tone','💇‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_getting_haircut_tone1', '💇🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏼‍♂️','1F487-1F3FC-200D-2642-FE0F','man getting haircut: medium-light skin tone','💇‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_getting_haircut_tone2', '💇🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏽‍♂️','1F487-1F3FD-200D-2642-FE0F','man getting haircut: medium skin tone','💇‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_getting_haircut_tone3', '💇🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏾‍♂️','1F487-1F3FE-200D-2642-FE0F','man getting haircut: medium-dark skin tone','💇‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_getting_haircut_tone4', '💇🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏿‍♂️','1F487-1F3FF-200D-2642-FE0F','man getting haircut: dark skin tone','💇‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_getting_haircut_tone5', '💇🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇‍♀️','1F487-200D-2640-FE0F','woman getting haircut','💇‍♀️','{"haircut","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"haircut","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_getting_haircut', '💇‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏻‍♀️','1F487-1F3FB-200D-2640-FE0F','woman getting haircut: light skin tone','💇‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_getting_haircut_tone1', '💇🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏼‍♀️','1F487-1F3FC-200D-2640-FE0F','woman getting haircut: medium-light skin tone','💇‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_getting_haircut_tone2', '💇🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏽‍♀️','1F487-1F3FD-200D-2640-FE0F','woman getting haircut: medium skin tone','💇‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_getting_haircut_tone3', '💇🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏾‍♀️','1F487-1F3FE-200D-2640-FE0F','woman getting haircut: medium-dark skin tone','💇‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_getting_haircut_tone4', '💇🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💇🏿‍♀️','1F487-1F3FF-200D-2640-FE0F','woman getting haircut: dark skin tone','💇‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_getting_haircut_tone5', '💇🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶','1F6B6','person walking','🚶','{"person","walk","hike","walking","human"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"person","walk","hike","walking","human"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('walking', '🚶') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_walking', '🚶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏻','1F6B6-1F3FB','person walking: light skin tone','🚶',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('walking_tone1', '🚶🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_walking_tone1', '🚶🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏼','1F6B6-1F3FC','person walking: medium-light skin tone','🚶',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_walking_tone2', '🚶🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('walking_tone2', '🚶🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏽','1F6B6-1F3FD','person walking: medium skin tone','🚶',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_walking_tone3', '🚶🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('walking_tone3', '🚶🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏾','1F6B6-1F3FE','person walking: medium-dark skin tone','🚶',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('walking_tone4', '🚶🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_walking_tone4', '🚶🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏿','1F6B6-1F3FF','person walking: dark skin tone','🚶',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_walking_tone5', '🚶🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('walking_tone5', '🚶🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶‍♂️','1F6B6-200D-2642-FE0F','man walking','🚶‍♂️','{"person","walk","hike","man","human"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"person","walk","hike","man","human"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_walking', '🚶‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏻‍♂️','1F6B6-1F3FB-200D-2642-FE0F','man walking: light skin tone','🚶‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_walking_tone1', '🚶🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏼‍♂️','1F6B6-1F3FC-200D-2642-FE0F','man walking: medium-light skin tone','🚶‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_walking_tone2', '🚶🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏽‍♂️','1F6B6-1F3FD-200D-2642-FE0F','man walking: medium skin tone','🚶‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_walking_tone3', '🚶🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏾‍♂️','1F6B6-1F3FE-200D-2642-FE0F','man walking: medium-dark skin tone','🚶‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_walking_tone4', '🚶🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏿‍♂️','1F6B6-1F3FF-200D-2642-FE0F','man walking: dark skin tone','🚶‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_walking_tone5', '🚶🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶‍♀️','1F6B6-200D-2640-FE0F','woman walking','🚶‍♀️','{"person","walk","woman","hike","human"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"person","walk","woman","hike","human"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_walking', '🚶‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏻‍♀️','1F6B6-1F3FB-200D-2640-FE0F','woman walking: light skin tone','🚶‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_walking_tone1', '🚶🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏼‍♀️','1F6B6-1F3FC-200D-2640-FE0F','woman walking: medium-light skin tone','🚶‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_walking_tone2', '🚶🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏽‍♀️','1F6B6-1F3FD-200D-2640-FE0F','woman walking: medium skin tone','🚶‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_walking_tone3', '🚶🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏾‍♀️','1F6B6-1F3FE-200D-2640-FE0F','woman walking: medium-dark skin tone','🚶‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_walking_tone4', '🚶🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚶🏿‍♀️','1F6B6-1F3FF-200D-2640-FE0F','woman walking: dark skin tone','🚶‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_walking_tone5', '🚶🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍','1F9CD','person standing','🧍','{"stand","standing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stand","standing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_standing', '🧍') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('standing', '🧍') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏻','1F9CD-1F3FB','person standing: light skin tone','🧍',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_standing_tone1', '🧍🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('standing_tone1', '🧍🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏼','1F9CD-1F3FC','person standing: medium-light skin tone','🧍',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('standing_tone2', '🧍🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_standing_tone2', '🧍🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏽','1F9CD-1F3FD','person standing: medium skin tone','🧍',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('standing_tone3', '🧍🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_standing_tone3', '🧍🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏾','1F9CD-1F3FE','person standing: medium-dark skin tone','🧍',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_standing_tone4', '🧍🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('standing_tone4', '🧍🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏿','1F9CD-1F3FF','person standing: dark skin tone','🧍',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_standing_tone5', '🧍🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('standing_tone5', '🧍🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍‍♂️','1F9CD-200D-2642-FE0F','man standing','🧍‍♂️','{"man","standing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","standing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_standing', '🧍‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏻‍♂️','1F9CD-1F3FB-200D-2642-FE0F','man standing: light skin tone','🧍‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_standing_tone1', '🧍🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏼‍♂️','1F9CD-1F3FC-200D-2642-FE0F','man standing: medium-light skin tone','🧍‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_standing_tone2', '🧍🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏽‍♂️','1F9CD-1F3FD-200D-2642-FE0F','man standing: medium skin tone','🧍‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_standing_tone3', '🧍🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏾‍♂️','1F9CD-1F3FE-200D-2642-FE0F','man standing: medium-dark skin tone','🧍‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_standing_tone4', '🧍🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏿‍♂️','1F9CD-1F3FF-200D-2642-FE0F','man standing: dark skin tone','🧍‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_standing_tone5', '🧍🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍‍♀️','1F9CD-200D-2640-FE0F','woman standing','🧍‍♀️','{"woman","standing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","standing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_standing', '🧍‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏻‍♀️','1F9CD-1F3FB-200D-2640-FE0F','woman standing: light skin tone','🧍‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_standing_tone1', '🧍🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏼‍♀️','1F9CD-1F3FC-200D-2640-FE0F','woman standing: medium-light skin tone','🧍‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_standing_tone2', '🧍🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏽‍♀️','1F9CD-1F3FD-200D-2640-FE0F','woman standing: medium skin tone','🧍‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_standing_tone3', '🧍🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏾‍♀️','1F9CD-1F3FE-200D-2640-FE0F','woman standing: medium-dark skin tone','🧍‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_standing_tone4', '🧍🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧍🏿‍♀️','1F9CD-1F3FF-200D-2640-FE0F','woman standing: dark skin tone','🧍‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_standing_tone5', '🧍🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎','1F9CE','person kneeling','🧎','{"kneel","kneeling"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"kneel","kneeling"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_kneeling', '🧎') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kneeling', '🧎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏻','1F9CE-1F3FB','person kneeling: light skin tone','🧎',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_kneeling_tone1', '🧎🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kneeling_tone1', '🧎🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏼','1F9CE-1F3FC','person kneeling: medium-light skin tone','🧎',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('kneeling_tone2', '🧎🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_kneeling_tone2', '🧎🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏽','1F9CE-1F3FD','person kneeling: medium skin tone','🧎',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('kneeling_tone3', '🧎🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_kneeling_tone3', '🧎🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏾','1F9CE-1F3FE','person kneeling: medium-dark skin tone','🧎',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_kneeling_tone4', '🧎🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kneeling_tone4', '🧎🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏿','1F9CE-1F3FF','person kneeling: dark skin tone','🧎',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('kneeling_tone5', '🧎🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_kneeling_tone5', '🧎🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎‍♂️','1F9CE-200D-2642-FE0F','man kneeling','🧎‍♂️','{"man","kneeling"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","kneeling"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_kneeling', '🧎‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏻‍♂️','1F9CE-1F3FB-200D-2642-FE0F','man kneeling: light skin tone','🧎‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_kneeling_tone1', '🧎🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏼‍♂️','1F9CE-1F3FC-200D-2642-FE0F','man kneeling: medium-light skin tone','🧎‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_kneeling_tone2', '🧎🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏽‍♂️','1F9CE-1F3FD-200D-2642-FE0F','man kneeling: medium skin tone','🧎‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_kneeling_tone3', '🧎🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏾‍♂️','1F9CE-1F3FE-200D-2642-FE0F','man kneeling: medium-dark skin tone','🧎‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_kneeling_tone4', '🧎🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏿‍♂️','1F9CE-1F3FF-200D-2642-FE0F','man kneeling: dark skin tone','🧎‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_kneeling_tone5', '🧎🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎‍♀️','1F9CE-200D-2640-FE0F','woman kneeling','🧎‍♀️','{"kneeling","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"kneeling","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_kneeling', '🧎‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏻‍♀️','1F9CE-1F3FB-200D-2640-FE0F','woman kneeling: light skin tone','🧎‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_kneeling_tone1', '🧎🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏼‍♀️','1F9CE-1F3FC-200D-2640-FE0F','woman kneeling: medium-light skin tone','🧎‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_kneeling_tone2', '🧎🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏽‍♀️','1F9CE-1F3FD-200D-2640-FE0F','woman kneeling: medium skin tone','🧎‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_kneeling_tone3', '🧎🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏾‍♀️','1F9CE-1F3FE-200D-2640-FE0F','woman kneeling: medium-dark skin tone','🧎‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_kneeling_tone4', '🧎🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧎🏿‍♀️','1F9CE-1F3FF-200D-2640-FE0F','woman kneeling: dark skin tone','🧎‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_kneeling_tone5', '🧎🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🦯','1F9D1-200D-1F9AF','person with white cane','🧑‍🦯','{"accessibility","blind"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility","blind"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_with_white_cane', '🧑‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_with_probing_cane', '🧑‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🦯','1F9D1-1F3FB-200D-1F9AF','person with white cane: light skin tone','🧑‍🦯',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_with_probing_cane_tone1', '🧑🏻‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_with_white_cane_tone1', '🧑🏻‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🦯','1F9D1-1F3FC-200D-1F9AF','person with white cane: medium-light skin tone','🧑‍🦯',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_with_white_cane_tone2', '🧑🏼‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_with_probing_cane_tone2', '🧑🏼‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🦯','1F9D1-1F3FD-200D-1F9AF','person with white cane: medium skin tone','🧑‍🦯',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_with_white_cane_tone3', '🧑🏽‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_with_probing_cane_tone3', '🧑🏽‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🦯','1F9D1-1F3FE-200D-1F9AF','person with white cane: medium-dark skin tone','🧑‍🦯',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_with_probing_cane_tone4', '🧑🏾‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_with_white_cane_tone4', '🧑🏾‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🦯','1F9D1-1F3FF-200D-1F9AF','person with white cane: dark skin tone','🧑‍🦯',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_with_white_cane_tone5', '🧑🏿‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_with_probing_cane_tone5', '🧑🏿‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🦯','1F468-200D-1F9AF','man with white cane','👨‍🦯','{"man","accessibility","blind"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","accessibility","blind"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_with_white_cane', '👨‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('man_with_probing_cane', '👨‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🦯','1F468-1F3FB-200D-1F9AF','man with white cane: light skin tone','👨‍🦯',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_with_probing_cane_tone1', '👨🏻‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('man_with_white_cane_tone1', '👨🏻‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🦯','1F468-1F3FC-200D-1F9AF','man with white cane: medium-light skin tone','👨‍🦯',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_with_probing_cane_tone2', '👨🏼‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('man_with_white_cane_tone2', '👨🏼‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🦯','1F468-1F3FD-200D-1F9AF','man with white cane: medium skin tone','👨‍🦯',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_with_probing_cane_tone3', '👨🏽‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('man_with_white_cane_tone3', '👨🏽‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🦯','1F468-1F3FE-200D-1F9AF','man with white cane: medium-dark skin tone','👨‍🦯',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_with_white_cane_tone4', '👨🏾‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('man_with_probing_cane_tone4', '👨🏾‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🦯','1F468-1F3FF-200D-1F9AF','man with white cane: dark skin tone','👨‍🦯',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_with_probing_cane_tone5', '👨🏿‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('man_with_white_cane_tone5', '👨🏿‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🦯','1F469-200D-1F9AF','woman with white cane','👩‍🦯','{"accessibility","woman","blind"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility","woman","blind"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_with_probing_cane', '👩‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('woman_with_white_cane', '👩‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🦯','1F469-1F3FB-200D-1F9AF','woman with white cane: light skin tone','👩‍🦯',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_probing_cane_tone1', '👩🏻‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('woman_with_white_cane_tone1', '👩🏻‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🦯','1F469-1F3FC-200D-1F9AF','woman with white cane: medium-light skin tone','👩‍🦯',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_white_cane_tone2', '👩🏼‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('woman_with_probing_cane_tone2', '👩🏼‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🦯','1F469-1F3FD-200D-1F9AF','woman with white cane: medium skin tone','👩‍🦯',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_probing_cane_tone3', '👩🏽‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('woman_with_white_cane_tone3', '👩🏽‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🦯','1F469-1F3FE-200D-1F9AF','woman with white cane: medium-dark skin tone','👩‍🦯',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_white_cane_tone4', '👩🏾‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('woman_with_probing_cane_tone4', '👩🏾‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🦯','1F469-1F3FF-200D-1F9AF','woman with white cane: dark skin tone','👩‍🦯',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_with_white_cane_tone5', '👩🏿‍🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('woman_with_probing_cane_tone5', '👩🏿‍🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🦼','1F9D1-200D-1F9BC','person in motorized wheelchair','🧑‍🦼','{"accessibility","wheelchair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility","wheelchair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_in_motorized_wheelchair', '🧑‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🦼','1F9D1-1F3FB-200D-1F9BC','person in motorized wheelchair: light skin tone','🧑‍🦼',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_in_motorized_wheelchair_tone1', '🧑🏻‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🦼','1F9D1-1F3FC-200D-1F9BC','person in motorized wheelchair: medium-light skin tone','🧑‍🦼',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_in_motorized_wheelchair_tone2', '🧑🏼‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🦼','1F9D1-1F3FD-200D-1F9BC','person in motorized wheelchair: medium skin tone','🧑‍🦼',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_in_motorized_wheelchair_tone3', '🧑🏽‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🦼','1F9D1-1F3FE-200D-1F9BC','person in motorized wheelchair: medium-dark skin tone','🧑‍🦼',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_in_motorized_wheelchair_tone4', '🧑🏾‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🦼','1F9D1-1F3FF-200D-1F9BC','person in motorized wheelchair: dark skin tone','🧑‍🦼',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_in_motorized_wheelchair_tone5', '🧑🏿‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🦼','1F468-200D-1F9BC','man in motorized wheelchair','👨‍🦼','{"man","accessibility","wheelchair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","accessibility","wheelchair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_in_motorized_wheelchair', '👨‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🦼','1F468-1F3FB-200D-1F9BC','man in motorized wheelchair: light skin tone','👨‍🦼',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_in_motorized_wheelchair_tone1', '👨🏻‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🦼','1F468-1F3FC-200D-1F9BC','man in motorized wheelchair: medium-light skin tone','👨‍🦼',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_in_motorized_wheelchair_tone2', '👨🏼‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🦼','1F468-1F3FD-200D-1F9BC','man in motorized wheelchair: medium skin tone','👨‍🦼',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_in_motorized_wheelchair_tone3', '👨🏽‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🦼','1F468-1F3FE-200D-1F9BC','man in motorized wheelchair: medium-dark skin tone','👨‍🦼',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_in_motorized_wheelchair_tone4', '👨🏾‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🦼','1F468-1F3FF-200D-1F9BC','man in motorized wheelchair: dark skin tone','👨‍🦼',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_in_motorized_wheelchair_tone5', '👨🏿‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🦼','1F469-200D-1F9BC','woman in motorized wheelchair','👩‍🦼','{"accessibility","woman","wheelchair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility","woman","wheelchair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_in_motorized_wheelchair', '👩‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🦼','1F469-1F3FB-200D-1F9BC','woman in motorized wheelchair: light skin tone','👩‍🦼',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_motorized_wheelchair_tone1', '👩🏻‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🦼','1F469-1F3FC-200D-1F9BC','woman in motorized wheelchair: medium-light skin tone','👩‍🦼',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_motorized_wheelchair_tone2', '👩🏼‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🦼','1F469-1F3FD-200D-1F9BC','woman in motorized wheelchair: medium skin tone','👩‍🦼',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_motorized_wheelchair_tone3', '👩🏽‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🦼','1F469-1F3FE-200D-1F9BC','woman in motorized wheelchair: medium-dark skin tone','👩‍🦼',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_motorized_wheelchair_tone4', '👩🏾‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🦼','1F469-1F3FF-200D-1F9BC','woman in motorized wheelchair: dark skin tone','👩‍🦼',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_motorized_wheelchair_tone5', '👩🏿‍🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🦽','1F9D1-200D-1F9BD','person in manual wheelchair','🧑‍🦽','{"accessibility","wheelchair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility","wheelchair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_in_manual_wheelchair', '🧑‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🦽','1F9D1-1F3FB-200D-1F9BD','person in manual wheelchair: light skin tone','🧑‍🦽',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_in_manual_wheelchair_tone1', '🧑🏻‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🦽','1F9D1-1F3FC-200D-1F9BD','person in manual wheelchair: medium-light skin tone','🧑‍🦽',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_in_manual_wheelchair_tone2', '🧑🏼‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🦽','1F9D1-1F3FD-200D-1F9BD','person in manual wheelchair: medium skin tone','🧑‍🦽',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_in_manual_wheelchair_tone3', '🧑🏽‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🦽','1F9D1-1F3FE-200D-1F9BD','person in manual wheelchair: medium-dark skin tone','🧑‍🦽',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_in_manual_wheelchair_tone4', '🧑🏾‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🦽','1F9D1-1F3FF-200D-1F9BD','person in manual wheelchair: dark skin tone','🧑‍🦽',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_in_manual_wheelchair_tone5', '🧑🏿‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🦽','1F468-200D-1F9BD','man in manual wheelchair','👨‍🦽','{"man","accessibility","wheelchair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","accessibility","wheelchair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_in_manual_wheelchair', '👨‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🦽','1F468-1F3FB-200D-1F9BD','man in manual wheelchair: light skin tone','👨‍🦽',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_in_manual_wheelchair_tone1', '👨🏻‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🦽','1F468-1F3FC-200D-1F9BD','man in manual wheelchair: medium-light skin tone','👨‍🦽',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_in_manual_wheelchair_tone2', '👨🏼‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🦽','1F468-1F3FD-200D-1F9BD','man in manual wheelchair: medium skin tone','👨‍🦽',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_in_manual_wheelchair_tone3', '👨🏽‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🦽','1F468-1F3FE-200D-1F9BD','man in manual wheelchair: medium-dark skin tone','👨‍🦽',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_in_manual_wheelchair_tone4', '👨🏾‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🦽','1F468-1F3FF-200D-1F9BD','man in manual wheelchair: dark skin tone','👨‍🦽',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_in_manual_wheelchair_tone5', '👨🏿‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🦽','1F469-200D-1F9BD','woman in manual wheelchair','👩‍🦽','{"accessibility","woman","wheelchair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility","woman","wheelchair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_in_manual_wheelchair', '👩‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🦽','1F469-1F3FB-200D-1F9BD','woman in manual wheelchair: light skin tone','👩‍🦽',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_manual_wheelchair_tone1', '👩🏻‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🦽','1F469-1F3FC-200D-1F9BD','woman in manual wheelchair: medium-light skin tone','👩‍🦽',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_manual_wheelchair_tone2', '👩🏼‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🦽','1F469-1F3FD-200D-1F9BD','woman in manual wheelchair: medium skin tone','👩‍🦽',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_manual_wheelchair_tone3', '👩🏽‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🦽','1F469-1F3FE-200D-1F9BD','woman in manual wheelchair: medium-dark skin tone','👩‍🦽',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_manual_wheelchair_tone4', '👩🏾‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🦽','1F469-1F3FF-200D-1F9BD','woman in manual wheelchair: dark skin tone','👩‍🦽',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_manual_wheelchair_tone5', '👩🏿‍🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃','1F3C3','person running','🏃','{"person","human","running","marathon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"person","human","running","marathon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('running', '🏃') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_running', '🏃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏻','1F3C3-1F3FB','person running: light skin tone','🏃',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_running_tone1', '🏃🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('running_tone1', '🏃🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏼','1F3C3-1F3FC','person running: medium-light skin tone','🏃',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('running_tone2', '🏃🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_running_tone2', '🏃🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏽','1F3C3-1F3FD','person running: medium skin tone','🏃',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_running_tone3', '🏃🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('running_tone3', '🏃🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏾','1F3C3-1F3FE','person running: medium-dark skin tone','🏃',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_running_tone4', '🏃🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('running_tone4', '🏃🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏿','1F3C3-1F3FF','person running: dark skin tone','🏃',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_running_tone5', '🏃🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('running_tone5', '🏃🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃‍♂️','1F3C3-200D-2642-FE0F','man running','🏃‍♂️','{"man","running","marathon","racing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","running","marathon","racing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_running', '🏃‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏻‍♂️','1F3C3-1F3FB-200D-2642-FE0F','man running: light skin tone','🏃‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_running_tone1', '🏃🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏼‍♂️','1F3C3-1F3FC-200D-2642-FE0F','man running: medium-light skin tone','🏃‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_running_tone2', '🏃🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏽‍♂️','1F3C3-1F3FD-200D-2642-FE0F','man running: medium skin tone','🏃‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_running_tone3', '🏃🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏾‍♂️','1F3C3-1F3FE-200D-2642-FE0F','man running: medium-dark skin tone','🏃‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_running_tone4', '🏃🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏿‍♂️','1F3C3-1F3FF-200D-2642-FE0F','man running: dark skin tone','🏃‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_running_tone5', '🏃🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃‍♀️','1F3C3-200D-2640-FE0F','woman running','🏃‍♀️','{"woman","running","marathon","racing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","running","marathon","racing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_running', '🏃‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏻‍♀️','1F3C3-1F3FB-200D-2640-FE0F','woman running: light skin tone','🏃‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_running_tone1', '🏃🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏼‍♀️','1F3C3-1F3FC-200D-2640-FE0F','woman running: medium-light skin tone','🏃‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_running_tone2', '🏃🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏽‍♀️','1F3C3-1F3FD-200D-2640-FE0F','woman running: medium skin tone','🏃‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_running_tone3', '🏃🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏾‍♀️','1F3C3-1F3FE-200D-2640-FE0F','woman running: medium-dark skin tone','🏃‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_running_tone4', '🏃🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏃🏿‍♀️','1F3C3-1F3FF-200D-2640-FE0F','woman running: dark skin tone','🏃‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_running_tone5', '🏃🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💃','1F483','woman dancing','💃','{"dance","person","woman","dancing","human"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dance","person","woman","dancing","human"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dancer', '💃') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('woman_dancing', '💃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💃🏻','1F483-1F3FB','woman dancing: light skin tone','💃',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_dancing_tone1', '💃🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('dancer_tone1', '💃🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💃🏼','1F483-1F3FC','woman dancing: medium-light skin tone','💃',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_dancing_tone2', '💃🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('dancer_tone2', '💃🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💃🏽','1F483-1F3FD','woman dancing: medium skin tone','💃',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('dancer_tone3', '💃🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('woman_dancing_tone3', '💃🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💃🏾','1F483-1F3FE','woman dancing: medium-dark skin tone','💃',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('dancer_tone4', '💃🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('woman_dancing_tone4', '💃🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💃🏿','1F483-1F3FF','woman dancing: dark skin tone','💃',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('dancer_tone5', '💃🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('woman_dancing_tone5', '💃🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕺','1F57A','man dancing','🕺','{"dance","person","man","dancing","human"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dance","person","man","dancing","human"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_dancing', '🕺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕺🏻','1F57A-1F3FB','man dancing: light skin tone','🕺',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_dancing_tone1', '🕺🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕺🏼','1F57A-1F3FC','man dancing: medium-light skin tone','🕺',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_dancing_tone2', '🕺🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕺🏽','1F57A-1F3FD','man dancing: medium skin tone','🕺',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_dancing_tone3', '🕺🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕺🏾','1F57A-1F3FE','man dancing: medium-dark skin tone','🕺',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_dancing_tone4', '🕺🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕺🏿','1F57A-1F3FF','man dancing: dark skin tone','🕺',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_dancing_tone5', '🕺🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕴️','1F574','person in suit levitating','🕴️','{"business","person","suit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"business","person","suit"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('levitating', '🕴️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_in_suit_levitating', '🕴️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('levitate', '🕴️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕴🏻','1F574-1F3FB','person in suit levitating: light skin tone','🕴️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('levitate_tone1', '🕴🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_in_suit_levitating_tone1', '🕴🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('levitating_tone1', '🕴🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕴🏼','1F574-1F3FC','person in suit levitating: medium-light skin tone','🕴️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_in_suit_levitating_tone2', '🕴🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('levitating_tone2', '🕴🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('levitate_tone2', '🕴🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕴🏽','1F574-1F3FD','person in suit levitating: medium skin tone','🕴️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('levitate_tone3', '🕴🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_in_suit_levitating_tone3', '🕴🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('levitating_tone3', '🕴🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕴🏾','1F574-1F3FE','person in suit levitating: medium-dark skin tone','🕴️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_in_suit_levitating_tone4', '🕴🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('levitate_tone4', '🕴🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('levitating_tone4', '🕴🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕴🏿','1F574-1F3FF','person in suit levitating: dark skin tone','🕴️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_in_suit_levitating_tone5', '🕴🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('levitating_tone5', '🕴🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('levitate_tone5', '🕴🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👯','1F46F','people with bunny ears',default,'{"dancer","person","partying","human","bunny ear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dancer","person","partying","human","bunny ear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('people_with_bunny_ears_partying', '👯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('dancers', '👯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👯‍♂️','1F46F-200D-2642-FE0F','men with bunny ears',default,'{"bunny ear","dancer","men","partying"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bunny ear","dancer","men","partying"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('men_with_bunny_ears_partying', '👯‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👯‍♀️','1F46F-200D-2640-FE0F','women with bunny ears',default,'{"bunny ear","dancer","partying","women"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bunny ear","dancer","partying","women"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('women_with_bunny_ears_partying', '👯‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖','1F9D6','person in steamy room','🧖','{"sauna","steam room"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sauna","steam room"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_in_steamy_room', '🧖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏻','1F9D6-1F3FB','person in steamy room: light skin tone','🧖',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_in_steamy_room_tone1', '🧖🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏼','1F9D6-1F3FC','person in steamy room: medium-light skin tone','🧖',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_in_steamy_room_tone2', '🧖🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏽','1F9D6-1F3FD','person in steamy room: medium skin tone','🧖',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_in_steamy_room_tone3', '🧖🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏾','1F9D6-1F3FE','person in steamy room: medium-dark skin tone','🧖',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_in_steamy_room_tone4', '🧖🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏿','1F9D6-1F3FF','person in steamy room: dark skin tone','🧖',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_in_steamy_room_tone5', '🧖🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖‍♂️','1F9D6-200D-2642-FE0F','man in steamy room','🧖‍♂️','{"sauna","steam room"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sauna","steam room"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_in_steamy_room', '🧖‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏻‍♂️','1F9D6-1F3FB-200D-2642-FE0F','man in steamy room: light skin tone','🧖‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_in_steamy_room_tone1', '🧖🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏼‍♂️','1F9D6-1F3FC-200D-2642-FE0F','man in steamy room: medium-light skin tone','🧖‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_in_steamy_room_tone2', '🧖🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏽‍♂️','1F9D6-1F3FD-200D-2642-FE0F','man in steamy room: medium skin tone','🧖‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_in_steamy_room_tone3', '🧖🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏾‍♂️','1F9D6-1F3FE-200D-2642-FE0F','man in steamy room: medium-dark skin tone','🧖‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_in_steamy_room_tone4', '🧖🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏿‍♂️','1F9D6-1F3FF-200D-2642-FE0F','man in steamy room: dark skin tone','🧖‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_in_steamy_room_tone5', '🧖🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖‍♀️','1F9D6-200D-2640-FE0F','woman in steamy room','🧖‍♀️','{"sauna","steam room"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sauna","steam room"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_in_steamy_room', '🧖‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏻‍♀️','1F9D6-1F3FB-200D-2640-FE0F','woman in steamy room: light skin tone','🧖‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_steamy_room_tone1', '🧖🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏼‍♀️','1F9D6-1F3FC-200D-2640-FE0F','woman in steamy room: medium-light skin tone','🧖‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_steamy_room_tone2', '🧖🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏽‍♀️','1F9D6-1F3FD-200D-2640-FE0F','woman in steamy room: medium skin tone','🧖‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_steamy_room_tone3', '🧖🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏾‍♀️','1F9D6-1F3FE-200D-2640-FE0F','woman in steamy room: medium-dark skin tone','🧖‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_steamy_room_tone4', '🧖🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧖🏿‍♀️','1F9D6-1F3FF-200D-2640-FE0F','woman in steamy room: dark skin tone','🧖‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_steamy_room_tone5', '🧖🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗','1F9D7','person climbing','🧗','{"human","person","climber"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"human","person","climber"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('climbing', '🧗') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_climbing', '🧗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏻','1F9D7-1F3FB','person climbing: light skin tone','🧗',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_climbing_tone1', '🧗🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('climbing_tone1', '🧗🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏼','1F9D7-1F3FC','person climbing: medium-light skin tone','🧗',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_climbing_tone2', '🧗🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('climbing_tone2', '🧗🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏽','1F9D7-1F3FD','person climbing: medium skin tone','🧗',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('climbing_tone3', '🧗🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_climbing_tone3', '🧗🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏾','1F9D7-1F3FE','person climbing: medium-dark skin tone','🧗',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('climbing_tone4', '🧗🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_climbing_tone4', '🧗🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏿','1F9D7-1F3FF','person climbing: dark skin tone','🧗',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('climbing_tone5', '🧗🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_climbing_tone5', '🧗🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗‍♂️','1F9D7-200D-2642-FE0F','man climbing','🧗‍♂️','{"climber"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"climber"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_climbing', '🧗‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏻‍♂️','1F9D7-1F3FB-200D-2642-FE0F','man climbing: light skin tone','🧗‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_climbing_tone1', '🧗🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏼‍♂️','1F9D7-1F3FC-200D-2642-FE0F','man climbing: medium-light skin tone','🧗‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_climbing_tone2', '🧗🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏽‍♂️','1F9D7-1F3FD-200D-2642-FE0F','man climbing: medium skin tone','🧗‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_climbing_tone3', '🧗🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏾‍♂️','1F9D7-1F3FE-200D-2642-FE0F','man climbing: medium-dark skin tone','🧗‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_climbing_tone4', '🧗🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏿‍♂️','1F9D7-1F3FF-200D-2642-FE0F','man climbing: dark skin tone','🧗‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_climbing_tone5', '🧗🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗‍♀️','1F9D7-200D-2640-FE0F','woman climbing','🧗‍♀️','{"climber"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"climber"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_climbing', '🧗‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏻‍♀️','1F9D7-1F3FB-200D-2640-FE0F','woman climbing: light skin tone','🧗‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_climbing_tone1', '🧗🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏼‍♀️','1F9D7-1F3FC-200D-2640-FE0F','woman climbing: medium-light skin tone','🧗‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_climbing_tone2', '🧗🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏽‍♀️','1F9D7-1F3FD-200D-2640-FE0F','woman climbing: medium skin tone','🧗‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_climbing_tone3', '🧗🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏾‍♀️','1F9D7-1F3FE-200D-2640-FE0F','woman climbing: medium-dark skin tone','🧗‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_climbing_tone4', '🧗🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧗🏿‍♀️','1F9D7-1F3FF-200D-2640-FE0F','woman climbing: dark skin tone','🧗‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_climbing_tone5', '🧗🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤺','1F93A','person fencing',default,'{"epee","fencing","sword","fencer","sports"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"epee","fencing","sword","fencer","sports"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fencer', '🤺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_fencing', '🤺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('fencing', '🤺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏇','1F3C7','horse racing','🏇','{"horse","animal","jockey","racehorse","racing","sports"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"horse","animal","jockey","racehorse","racing","sports"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('horse_racing', '🏇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏇🏻','1F3C7-1F3FB','horse racing: light skin tone','🏇',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('horse_racing_tone1', '🏇🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏇🏼','1F3C7-1F3FC','horse racing: medium-light skin tone','🏇',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('horse_racing_tone2', '🏇🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏇🏽','1F3C7-1F3FD','horse racing: medium skin tone','🏇',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('horse_racing_tone3', '🏇🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏇🏾','1F3C7-1F3FE','horse racing: medium-dark skin tone','🏇',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('horse_racing_tone4', '🏇🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏇🏿','1F3C7-1F3FF','horse racing: dark skin tone','🏇',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('horse_racing_tone5', '🏇🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛷️','26F7','skier',default,'{"ski","winter","snow","sports"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ski","winter","snow","sports"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('skier', '⛷️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_skiing', '⛷️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('skiing', '⛷️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏂️','1F3C2','snowboarder','🏂️','{"ski","snow","snowboard","winter","sports"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ski","snow","snowboard","winter","sports"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_snowboarding', '🏂️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('snowboarder', '🏂️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('snowboarding', '🏂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏂🏻','1F3C2-1F3FB','snowboarder: light skin tone','🏂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('snowboarding_tone1', '🏂🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_snowboarding_tone1', '🏂🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('snowboarder_tone1', '🏂🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏂🏼','1F3C2-1F3FC','snowboarder: medium-light skin tone','🏂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_snowboarding_tone2', '🏂🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('snowboarder_tone2', '🏂🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('snowboarding_tone2', '🏂🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏂🏽','1F3C2-1F3FD','snowboarder: medium skin tone','🏂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_snowboarding_tone3', '🏂🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('snowboarding_tone3', '🏂🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('snowboarder_tone3', '🏂🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏂🏾','1F3C2-1F3FE','snowboarder: medium-dark skin tone','🏂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('snowboarder_tone4', '🏂🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_snowboarding_tone4', '🏂🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('snowboarding_tone4', '🏂🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏂🏿','1F3C2-1F3FF','snowboarder: dark skin tone','🏂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_snowboarding_tone5', '🏂🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('snowboarding_tone5', '🏂🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('snowboarder_tone5', '🏂🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌️','1F3CC','person golfing','🏌️','{"sports","golf","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sports","golf","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('golfer', '🏌️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_golfing', '🏌️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('golfing', '🏌️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏻','1F3CC-1F3FB','person golfing: light skin tone','🏌️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('golfer_tone1', '🏌🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('golfing_tone1', '🏌🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_golfing_tone1', '🏌🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏼','1F3CC-1F3FC','person golfing: medium-light skin tone','🏌️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_golfing_tone2', '🏌🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('golfing_tone2', '🏌🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('golfer_tone2', '🏌🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏽','1F3CC-1F3FD','person golfing: medium skin tone','🏌️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_golfing_tone3', '🏌🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('golfer_tone3', '🏌🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('golfing_tone3', '🏌🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏾','1F3CC-1F3FE','person golfing: medium-dark skin tone','🏌️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_golfing_tone4', '🏌🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('golfing_tone4', '🏌🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('golfer_tone4', '🏌🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏿','1F3CC-1F3FF','person golfing: dark skin tone','🏌️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('golfer_tone5', '🏌🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('golfing_tone5', '🏌🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_golfing_tone5', '🏌🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌️‍♂️','1F3CC-FE0F-200D-2642-FE0F','man golfing','🏌️‍♂️','{"man","golf"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","golf"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_golfing', '🏌️‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏻‍♂️','1F3CC-1F3FB-200D-2642-FE0F','man golfing: light skin tone','🏌️‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_golfing_tone1', '🏌🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏼‍♂️','1F3CC-1F3FC-200D-2642-FE0F','man golfing: medium-light skin tone','🏌️‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_golfing_tone2', '🏌🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏽‍♂️','1F3CC-1F3FD-200D-2642-FE0F','man golfing: medium skin tone','🏌️‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_golfing_tone3', '🏌🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏾‍♂️','1F3CC-1F3FE-200D-2642-FE0F','man golfing: medium-dark skin tone','🏌️‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_golfing_tone4', '🏌🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏿‍♂️','1F3CC-1F3FF-200D-2642-FE0F','man golfing: dark skin tone','🏌️‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_golfing_tone5', '🏌🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌️‍♀️','1F3CC-FE0F-200D-2640-FE0F','woman golfing','🏌️‍♀️','{"golf","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"golf","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_golfing', '🏌️‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏻‍♀️','1F3CC-1F3FB-200D-2640-FE0F','woman golfing: light skin tone','🏌️‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_golfing_tone1', '🏌🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏼‍♀️','1F3CC-1F3FC-200D-2640-FE0F','woman golfing: medium-light skin tone','🏌️‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_golfing_tone2', '🏌🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏽‍♀️','1F3CC-1F3FD-200D-2640-FE0F','woman golfing: medium skin tone','🏌️‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_golfing_tone3', '🏌🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏾‍♀️','1F3CC-1F3FE-200D-2640-FE0F','woman golfing: medium-dark skin tone','🏌️‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_golfing_tone4', '🏌🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏌🏿‍♀️','1F3CC-1F3FF-200D-2640-FE0F','woman golfing: dark skin tone','🏌️‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_golfing_tone5', '🏌🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄️','1F3C4','person surfing','🏄️','{"surfing","wave","water","ocean","surfer","sea","sports"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"surfing","wave","water","ocean","surfer","sea","sports"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('surfing', '🏄️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_surfing', '🏄️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('surfer', '🏄️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏻','1F3C4-1F3FB','person surfing: light skin tone','🏄️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_surfing_tone1', '🏄🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('surfer_tone1', '🏄🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('surfing_tone1', '🏄🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏼','1F3C4-1F3FC','person surfing: medium-light skin tone','🏄️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_surfing_tone2', '🏄🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('surfer_tone2', '🏄🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('surfing_tone2', '🏄🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏽','1F3C4-1F3FD','person surfing: medium skin tone','🏄️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_surfing_tone3', '🏄🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('surfer_tone3', '🏄🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('surfing_tone3', '🏄🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏾','1F3C4-1F3FE','person surfing: medium-dark skin tone','🏄️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('surfer_tone4', '🏄🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_surfing_tone4', '🏄🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('surfing_tone4', '🏄🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏿','1F3C4-1F3FF','person surfing: dark skin tone','🏄️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('surfing_tone5', '🏄🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('surfer_tone5', '🏄🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_surfing_tone5', '🏄🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄‍♂️','1F3C4-200D-2642-FE0F','man surfing','🏄‍♂️','{"man","surfing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","surfing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_surfing', '🏄‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏻‍♂️','1F3C4-1F3FB-200D-2642-FE0F','man surfing: light skin tone','🏄‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_surfing_tone1', '🏄🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏼‍♂️','1F3C4-1F3FC-200D-2642-FE0F','man surfing: medium-light skin tone','🏄‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_surfing_tone2', '🏄🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏽‍♂️','1F3C4-1F3FD-200D-2642-FE0F','man surfing: medium skin tone','🏄‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_surfing_tone3', '🏄🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏾‍♂️','1F3C4-1F3FE-200D-2642-FE0F','man surfing: medium-dark skin tone','🏄‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_surfing_tone4', '🏄🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏿‍♂️','1F3C4-1F3FF-200D-2642-FE0F','man surfing: dark skin tone','🏄‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_surfing_tone5', '🏄🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄‍♀️','1F3C4-200D-2640-FE0F','woman surfing','🏄‍♀️','{"surfing","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"surfing","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_surfing', '🏄‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏻‍♀️','1F3C4-1F3FB-200D-2640-FE0F','woman surfing: light skin tone','🏄‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_surfing_tone1', '🏄🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏼‍♀️','1F3C4-1F3FC-200D-2640-FE0F','woman surfing: medium-light skin tone','🏄‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_surfing_tone2', '🏄🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏽‍♀️','1F3C4-1F3FD-200D-2640-FE0F','woman surfing: medium skin tone','🏄‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_surfing_tone3', '🏄🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏾‍♀️','1F3C4-1F3FE-200D-2640-FE0F','woman surfing: medium-dark skin tone','🏄‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_surfing_tone4', '🏄🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏄🏿‍♀️','1F3C4-1F3FF-200D-2640-FE0F','woman surfing: dark skin tone','🏄‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_surfing_tone5', '🏄🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣','1F6A3','person rowing boat','🚣','{"rowboat","water","canoe","boat","sports","kayak"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rowboat","water","canoe","boat","sports","kayak"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_rowing_boat', '🚣') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('rowboat', '🚣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏻','1F6A3-1F3FB','person rowing boat: light skin tone','🚣',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_rowing_boat_tone1', '🚣🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('rowboat_tone1', '🚣🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏼','1F6A3-1F3FC','person rowing boat: medium-light skin tone','🚣',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_rowing_boat_tone2', '🚣🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('rowboat_tone2', '🚣🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏽','1F6A3-1F3FD','person rowing boat: medium skin tone','🚣',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('rowboat_tone3', '🚣🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_rowing_boat_tone3', '🚣🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏾','1F6A3-1F3FE','person rowing boat: medium-dark skin tone','🚣',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('rowboat_tone4', '🚣🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_rowing_boat_tone4', '🚣🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏿','1F6A3-1F3FF','person rowing boat: dark skin tone','🚣',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_rowing_boat_tone5', '🚣🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('rowboat_tone5', '🚣🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣‍♂️','1F6A3-200D-2642-FE0F','man rowing boat','🚣‍♂️','{"man","boat","rowboat"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","boat","rowboat"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_rowing_boat', '🚣‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏻‍♂️','1F6A3-1F3FB-200D-2642-FE0F','man rowing boat: light skin tone','🚣‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_rowing_boat_tone1', '🚣🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏼‍♂️','1F6A3-1F3FC-200D-2642-FE0F','man rowing boat: medium-light skin tone','🚣‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_rowing_boat_tone2', '🚣🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏽‍♂️','1F6A3-1F3FD-200D-2642-FE0F','man rowing boat: medium skin tone','🚣‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_rowing_boat_tone3', '🚣🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏾‍♂️','1F6A3-1F3FE-200D-2642-FE0F','man rowing boat: medium-dark skin tone','🚣‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_rowing_boat_tone4', '🚣🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏿‍♂️','1F6A3-1F3FF-200D-2642-FE0F','man rowing boat: dark skin tone','🚣‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_rowing_boat_tone5', '🚣🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣‍♀️','1F6A3-200D-2640-FE0F','woman rowing boat','🚣‍♀️','{"boat","rowboat","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"boat","rowboat","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_rowing_boat', '🚣‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏻‍♀️','1F6A3-1F3FB-200D-2640-FE0F','woman rowing boat: light skin tone','🚣‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_rowing_boat_tone1', '🚣🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏼‍♀️','1F6A3-1F3FC-200D-2640-FE0F','woman rowing boat: medium-light skin tone','🚣‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_rowing_boat_tone2', '🚣🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏽‍♀️','1F6A3-1F3FD-200D-2640-FE0F','woman rowing boat: medium skin tone','🚣‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_rowing_boat_tone3', '🚣🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏾‍♀️','1F6A3-1F3FE-200D-2640-FE0F','woman rowing boat: medium-dark skin tone','🚣‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_rowing_boat_tone4', '🚣🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚣🏿‍♀️','1F6A3-1F3FF-200D-2640-FE0F','woman rowing boat: dark skin tone','🚣‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_rowing_boat_tone5', '🚣🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊️','1F3CA','person swimming','🏊️','{"sports","water","swim"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sports","water","swim"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('swimmer', '🏊️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('swimming', '🏊️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_swimming', '🏊️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏻','1F3CA-1F3FB','person swimming: light skin tone','🏊️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('swimming_tone1', '🏊🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_swimming_tone1', '🏊🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('swimmer_tone1', '🏊🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏼','1F3CA-1F3FC','person swimming: medium-light skin tone','🏊️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('swimming_tone2', '🏊🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_swimming_tone2', '🏊🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('swimmer_tone2', '🏊🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏽','1F3CA-1F3FD','person swimming: medium skin tone','🏊️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('swimming_tone3', '🏊🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('swimmer_tone3', '🏊🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_swimming_tone3', '🏊🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏾','1F3CA-1F3FE','person swimming: medium-dark skin tone','🏊️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('swimming_tone4', '🏊🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_swimming_tone4', '🏊🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('swimmer_tone4', '🏊🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏿','1F3CA-1F3FF','person swimming: dark skin tone','🏊️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_swimming_tone5', '🏊🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('swimmer_tone5', '🏊🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('swimming_tone5', '🏊🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊‍♂️','1F3CA-200D-2642-FE0F','man swimming','🏊‍♂️','{"man","swim"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","swim"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_swimming', '🏊‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏻‍♂️','1F3CA-1F3FB-200D-2642-FE0F','man swimming: light skin tone','🏊‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_swimming_tone1', '🏊🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏼‍♂️','1F3CA-1F3FC-200D-2642-FE0F','man swimming: medium-light skin tone','🏊‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_swimming_tone2', '🏊🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏽‍♂️','1F3CA-1F3FD-200D-2642-FE0F','man swimming: medium skin tone','🏊‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_swimming_tone3', '🏊🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏾‍♂️','1F3CA-1F3FE-200D-2642-FE0F','man swimming: medium-dark skin tone','🏊‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_swimming_tone4', '🏊🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏿‍♂️','1F3CA-1F3FF-200D-2642-FE0F','man swimming: dark skin tone','🏊‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_swimming_tone5', '🏊🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊‍♀️','1F3CA-200D-2640-FE0F','woman swimming','🏊‍♀️','{"woman","swim"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","swim"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_swimming', '🏊‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏻‍♀️','1F3CA-1F3FB-200D-2640-FE0F','woman swimming: light skin tone','🏊‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_swimming_tone1', '🏊🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏼‍♀️','1F3CA-1F3FC-200D-2640-FE0F','woman swimming: medium-light skin tone','🏊‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_swimming_tone2', '🏊🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏽‍♀️','1F3CA-1F3FD-200D-2640-FE0F','woman swimming: medium skin tone','🏊‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_swimming_tone3', '🏊🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏾‍♀️','1F3CA-1F3FE-200D-2640-FE0F','woman swimming: medium-dark skin tone','🏊‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_swimming_tone4', '🏊🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏊🏿‍♀️','1F3CA-1F3FF-200D-2640-FE0F','woman swimming: dark skin tone','🏊‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_swimming_tone5', '🏊🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹️','26F9','person bouncing ball','⛹️','{"dribble","sports","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dribble","sports","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_bouncing_ball', '⛹️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏻','26F9-1F3FB','person bouncing ball: light skin tone','⛹️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_bouncing_ball_tone1', '⛹🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏼','26F9-1F3FC','person bouncing ball: medium-light skin tone','⛹️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_bouncing_ball_tone2', '⛹🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏽','26F9-1F3FD','person bouncing ball: medium skin tone','⛹️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_bouncing_ball_tone3', '⛹🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏾','26F9-1F3FE','person bouncing ball: medium-dark skin tone','⛹️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_bouncing_ball_tone4', '⛹🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏿','26F9-1F3FF','person bouncing ball: dark skin tone','⛹️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_bouncing_ball_tone5', '⛹🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹️‍♂️','26F9-FE0F-200D-2642-FE0F','man bouncing ball','⛹️‍♂️','{"man","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_bouncing_ball', '⛹️‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏻‍♂️','26F9-1F3FB-200D-2642-FE0F','man bouncing ball: light skin tone','⛹️‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_bouncing_ball_tone1', '⛹🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏼‍♂️','26F9-1F3FC-200D-2642-FE0F','man bouncing ball: medium-light skin tone','⛹️‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_bouncing_ball_tone2', '⛹🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏽‍♂️','26F9-1F3FD-200D-2642-FE0F','man bouncing ball: medium skin tone','⛹️‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_bouncing_ball_tone3', '⛹🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏾‍♂️','26F9-1F3FE-200D-2642-FE0F','man bouncing ball: medium-dark skin tone','⛹️‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_bouncing_ball_tone4', '⛹🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏿‍♂️','26F9-1F3FF-200D-2642-FE0F','man bouncing ball: dark skin tone','⛹️‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_bouncing_ball_tone5', '⛹🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹️‍♀️','26F9-FE0F-200D-2640-FE0F','woman bouncing ball','⛹️‍♀️','{"woman","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_bouncing_ball', '⛹️‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏻‍♀️','26F9-1F3FB-200D-2640-FE0F','woman bouncing ball: light skin tone','⛹️‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_bouncing_ball_tone1', '⛹🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏼‍♀️','26F9-1F3FC-200D-2640-FE0F','woman bouncing ball: medium-light skin tone','⛹️‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_bouncing_ball_tone2', '⛹🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏽‍♀️','26F9-1F3FD-200D-2640-FE0F','woman bouncing ball: medium skin tone','⛹️‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_bouncing_ball_tone3', '⛹🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏾‍♀️','26F9-1F3FE-200D-2640-FE0F','woman bouncing ball: medium-dark skin tone','⛹️‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_bouncing_ball_tone4', '⛹🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛹🏿‍♀️','26F9-1F3FF-200D-2640-FE0F','woman bouncing ball: dark skin tone','⛹️‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_bouncing_ball_tone5', '⛹🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋️','1F3CB','person lifting weights','🏋️','{"weight","sports","lifter","power"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"weight","sports","lifter","power"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('weight_lifter', '🏋️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_lifting_weights', '🏋️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('weight_lifting', '🏋️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏻','1F3CB-1F3FB','person lifting weights: light skin tone','🏋️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_lifting_weights_tone1', '🏋🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('weight_lifting_tone1', '🏋🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('weight_lifter_tone1', '🏋🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏼','1F3CB-1F3FC','person lifting weights: medium-light skin tone','🏋️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('weight_lifting_tone2', '🏋🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_lifting_weights_tone2', '🏋🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('weight_lifter_tone2', '🏋🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏽','1F3CB-1F3FD','person lifting weights: medium skin tone','🏋️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('weight_lifting_tone3', '🏋🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('weight_lifter_tone3', '🏋🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_lifting_weights_tone3', '🏋🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏾','1F3CB-1F3FE','person lifting weights: medium-dark skin tone','🏋️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('weight_lifter_tone4', '🏋🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_lifting_weights_tone4', '🏋🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('weight_lifting_tone4', '🏋🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏿','1F3CB-1F3FF','person lifting weights: dark skin tone','🏋️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('weight_lifter_tone5', '🏋🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('weight_lifting_tone5', '🏋🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_lifting_weights_tone5', '🏋🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋️‍♂️','1F3CB-FE0F-200D-2642-FE0F','man lifting weights','🏋️‍♂️','{"man","weight lifter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","weight lifter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_lifting_weights', '🏋️‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏻‍♂️','1F3CB-1F3FB-200D-2642-FE0F','man lifting weights: light skin tone','🏋️‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_lifting_weights_tone1', '🏋🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏼‍♂️','1F3CB-1F3FC-200D-2642-FE0F','man lifting weights: medium-light skin tone','🏋️‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_lifting_weights_tone2', '🏋🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏽‍♂️','1F3CB-1F3FD-200D-2642-FE0F','man lifting weights: medium skin tone','🏋️‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_lifting_weights_tone3', '🏋🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏾‍♂️','1F3CB-1F3FE-200D-2642-FE0F','man lifting weights: medium-dark skin tone','🏋️‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_lifting_weights_tone4', '🏋🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏿‍♂️','1F3CB-1F3FF-200D-2642-FE0F','man lifting weights: dark skin tone','🏋️‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_lifting_weights_tone5', '🏋🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋️‍♀️','1F3CB-FE0F-200D-2640-FE0F','woman lifting weights','🏋️‍♀️','{"weight lifter","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"weight lifter","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_lifting_weights', '🏋️‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏻‍♀️','1F3CB-1F3FB-200D-2640-FE0F','woman lifting weights: light skin tone','🏋️‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_lifting_weights_tone1', '🏋🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏼‍♀️','1F3CB-1F3FC-200D-2640-FE0F','woman lifting weights: medium-light skin tone','🏋️‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_lifting_weights_tone2', '🏋🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏽‍♀️','1F3CB-1F3FD-200D-2640-FE0F','woman lifting weights: medium skin tone','🏋️‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_lifting_weights_tone3', '🏋🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏾‍♀️','1F3CB-1F3FE-200D-2640-FE0F','woman lifting weights: medium-dark skin tone','🏋️‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_lifting_weights_tone4', '🏋🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏋🏿‍♀️','1F3CB-1F3FF-200D-2640-FE0F','woman lifting weights: dark skin tone','🏋️‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_lifting_weights_tone5', '🏋🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴','1F6B4','person biking','🚴','{"biking","bicycle","sports","cyclist"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"biking","bicycle","sports","cyclist"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('biking', '🚴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bicyclist', '🚴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_biking', '🚴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏻','1F6B4-1F3FB','person biking: light skin tone','🚴',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_biking_tone1', '🚴🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('biking_tone1', '🚴🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bicyclist_tone1', '🚴🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏼','1F6B4-1F3FC','person biking: medium-light skin tone','🚴',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('biking_tone2', '🚴🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bicyclist_tone2', '🚴🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_biking_tone2', '🚴🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏽','1F6B4-1F3FD','person biking: medium skin tone','🚴',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('bicyclist_tone3', '🚴🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('biking_tone3', '🚴🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_biking_tone3', '🚴🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏾','1F6B4-1F3FE','person biking: medium-dark skin tone','🚴',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('biking_tone4', '🚴🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_biking_tone4', '🚴🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bicyclist_tone4', '🚴🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏿','1F6B4-1F3FF','person biking: dark skin tone','🚴',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_biking_tone5', '🚴🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('biking_tone5', '🚴🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bicyclist_tone5', '🚴🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴‍♂️','1F6B4-200D-2642-FE0F','man biking','🚴‍♂️','{"man","biking","bicycle","cyclist"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","biking","bicycle","cyclist"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_biking', '🚴‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏻‍♂️','1F6B4-1F3FB-200D-2642-FE0F','man biking: light skin tone','🚴‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_biking_tone1', '🚴🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏼‍♂️','1F6B4-1F3FC-200D-2642-FE0F','man biking: medium-light skin tone','🚴‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_biking_tone2', '🚴🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏽‍♂️','1F6B4-1F3FD-200D-2642-FE0F','man biking: medium skin tone','🚴‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_biking_tone3', '🚴🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏾‍♂️','1F6B4-1F3FE-200D-2642-FE0F','man biking: medium-dark skin tone','🚴‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_biking_tone4', '🚴🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏿‍♂️','1F6B4-1F3FF-200D-2642-FE0F','man biking: dark skin tone','🚴‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_biking_tone5', '🚴🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴‍♀️','1F6B4-200D-2640-FE0F','woman biking','🚴‍♀️','{"woman","biking","bicycle","cyclist"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","biking","bicycle","cyclist"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_biking', '🚴‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏻‍♀️','1F6B4-1F3FB-200D-2640-FE0F','woman biking: light skin tone','🚴‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_biking_tone1', '🚴🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏼‍♀️','1F6B4-1F3FC-200D-2640-FE0F','woman biking: medium-light skin tone','🚴‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_biking_tone2', '🚴🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏽‍♀️','1F6B4-1F3FD-200D-2640-FE0F','woman biking: medium skin tone','🚴‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_biking_tone3', '🚴🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏾‍♀️','1F6B4-1F3FE-200D-2640-FE0F','woman biking: medium-dark skin tone','🚴‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_biking_tone4', '🚴🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚴🏿‍♀️','1F6B4-1F3FF-200D-2640-FE0F','woman biking: dark skin tone','🚴‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_biking_tone5', '🚴🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵','1F6B5','person mountain biking','🚵','{"cyclist","bike","mountain","bicyclist","bicycle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cyclist","bike","mountain","bicyclist","bicycle"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mountain_biking', '🚵') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_mountain_biking', '🚵') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mountain_bicyclist', '🚵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏻','1F6B5-1F3FB','person mountain biking: light skin tone','🚵',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_mountain_biking_tone1', '🚵🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mountain_biking_tone1', '🚵🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mountain_bicyclist_tone1', '🚵🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏼','1F6B5-1F3FC','person mountain biking: medium-light skin tone','🚵',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_mountain_biking_tone2', '🚵🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mountain_bicyclist_tone2', '🚵🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mountain_biking_tone2', '🚵🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏽','1F6B5-1F3FD','person mountain biking: medium skin tone','🚵',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('mountain_biking_tone3', '🚵🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mountain_bicyclist_tone3', '🚵🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_mountain_biking_tone3', '🚵🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏾','1F6B5-1F3FE','person mountain biking: medium-dark skin tone','🚵',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_mountain_biking_tone4', '🚵🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mountain_biking_tone4', '🚵🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mountain_bicyclist_tone4', '🚵🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏿','1F6B5-1F3FF','person mountain biking: dark skin tone','🚵',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('mountain_biking_tone5', '🚵🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mountain_bicyclist_tone5', '🚵🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_mountain_biking_tone5', '🚵🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵‍♂️','1F6B5-200D-2642-FE0F','man mountain biking','🚵‍♂️','{"cyclist","bike","man","mountain","bicycle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cyclist","bike","man","mountain","bicycle"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_mountain_biking', '🚵‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏻‍♂️','1F6B5-1F3FB-200D-2642-FE0F','man mountain biking: light skin tone','🚵‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_mountain_biking_tone1', '🚵🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏼‍♂️','1F6B5-1F3FC-200D-2642-FE0F','man mountain biking: medium-light skin tone','🚵‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_mountain_biking_tone2', '🚵🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏽‍♂️','1F6B5-1F3FD-200D-2642-FE0F','man mountain biking: medium skin tone','🚵‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_mountain_biking_tone3', '🚵🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏾‍♂️','1F6B5-1F3FE-200D-2642-FE0F','man mountain biking: medium-dark skin tone','🚵‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_mountain_biking_tone4', '🚵🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏿‍♂️','1F6B5-1F3FF-200D-2642-FE0F','man mountain biking: dark skin tone','🚵‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_mountain_biking_tone5', '🚵🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵‍♀️','1F6B5-200D-2640-FE0F','woman mountain biking','🚵‍♀️','{"woman","cyclist","bike","mountain","biking","bicycle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","cyclist","bike","mountain","biking","bicycle"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_mountain_biking', '🚵‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏻‍♀️','1F6B5-1F3FB-200D-2640-FE0F','woman mountain biking: light skin tone','🚵‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_mountain_biking_tone1', '🚵🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏼‍♀️','1F6B5-1F3FC-200D-2640-FE0F','woman mountain biking: medium-light skin tone','🚵‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_mountain_biking_tone2', '🚵🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏽‍♀️','1F6B5-1F3FD-200D-2640-FE0F','woman mountain biking: medium skin tone','🚵‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_mountain_biking_tone3', '🚵🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏾‍♀️','1F6B5-1F3FE-200D-2640-FE0F','woman mountain biking: medium-dark skin tone','🚵‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_mountain_biking_tone4', '🚵🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚵🏿‍♀️','1F6B5-1F3FF-200D-2640-FE0F','woman mountain biking: dark skin tone','🚵‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_mountain_biking_tone5', '🚵🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸','1F938','person cartwheeling','🤸','{"cartwheel","gymnastics","sports"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cartwheel","gymnastics","sports"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cartwheeling', '🤸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_cartwheel', '🤸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏻','1F938-1F3FB','person cartwheeling: light skin tone','🤸',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_cartwheel_tone1', '🤸🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cartwheeling_tone1', '🤸🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏼','1F938-1F3FC','person cartwheeling: medium-light skin tone','🤸',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_cartwheel_tone2', '🤸🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cartwheeling_tone2', '🤸🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏽','1F938-1F3FD','person cartwheeling: medium skin tone','🤸',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_cartwheel_tone3', '🤸🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cartwheeling_tone3', '🤸🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏾','1F938-1F3FE','person cartwheeling: medium-dark skin tone','🤸',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_cartwheel_tone4', '🤸🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cartwheeling_tone4', '🤸🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏿','1F938-1F3FF','person cartwheeling: dark skin tone','🤸',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_cartwheel_tone5', '🤸🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cartwheeling_tone5', '🤸🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸‍♂️','1F938-200D-2642-FE0F','man cartwheeling','🤸‍♂️','{"cartwheel","gymnastics","man"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cartwheel","gymnastics","man"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_cartwheeling', '🤸‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏻‍♂️','1F938-1F3FB-200D-2642-FE0F','man cartwheeling: light skin tone','🤸‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_cartwheeling_tone1', '🤸🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏼‍♂️','1F938-1F3FC-200D-2642-FE0F','man cartwheeling: medium-light skin tone','🤸‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_cartwheeling_tone2', '🤸🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏽‍♂️','1F938-1F3FD-200D-2642-FE0F','man cartwheeling: medium skin tone','🤸‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_cartwheeling_tone3', '🤸🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏾‍♂️','1F938-1F3FE-200D-2642-FE0F','man cartwheeling: medium-dark skin tone','🤸‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_cartwheeling_tone4', '🤸🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏿‍♂️','1F938-1F3FF-200D-2642-FE0F','man cartwheeling: dark skin tone','🤸‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_cartwheeling_tone5', '🤸🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸‍♀️','1F938-200D-2640-FE0F','woman cartwheeling','🤸‍♀️','{"cartwheel","gymnastics","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cartwheel","gymnastics","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_cartwheeling', '🤸‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏻‍♀️','1F938-1F3FB-200D-2640-FE0F','woman cartwheeling: light skin tone','🤸‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_cartwheeling_tone1', '🤸🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏼‍♀️','1F938-1F3FC-200D-2640-FE0F','woman cartwheeling: medium-light skin tone','🤸‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_cartwheeling_tone2', '🤸🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏽‍♀️','1F938-1F3FD-200D-2640-FE0F','woman cartwheeling: medium skin tone','🤸‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_cartwheeling_tone3', '🤸🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏾‍♀️','1F938-1F3FE-200D-2640-FE0F','woman cartwheeling: medium-dark skin tone','🤸‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_cartwheeling_tone4', '🤸🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤸🏿‍♀️','1F938-1F3FF-200D-2640-FE0F','woman cartwheeling: dark skin tone','🤸‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_cartwheeling_tone5', '🤸🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤼','1F93C','people wrestling',default,'{"fighting","wrestler","wrestle","sports"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fighting","wrestler","wrestle","sports"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wrestling', '🤼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('people_wrestling', '🤼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('wrestlers', '🤼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤼‍♂️','1F93C-200D-2642-FE0F','men wrestling',default,'{"wrestle","men"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wrestle","men"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('men_wrestling', '🤼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤼‍♀️','1F93C-200D-2640-FE0F','women wrestling',default,'{"wrestle","women"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wrestle","women"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('women_wrestling', '🤼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽','1F93D','person playing water polo','🤽','{"sports","water","polo"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sports","water","polo"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_playing_water_polo', '🤽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('water_polo', '🤽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏻','1F93D-1F3FB','person playing water polo: light skin tone','🤽',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_playing_water_polo_tone1', '🤽🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('water_polo_tone1', '🤽🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏼','1F93D-1F3FC','person playing water polo: medium-light skin tone','🤽',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_playing_water_polo_tone2', '🤽🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('water_polo_tone2', '🤽🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏽','1F93D-1F3FD','person playing water polo: medium skin tone','🤽',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('water_polo_tone3', '🤽🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_playing_water_polo_tone3', '🤽🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏾','1F93D-1F3FE','person playing water polo: medium-dark skin tone','🤽',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('water_polo_tone4', '🤽🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_playing_water_polo_tone4', '🤽🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏿','1F93D-1F3FF','person playing water polo: dark skin tone','🤽',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('water_polo_tone5', '🤽🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_playing_water_polo_tone5', '🤽🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽‍♂️','1F93D-200D-2642-FE0F','man playing water polo','🤽‍♂️','{"man","water polo"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","water polo"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_playing_water_polo', '🤽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏻‍♂️','1F93D-1F3FB-200D-2642-FE0F','man playing water polo: light skin tone','🤽‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_playing_water_polo_tone1', '🤽🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏼‍♂️','1F93D-1F3FC-200D-2642-FE0F','man playing water polo: medium-light skin tone','🤽‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_playing_water_polo_tone2', '🤽🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏽‍♂️','1F93D-1F3FD-200D-2642-FE0F','man playing water polo: medium skin tone','🤽‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_playing_water_polo_tone3', '🤽🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏾‍♂️','1F93D-1F3FE-200D-2642-FE0F','man playing water polo: medium-dark skin tone','🤽‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_playing_water_polo_tone4', '🤽🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏿‍♂️','1F93D-1F3FF-200D-2642-FE0F','man playing water polo: dark skin tone','🤽‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_playing_water_polo_tone5', '🤽🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽‍♀️','1F93D-200D-2640-FE0F','woman playing water polo','🤽‍♀️','{"water polo","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"water polo","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_playing_water_polo', '🤽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏻‍♀️','1F93D-1F3FB-200D-2640-FE0F','woman playing water polo: light skin tone','🤽‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_playing_water_polo_tone1', '🤽🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏼‍♀️','1F93D-1F3FC-200D-2640-FE0F','woman playing water polo: medium-light skin tone','🤽‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_playing_water_polo_tone2', '🤽🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏽‍♀️','1F93D-1F3FD-200D-2640-FE0F','woman playing water polo: medium skin tone','🤽‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_playing_water_polo_tone3', '🤽🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏾‍♀️','1F93D-1F3FE-200D-2640-FE0F','woman playing water polo: medium-dark skin tone','🤽‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_playing_water_polo_tone4', '🤽🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤽🏿‍♀️','1F93D-1F3FF-200D-2640-FE0F','woman playing water polo: dark skin tone','🤽‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_playing_water_polo_tone5', '🤽🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾','1F93E','person playing handball','🤾','{"sports","indoor","handball","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sports","indoor","handball","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_playing_handball', '🤾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('handball', '🤾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏻','1F93E-1F3FB','person playing handball: light skin tone','🤾',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('handball_tone1', '🤾🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_playing_handball_tone1', '🤾🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏼','1F93E-1F3FC','person playing handball: medium-light skin tone','🤾',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_playing_handball_tone2', '🤾🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('handball_tone2', '🤾🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏽','1F93E-1F3FD','person playing handball: medium skin tone','🤾',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('handball_tone3', '🤾🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_playing_handball_tone3', '🤾🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏾','1F93E-1F3FE','person playing handball: medium-dark skin tone','🤾',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('handball_tone4', '🤾🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_playing_handball_tone4', '🤾🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏿','1F93E-1F3FF','person playing handball: dark skin tone','🤾',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_playing_handball_tone5', '🤾🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('handball_tone5', '🤾🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾‍♂️','1F93E-200D-2642-FE0F','man playing handball','🤾‍♂️','{"man","handball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","handball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_playing_handball', '🤾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏻‍♂️','1F93E-1F3FB-200D-2642-FE0F','man playing handball: light skin tone','🤾‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_playing_handball_tone1', '🤾🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏼‍♂️','1F93E-1F3FC-200D-2642-FE0F','man playing handball: medium-light skin tone','🤾‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_playing_handball_tone2', '🤾🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏽‍♂️','1F93E-1F3FD-200D-2642-FE0F','man playing handball: medium skin tone','🤾‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_playing_handball_tone3', '🤾🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏾‍♂️','1F93E-1F3FE-200D-2642-FE0F','man playing handball: medium-dark skin tone','🤾‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_playing_handball_tone4', '🤾🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏿‍♂️','1F93E-1F3FF-200D-2642-FE0F','man playing handball: dark skin tone','🤾‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_playing_handball_tone5', '🤾🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾‍♀️','1F93E-200D-2640-FE0F','woman playing handball','🤾‍♀️','{"woman","handball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","handball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_playing_handball', '🤾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏻‍♀️','1F93E-1F3FB-200D-2640-FE0F','woman playing handball: light skin tone','🤾‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_playing_handball_tone1', '🤾🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏼‍♀️','1F93E-1F3FC-200D-2640-FE0F','woman playing handball: medium-light skin tone','🤾‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_playing_handball_tone2', '🤾🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏽‍♀️','1F93E-1F3FD-200D-2640-FE0F','woman playing handball: medium skin tone','🤾‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_playing_handball_tone3', '🤾🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏾‍♀️','1F93E-1F3FE-200D-2640-FE0F','woman playing handball: medium-dark skin tone','🤾‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_playing_handball_tone4', '🤾🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤾🏿‍♀️','1F93E-1F3FF-200D-2640-FE0F','woman playing handball: dark skin tone','🤾‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_playing_handball_tone5', '🤾🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹','1F939','person juggling','🤹','{"skill","artist","juggle","multitask","balance"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"skill","artist","juggle","multitask","balance"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_juggling', '🤹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('juggler', '🤹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('juggling', '🤹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏻','1F939-1F3FB','person juggling: light skin tone','🤹',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_juggling_tone1', '🤹🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('juggler_tone1', '🤹🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('juggling_tone1', '🤹🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏼','1F939-1F3FC','person juggling: medium-light skin tone','🤹',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('juggler_tone2', '🤹🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_juggling_tone2', '🤹🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('juggling_tone2', '🤹🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏽','1F939-1F3FD','person juggling: medium skin tone','🤹',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('juggler_tone3', '🤹🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_juggling_tone3', '🤹🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('juggling_tone3', '🤹🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏾','1F939-1F3FE','person juggling: medium-dark skin tone','🤹',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('juggler_tone4', '🤹🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_juggling_tone4', '🤹🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('juggling_tone4', '🤹🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏿','1F939-1F3FF','person juggling: dark skin tone','🤹',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('juggler_tone5', '🤹🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('juggling_tone5', '🤹🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_juggling_tone5', '🤹🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹‍♂️','1F939-200D-2642-FE0F','man juggling','🤹‍♂️','{"man","multitask","juggling"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","multitask","juggling"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_juggling', '🤹‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏻‍♂️','1F939-1F3FB-200D-2642-FE0F','man juggling: light skin tone','🤹‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_juggling_tone1', '🤹🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏼‍♂️','1F939-1F3FC-200D-2642-FE0F','man juggling: medium-light skin tone','🤹‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_juggling_tone2', '🤹🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏽‍♂️','1F939-1F3FD-200D-2642-FE0F','man juggling: medium skin tone','🤹‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_juggling_tone3', '🤹🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏾‍♂️','1F939-1F3FE-200D-2642-FE0F','man juggling: medium-dark skin tone','🤹‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_juggling_tone4', '🤹🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏿‍♂️','1F939-1F3FF-200D-2642-FE0F','man juggling: dark skin tone','🤹‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_juggling_tone5', '🤹🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹‍♀️','1F939-200D-2640-FE0F','woman juggling','🤹‍♀️','{"multitask","woman","juggling"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"multitask","woman","juggling"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_juggling', '🤹‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏻‍♀️','1F939-1F3FB-200D-2640-FE0F','woman juggling: light skin tone','🤹‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_juggling_tone1', '🤹🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏼‍♀️','1F939-1F3FC-200D-2640-FE0F','woman juggling: medium-light skin tone','🤹‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_juggling_tone2', '🤹🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏽‍♀️','1F939-1F3FD-200D-2640-FE0F','woman juggling: medium skin tone','🤹‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_juggling_tone3', '🤹🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏾‍♀️','1F939-1F3FE-200D-2640-FE0F','woman juggling: medium-dark skin tone','🤹‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_juggling_tone4', '🤹🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤹🏿‍♀️','1F939-1F3FF-200D-2640-FE0F','woman juggling: dark skin tone','🤹‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_juggling_tone5', '🤹🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘','1F9D8','person in lotus position','🧘','{"exercise","person","meditation","yoga","human"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"exercise","person","meditation","yoga","human"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_in_lotus_position', '🧘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏻','1F9D8-1F3FB','person in lotus position: light skin tone','🧘',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('person_in_lotus_position_tone1', '🧘🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏼','1F9D8-1F3FC','person in lotus position: medium-light skin tone','🧘',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_in_lotus_position_tone2', '🧘🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏽','1F9D8-1F3FD','person in lotus position: medium skin tone','🧘',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_in_lotus_position_tone3', '🧘🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏾','1F9D8-1F3FE','person in lotus position: medium-dark skin tone','🧘',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_in_lotus_position_tone4', '🧘🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏿','1F9D8-1F3FF','person in lotus position: dark skin tone','🧘',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_in_lotus_position_tone5', '🧘🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘‍♂️','1F9D8-200D-2642-FE0F','man in lotus position','🧘‍♂️','{"meditation","yoga"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"meditation","yoga"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('man_in_lotus_position', '🧘‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏻‍♂️','1F9D8-1F3FB-200D-2642-FE0F','man in lotus position: light skin tone','🧘‍♂️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('man_in_lotus_position_tone1', '🧘🏻‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏼‍♂️','1F9D8-1F3FC-200D-2642-FE0F','man in lotus position: medium-light skin tone','🧘‍♂️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('man_in_lotus_position_tone2', '🧘🏼‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏽‍♂️','1F9D8-1F3FD-200D-2642-FE0F','man in lotus position: medium skin tone','🧘‍♂️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('man_in_lotus_position_tone3', '🧘🏽‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏾‍♂️','1F9D8-1F3FE-200D-2642-FE0F','man in lotus position: medium-dark skin tone','🧘‍♂️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('man_in_lotus_position_tone4', '🧘🏾‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏿‍♂️','1F9D8-1F3FF-200D-2642-FE0F','man in lotus position: dark skin tone','🧘‍♂️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('man_in_lotus_position_tone5', '🧘🏿‍♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘‍♀️','1F9D8-200D-2640-FE0F','woman in lotus position','🧘‍♀️','{"meditation","yoga"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"meditation","yoga"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('woman_in_lotus_position', '🧘‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏻‍♀️','1F9D8-1F3FB-200D-2640-FE0F','woman in lotus position: light skin tone','🧘‍♀️',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_lotus_position_tone1', '🧘🏻‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏼‍♀️','1F9D8-1F3FC-200D-2640-FE0F','woman in lotus position: medium-light skin tone','🧘‍♀️',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_lotus_position_tone2', '🧘🏼‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏽‍♀️','1F9D8-1F3FD-200D-2640-FE0F','woman in lotus position: medium skin tone','🧘‍♀️',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_lotus_position_tone3', '🧘🏽‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏾‍♀️','1F9D8-1F3FE-200D-2640-FE0F','woman in lotus position: medium-dark skin tone','🧘‍♀️',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_lotus_position_tone4', '🧘🏾‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧘🏿‍♀️','1F9D8-1F3FF-200D-2640-FE0F','woman in lotus position: dark skin tone','🧘‍♀️',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('woman_in_lotus_position_tone5', '🧘🏿‍♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛀','1F6C0','person taking bath','🛀','{"bath","bathtub"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bath","bathtub"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('person_taking_bath', '🛀') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bath', '🛀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛀🏻','1F6C0-1F3FB','person taking bath: light skin tone','🛀',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('bath_tone1', '🛀🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_taking_bath_tone1', '🛀🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛀🏼','1F6C0-1F3FC','person taking bath: medium-light skin tone','🛀',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('person_taking_bath_tone2', '🛀🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bath_tone2', '🛀🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛀🏽','1F6C0-1F3FD','person taking bath: medium skin tone','🛀',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('bath_tone3', '🛀🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_taking_bath_tone3', '🛀🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛀🏾','1F6C0-1F3FE','person taking bath: medium-dark skin tone','🛀',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_taking_bath_tone4', '🛀🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bath_tone4', '🛀🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛀🏿','1F6C0-1F3FF','person taking bath: dark skin tone','🛀',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('bath_tone5', '🛀🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_taking_bath_tone5', '🛀🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛌','1F6CC','person in bed','🛌','{"person","hotel","sleep","good night","human"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"person","hotel","sleep","good night","human"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sleeping_accommodation', '🛌') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_in_bed', '🛌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛌🏻','1F6CC-1F3FB','person in bed: light skin tone','🛌',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('sleeping_accommodation_tone1', '🛌🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_in_bed_tone1', '🛌🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛌🏼','1F6CC-1F3FC','person in bed: medium-light skin tone','🛌',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('sleeping_accommodation_tone2', '🛌🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('person_in_bed_tone2', '🛌🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛌🏽','1F6CC-1F3FD','person in bed: medium skin tone','🛌',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('person_in_bed_tone3', '🛌🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sleeping_accommodation_tone3', '🛌🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛌🏾','1F6CC-1F3FE','person in bed: medium-dark skin tone','🛌',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('person_in_bed_tone4', '🛌🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sleeping_accommodation_tone4', '🛌🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛌🏿','1F6CC-1F3FF','person in bed: dark skin tone','🛌',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('person_in_bed_tone5', '🛌🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sleeping_accommodation_tone5', '🛌🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🤝‍🧑','1F9D1-200D-1F91D-200D-1F9D1','people holding hands','🧑‍🤝‍🧑','{"person","holding hands","couple","hand","hold"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"person","holding hands","couple","hand","hold"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands', '🧑‍🤝‍🧑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🤝‍🧑🏻','1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FB','people holding hands: light skin tone','🧑‍🤝‍🧑',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone1', '🧑🏻‍🤝‍🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🤝‍🧑🏼','1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FC','people holding hands: light skin tone, medium-light skin tone','🧑‍🤝‍🧑',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone1-2', '🧑🏻‍🤝‍🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🤝‍🧑🏽','1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FD','people holding hands: light skin tone, medium skin tone','🧑‍🤝‍🧑',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone1-3', '🧑🏻‍🤝‍🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🤝‍🧑🏾','1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FE','people holding hands: light skin tone, medium-dark skin tone','🧑‍🤝‍🧑',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone1-4', '🧑🏻‍🤝‍🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍🤝‍🧑🏿','1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FF','people holding hands: light skin tone, dark skin tone','🧑‍🤝‍🧑',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone1-5', '🧑🏻‍🤝‍🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🤝‍🧑🏻','1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FB','people holding hands: medium-light skin tone, light skin tone','🧑‍🤝‍🧑',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone2-1', '🧑🏼‍🤝‍🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🤝‍🧑🏼','1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FC','people holding hands: medium-light skin tone','🧑‍🤝‍🧑',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone2', '🧑🏼‍🤝‍🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🤝‍🧑🏽','1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FD','people holding hands: medium-light skin tone, medium skin tone','🧑‍🤝‍🧑',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone2-3', '🧑🏼‍🤝‍🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🤝‍🧑🏾','1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FE','people holding hands: medium-light skin tone, medium-dark skin tone','🧑‍🤝‍🧑',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone2-4', '🧑🏼‍🤝‍🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍🤝‍🧑🏿','1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FF','people holding hands: medium-light skin tone, dark skin tone','🧑‍🤝‍🧑',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone2-5', '🧑🏼‍🤝‍🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🤝‍🧑🏻','1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FB','people holding hands: medium skin tone, light skin tone','🧑‍🤝‍🧑',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone3-1', '🧑🏽‍🤝‍🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🤝‍🧑🏼','1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FC','people holding hands: medium skin tone, medium-light skin tone','🧑‍🤝‍🧑',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone3-2', '🧑🏽‍🤝‍🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🤝‍🧑🏽','1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FD','people holding hands: medium skin tone','🧑‍🤝‍🧑',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone3', '🧑🏽‍🤝‍🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🤝‍🧑🏾','1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FE','people holding hands: medium skin tone, medium-dark skin tone','🧑‍🤝‍🧑',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone3-4', '🧑🏽‍🤝‍🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍🤝‍🧑🏿','1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FF','people holding hands: medium skin tone, dark skin tone','🧑‍🤝‍🧑',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone3-5', '🧑🏽‍🤝‍🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🤝‍🧑🏻','1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FB','people holding hands: medium-dark skin tone, light skin tone','🧑‍🤝‍🧑',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone4-1', '🧑🏾‍🤝‍🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🤝‍🧑🏼','1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FC','people holding hands: medium-dark skin tone, medium-light skin tone','🧑‍🤝‍🧑',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone4-2', '🧑🏾‍🤝‍🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🤝‍🧑🏽','1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FD','people holding hands: medium-dark skin tone, medium skin tone','🧑‍🤝‍🧑',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone4-3', '🧑🏾‍🤝‍🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🤝‍🧑🏾','1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FE','people holding hands: medium-dark skin tone','🧑‍🤝‍🧑',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone4', '🧑🏾‍🤝‍🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍🤝‍🧑🏿','1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FF','people holding hands: medium-dark skin tone, dark skin tone','🧑‍🤝‍🧑',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone4-5', '🧑🏾‍🤝‍🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🤝‍🧑🏻','1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FB','people holding hands: dark skin tone, light skin tone','🧑‍🤝‍🧑',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone5-1', '🧑🏿‍🤝‍🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🤝‍🧑🏼','1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FC','people holding hands: dark skin tone, medium-light skin tone','🧑‍🤝‍🧑',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone5-2', '🧑🏿‍🤝‍🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🤝‍🧑🏽','1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FD','people holding hands: dark skin tone, medium skin tone','🧑‍🤝‍🧑',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone5-3', '🧑🏿‍🤝‍🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🤝‍🧑🏾','1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FE','people holding hands: dark skin tone, medium-dark skin tone','🧑‍🤝‍🧑',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone5-4', '🧑🏿‍🤝‍🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍🤝‍🧑🏿','1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FF','people holding hands: dark skin tone','🧑‍🤝‍🧑',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('people_holding_hands_tone5', '🧑🏿‍🤝‍🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👭','1F46D','women holding hands','👭','{"holding hands","couple","women","hand","homosexual","girlfriend","together","lesbian"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"holding hands","couple","women","hand","homosexual","girlfriend","together","lesbian"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands', '👭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👭🏻','1F46D-1F3FB','women holding hands: light skin tone','👭',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone1', '👭🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🤝‍👩🏼','1F469-1F3FB-200D-1F91D-200D-1F469-1F3FC','women holding hands: light skin tone, medium-light skin tone','👭',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone1-2', '👩🏻‍🤝‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🤝‍👩🏽','1F469-1F3FB-200D-1F91D-200D-1F469-1F3FD','women holding hands: light skin tone, medium skin tone','👭',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone1-3', '👩🏻‍🤝‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🤝‍👩🏾','1F469-1F3FB-200D-1F91D-200D-1F469-1F3FE','women holding hands: light skin tone, medium-dark skin tone','👭',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone1-4', '👩🏻‍🤝‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🤝‍👩🏿','1F469-1F3FB-200D-1F91D-200D-1F469-1F3FF','women holding hands: light skin tone, dark skin tone','👭',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone1-5', '👩🏻‍🤝‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🤝‍👩🏻','1F469-1F3FC-200D-1F91D-200D-1F469-1F3FB','women holding hands: medium-light skin tone, light skin tone','👭',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone2-1', '👩🏼‍🤝‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👭🏼','1F46D-1F3FC','women holding hands: medium-light skin tone','👭',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone2', '👭🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🤝‍👩🏽','1F469-1F3FC-200D-1F91D-200D-1F469-1F3FD','women holding hands: medium-light skin tone, medium skin tone','👭',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone2-3', '👩🏼‍🤝‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🤝‍👩🏾','1F469-1F3FC-200D-1F91D-200D-1F469-1F3FE','women holding hands: medium-light skin tone, medium-dark skin tone','👭',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone2-4', '👩🏼‍🤝‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🤝‍👩🏿','1F469-1F3FC-200D-1F91D-200D-1F469-1F3FF','women holding hands: medium-light skin tone, dark skin tone','👭',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone2-5', '👩🏼‍🤝‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🤝‍👩🏻','1F469-1F3FD-200D-1F91D-200D-1F469-1F3FB','women holding hands: medium skin tone, light skin tone','👭',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone3-1', '👩🏽‍🤝‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🤝‍👩🏼','1F469-1F3FD-200D-1F91D-200D-1F469-1F3FC','women holding hands: medium skin tone, medium-light skin tone','👭',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone3-2', '👩🏽‍🤝‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👭🏽','1F46D-1F3FD','women holding hands: medium skin tone','👭',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone3', '👭🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🤝‍👩🏾','1F469-1F3FD-200D-1F91D-200D-1F469-1F3FE','women holding hands: medium skin tone, medium-dark skin tone','👭',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone3-4', '👩🏽‍🤝‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🤝‍👩🏿','1F469-1F3FD-200D-1F91D-200D-1F469-1F3FF','women holding hands: medium skin tone, dark skin tone','👭',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone3-5', '👩🏽‍🤝‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🤝‍👩🏻','1F469-1F3FE-200D-1F91D-200D-1F469-1F3FB','women holding hands: medium-dark skin tone, light skin tone','👭',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone4-1', '👩🏾‍🤝‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🤝‍👩🏼','1F469-1F3FE-200D-1F91D-200D-1F469-1F3FC','women holding hands: medium-dark skin tone, medium-light skin tone','👭',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone4-2', '👩🏾‍🤝‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🤝‍👩🏽','1F469-1F3FE-200D-1F91D-200D-1F469-1F3FD','women holding hands: medium-dark skin tone, medium skin tone','👭',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone4-3', '👩🏾‍🤝‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👭🏾','1F46D-1F3FE','women holding hands: medium-dark skin tone','👭',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone4', '👭🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🤝‍👩🏿','1F469-1F3FE-200D-1F91D-200D-1F469-1F3FF','women holding hands: medium-dark skin tone, dark skin tone','👭',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone4-5', '👩🏾‍🤝‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🤝‍👩🏻','1F469-1F3FF-200D-1F91D-200D-1F469-1F3FB','women holding hands: dark skin tone, light skin tone','👭',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone5-1', '👩🏿‍🤝‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🤝‍👩🏼','1F469-1F3FF-200D-1F91D-200D-1F469-1F3FC','women holding hands: dark skin tone, medium-light skin tone','👭',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone5-2', '👩🏿‍🤝‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🤝‍👩🏽','1F469-1F3FF-200D-1F91D-200D-1F469-1F3FD','women holding hands: dark skin tone, medium skin tone','👭',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone5-3', '👩🏿‍🤝‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🤝‍👩🏾','1F469-1F3FF-200D-1F91D-200D-1F469-1F3FE','women holding hands: dark skin tone, medium-dark skin tone','👭',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone5-4', '👩🏿‍🤝‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👭🏿','1F46D-1F3FF','women holding hands: dark skin tone','👭',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('two_women_holding_hands_tone5', '👭🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👫','1F46B','woman and man holding hands','👫','{"heterosexual","holding hands","woman","couple","man","straight","hand","hold","together"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"heterosexual","holding hands","woman","couple","man","straight","hand","hold","together"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('couple', '👫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👫🏻','1F46B-1F3FB','woman and man holding hands: light skin tone','👫',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone1', '👫🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🤝‍👨🏼','1F469-1F3FB-200D-1F91D-200D-1F468-1F3FC','woman and man holding hands: light skin tone, medium-light skin tone','👫',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone1-2', '👩🏻‍🤝‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🤝‍👨🏽','1F469-1F3FB-200D-1F91D-200D-1F468-1F3FD','woman and man holding hands: light skin tone, medium skin tone','👫',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone1-3', '👩🏻‍🤝‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🤝‍👨🏾','1F469-1F3FB-200D-1F91D-200D-1F468-1F3FE','woman and man holding hands: light skin tone, medium-dark skin tone','👫',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone1-4', '👩🏻‍🤝‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍🤝‍👨🏿','1F469-1F3FB-200D-1F91D-200D-1F468-1F3FF','woman and man holding hands: light skin tone, dark skin tone','👫',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone1-5', '👩🏻‍🤝‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🤝‍👨🏻','1F469-1F3FC-200D-1F91D-200D-1F468-1F3FB','woman and man holding hands: medium-light skin tone, light skin tone','👫',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone2-1', '👩🏼‍🤝‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👫🏼','1F46B-1F3FC','woman and man holding hands: medium-light skin tone','👫',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone2', '👫🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🤝‍👨🏽','1F469-1F3FC-200D-1F91D-200D-1F468-1F3FD','woman and man holding hands: medium-light skin tone, medium skin tone','👫',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone2-3', '👩🏼‍🤝‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🤝‍👨🏾','1F469-1F3FC-200D-1F91D-200D-1F468-1F3FE','woman and man holding hands: medium-light skin tone, medium-dark skin tone','👫',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone2-4', '👩🏼‍🤝‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍🤝‍👨🏿','1F469-1F3FC-200D-1F91D-200D-1F468-1F3FF','woman and man holding hands: medium-light skin tone, dark skin tone','👫',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone2-5', '👩🏼‍🤝‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🤝‍👨🏻','1F469-1F3FD-200D-1F91D-200D-1F468-1F3FB','woman and man holding hands: medium skin tone, light skin tone','👫',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone3-1', '👩🏽‍🤝‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🤝‍👨🏼','1F469-1F3FD-200D-1F91D-200D-1F468-1F3FC','woman and man holding hands: medium skin tone, medium-light skin tone','👫',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone3-2', '👩🏽‍🤝‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👫🏽','1F46B-1F3FD','woman and man holding hands: medium skin tone','👫',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone3', '👫🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🤝‍👨🏾','1F469-1F3FD-200D-1F91D-200D-1F468-1F3FE','woman and man holding hands: medium skin tone, medium-dark skin tone','👫',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone3-4', '👩🏽‍🤝‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍🤝‍👨🏿','1F469-1F3FD-200D-1F91D-200D-1F468-1F3FF','woman and man holding hands: medium skin tone, dark skin tone','👫',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone3-5', '👩🏽‍🤝‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🤝‍👨🏻','1F469-1F3FE-200D-1F91D-200D-1F468-1F3FB','woman and man holding hands: medium-dark skin tone, light skin tone','👫',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone4-1', '👩🏾‍🤝‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🤝‍👨🏼','1F469-1F3FE-200D-1F91D-200D-1F468-1F3FC','woman and man holding hands: medium-dark skin tone, medium-light skin tone','👫',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone4-2', '👩🏾‍🤝‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🤝‍👨🏽','1F469-1F3FE-200D-1F91D-200D-1F468-1F3FD','woman and man holding hands: medium-dark skin tone, medium skin tone','👫',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone4-3', '👩🏾‍🤝‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👫🏾','1F46B-1F3FE','woman and man holding hands: medium-dark skin tone','👫',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone4', '👫🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍🤝‍👨🏿','1F469-1F3FE-200D-1F91D-200D-1F468-1F3FF','woman and man holding hands: medium-dark skin tone, dark skin tone','👫',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone4-5', '👩🏾‍🤝‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🤝‍👨🏻','1F469-1F3FF-200D-1F91D-200D-1F468-1F3FB','woman and man holding hands: dark skin tone, light skin tone','👫',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone5-1', '👩🏿‍🤝‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🤝‍👨🏼','1F469-1F3FF-200D-1F91D-200D-1F468-1F3FC','woman and man holding hands: dark skin tone, medium-light skin tone','👫',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone5-2', '👩🏿‍🤝‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🤝‍👨🏽','1F469-1F3FF-200D-1F91D-200D-1F468-1F3FD','woman and man holding hands: dark skin tone, medium skin tone','👫',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone5-3', '👩🏿‍🤝‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍🤝‍👨🏾','1F469-1F3FF-200D-1F91D-200D-1F468-1F3FE','woman and man holding hands: dark skin tone, medium-dark skin tone','👫',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone5-4', '👩🏿‍🤝‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👫🏿','1F46B-1F3FF','woman and man holding hands: dark skin tone','👫',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('couple_tone5', '👫🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👬','1F46C','men holding hands','👬','{"holding hands","men","gemini","together","couple","zodiac","man","homosexual","twins","gay"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"holding hands","men","gemini","together","couple","zodiac","man","homosexual","twins","gay"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands', '👬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👬🏻','1F46C-1F3FB','men holding hands: light skin tone','👬',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone1', '👬🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🤝‍👨🏼','1F468-1F3FB-200D-1F91D-200D-1F468-1F3FC','men holding hands: light skin tone, medium-light skin tone','👬',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone1-2', '👨🏻‍🤝‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🤝‍👨🏽','1F468-1F3FB-200D-1F91D-200D-1F468-1F3FD','men holding hands: light skin tone, medium skin tone','👬',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone1-3', '👨🏻‍🤝‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🤝‍👨🏾','1F468-1F3FB-200D-1F91D-200D-1F468-1F3FE','men holding hands: light skin tone, medium-dark skin tone','👬',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone1-4', '👨🏻‍🤝‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍🤝‍👨🏿','1F468-1F3FB-200D-1F91D-200D-1F468-1F3FF','men holding hands: light skin tone, dark skin tone','👬',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone1-5', '👨🏻‍🤝‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🤝‍👨🏻','1F468-1F3FC-200D-1F91D-200D-1F468-1F3FB','men holding hands: medium-light skin tone, light skin tone','👬',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone2-1', '👨🏼‍🤝‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👬🏼','1F46C-1F3FC','men holding hands: medium-light skin tone','👬',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone2', '👬🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🤝‍👨🏽','1F468-1F3FC-200D-1F91D-200D-1F468-1F3FD','men holding hands: medium-light skin tone, medium skin tone','👬',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone2-3', '👨🏼‍🤝‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🤝‍👨🏾','1F468-1F3FC-200D-1F91D-200D-1F468-1F3FE','men holding hands: medium-light skin tone, medium-dark skin tone','👬',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone2-4', '👨🏼‍🤝‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍🤝‍👨🏿','1F468-1F3FC-200D-1F91D-200D-1F468-1F3FF','men holding hands: medium-light skin tone, dark skin tone','👬',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone2-5', '👨🏼‍🤝‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🤝‍👨🏻','1F468-1F3FD-200D-1F91D-200D-1F468-1F3FB','men holding hands: medium skin tone, light skin tone','👬',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone3-1', '👨🏽‍🤝‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🤝‍👨🏼','1F468-1F3FD-200D-1F91D-200D-1F468-1F3FC','men holding hands: medium skin tone, medium-light skin tone','👬',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone3-2', '👨🏽‍🤝‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👬🏽','1F46C-1F3FD','men holding hands: medium skin tone','👬',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone3', '👬🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🤝‍👨🏾','1F468-1F3FD-200D-1F91D-200D-1F468-1F3FE','men holding hands: medium skin tone, medium-dark skin tone','👬',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone3-4', '👨🏽‍🤝‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍🤝‍👨🏿','1F468-1F3FD-200D-1F91D-200D-1F468-1F3FF','men holding hands: medium skin tone, dark skin tone','👬',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone3-5', '👨🏽‍🤝‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🤝‍👨🏻','1F468-1F3FE-200D-1F91D-200D-1F468-1F3FB','men holding hands: medium-dark skin tone, light skin tone','👬',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone4-1', '👨🏾‍🤝‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🤝‍👨🏼','1F468-1F3FE-200D-1F91D-200D-1F468-1F3FC','men holding hands: medium-dark skin tone, medium-light skin tone','👬',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone4-2', '👨🏾‍🤝‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🤝‍👨🏽','1F468-1F3FE-200D-1F91D-200D-1F468-1F3FD','men holding hands: medium-dark skin tone, medium skin tone','👬',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone4-3', '👨🏾‍🤝‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👬🏾','1F46C-1F3FE','men holding hands: medium-dark skin tone','👬',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone4', '👬🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍🤝‍👨🏿','1F468-1F3FE-200D-1F91D-200D-1F468-1F3FF','men holding hands: medium-dark skin tone, dark skin tone','👬',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone4-5', '👨🏾‍🤝‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🤝‍👨🏻','1F468-1F3FF-200D-1F91D-200D-1F468-1F3FB','men holding hands: dark skin tone, light skin tone','👬',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone5-1', '👨🏿‍🤝‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🤝‍👨🏼','1F468-1F3FF-200D-1F91D-200D-1F468-1F3FC','men holding hands: dark skin tone, medium-light skin tone','👬',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone5-2', '👨🏿‍🤝‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🤝‍👨🏽','1F468-1F3FF-200D-1F91D-200D-1F468-1F3FD','men holding hands: dark skin tone, medium skin tone','👬',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone5-3', '👨🏿‍🤝‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍🤝‍👨🏾','1F468-1F3FF-200D-1F91D-200D-1F468-1F3FE','men holding hands: dark skin tone, medium-dark skin tone','👬',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone5-4', '👨🏿‍🤝‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👬🏿','1F46C-1F3FF','men holding hands: dark skin tone','👬',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('two_men_holding_hands_tone5', '👬🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💏','1F48F','kiss','💏','{"boy","face","kiss","woman","couple","girl","man"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"boy","face","kiss","woman","couple","girl","man"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss', '💏') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couplekiss', '💏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💏🏻','1F48F-1F3FB','kiss: light skin tone','💏',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone1', '💏🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone1', '💏🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💏🏼','1F48F-1F3FC','kiss: medium-light skin tone','💏',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone2', '💏🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone2', '💏🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💏🏽','1F48F-1F3FD','kiss: medium skin tone','💏',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone3', '💏🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone3', '💏🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💏🏾','1F48F-1F3FE','kiss: medium-dark skin tone','💏',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone4', '💏🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone4', '💏🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💏🏿','1F48F-1F3FF','kiss: dark skin tone','💏',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone5', '💏🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone5', '💏🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍❤️‍💋‍🧑🏼','1F9D1-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FC','kiss: person, person, light skin tone, medium-light skin tone','💏',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone1-2', '🧑🏻‍❤️‍💋‍🧑🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone1-2', '🧑🏻‍❤️‍💋‍🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍❤️‍💋‍🧑🏽','1F9D1-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FD','kiss: person, person, light skin tone, medium skin tone','💏',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone1-3', '🧑🏻‍❤️‍💋‍🧑🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone1-3', '🧑🏻‍❤️‍💋‍🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍❤️‍💋‍🧑🏾','1F9D1-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FE','kiss: person, person, light skin tone, medium-dark skin tone','💏',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone1-4', '🧑🏻‍❤️‍💋‍🧑🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone1-4', '🧑🏻‍❤️‍💋‍🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍❤️‍💋‍🧑🏿','1F9D1-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FF','kiss: person, person, light skin tone, dark skin tone','💏',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone1-5', '🧑🏻‍❤️‍💋‍🧑🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone1-5', '🧑🏻‍❤️‍💋‍🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍❤️‍💋‍🧑🏻','1F9D1-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FB','kiss: person, person, medium-light skin tone, light skin tone','💏',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone2-1', '🧑🏼‍❤️‍💋‍🧑🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone2-1', '🧑🏼‍❤️‍💋‍🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍❤️‍💋‍🧑🏽','1F9D1-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FD','kiss: person, person, medium-light skin tone, medium skin tone','💏',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone2-3', '🧑🏼‍❤️‍💋‍🧑🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone2-3', '🧑🏼‍❤️‍💋‍🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍❤️‍💋‍🧑🏾','1F9D1-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FE','kiss: person, person, medium-light skin tone, medium-dark skin tone','💏',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone2-4', '🧑🏼‍❤️‍💋‍🧑🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone2-4', '🧑🏼‍❤️‍💋‍🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍❤️‍💋‍🧑🏿','1F9D1-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FF','kiss: person, person, medium-light skin tone, dark skin tone','💏',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone2-5', '🧑🏼‍❤️‍💋‍🧑🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone2-5', '🧑🏼‍❤️‍💋‍🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍❤️‍💋‍🧑🏻','1F9D1-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FB','kiss: person, person, medium skin tone, light skin tone','💏',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone3-1', '🧑🏽‍❤️‍💋‍🧑🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone3-1', '🧑🏽‍❤️‍💋‍🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍❤️‍💋‍🧑🏼','1F9D1-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FC','kiss: person, person, medium skin tone, medium-light skin tone','💏',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone3-2', '🧑🏽‍❤️‍💋‍🧑🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone3-2', '🧑🏽‍❤️‍💋‍🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍❤️‍💋‍🧑🏾','1F9D1-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FE','kiss: person, person, medium skin tone, medium-dark skin tone','💏',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone3-4', '🧑🏽‍❤️‍💋‍🧑🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone3-4', '🧑🏽‍❤️‍💋‍🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍❤️‍💋‍🧑🏿','1F9D1-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FF','kiss: person, person, medium skin tone, dark skin tone','💏',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone3-5', '🧑🏽‍❤️‍💋‍🧑🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone3-5', '🧑🏽‍❤️‍💋‍🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍❤️‍💋‍🧑🏻','1F9D1-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FB','kiss: person, person, medium-dark skin tone, light skin tone','💏',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone4-1', '🧑🏾‍❤️‍💋‍🧑🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone4-1', '🧑🏾‍❤️‍💋‍🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍❤️‍💋‍🧑🏼','1F9D1-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FC','kiss: person, person, medium-dark skin tone, medium-light skin tone','💏',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone4-2', '🧑🏾‍❤️‍💋‍🧑🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone4-2', '🧑🏾‍❤️‍💋‍🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍❤️‍💋‍🧑🏽','1F9D1-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FD','kiss: person, person, medium-dark skin tone, medium skin tone','💏',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone4-3', '🧑🏾‍❤️‍💋‍🧑🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone4-3', '🧑🏾‍❤️‍💋‍🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍❤️‍💋‍🧑🏿','1F9D1-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FF','kiss: person, person, medium-dark skin tone, dark skin tone','💏',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone4-5', '🧑🏾‍❤️‍💋‍🧑🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone4-5', '🧑🏾‍❤️‍💋‍🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍❤️‍💋‍🧑🏻','1F9D1-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FB','kiss: person, person, dark skin tone, light skin tone','💏',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone5-1', '🧑🏿‍❤️‍💋‍🧑🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone5-1', '🧑🏿‍❤️‍💋‍🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍❤️‍💋‍🧑🏼','1F9D1-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FC','kiss: person, person, dark skin tone, medium-light skin tone','💏',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone5-2', '🧑🏿‍❤️‍💋‍🧑🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone5-2', '🧑🏿‍❤️‍💋‍🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍❤️‍💋‍🧑🏽','1F9D1-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FD','kiss: person, person, dark skin tone, medium skin tone','💏',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone5-3', '🧑🏿‍❤️‍💋‍🧑🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone5-3', '🧑🏿‍❤️‍💋‍🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍❤️‍💋‍🧑🏾','1F9D1-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FE','kiss: person, person, dark skin tone, medium-dark skin tone','💏',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('couplekiss_tone5-4', '🧑🏿‍❤️‍💋‍🧑🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_kiss_tone5-4', '🧑🏿‍❤️‍💋‍🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍❤️‍💋‍👨','1F469-200D-2764-FE0F-200D-1F48B-200D-1F468','kiss: woman, man','👩‍❤️‍💋‍👨','{"man","woman","couple","kiss"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","woman","couple","kiss"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kiss_wm', '👩‍❤️‍💋‍👨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw', '👩‍❤️‍💋‍👨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍💋‍👨🏻','1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB','kiss: woman, man, light skin tone','👩‍❤️‍💋‍👨',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone1', '👩🏻‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone1', '👩🏻‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍💋‍👨🏼','1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC','kiss: woman, man, light skin tone, medium-light skin tone','👩‍❤️‍💋‍👨',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone1-2', '👩🏻‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone1-2', '👩🏻‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍💋‍👨🏽','1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD','kiss: woman, man, light skin tone, medium skin tone','👩‍❤️‍💋‍👨',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone1-3', '👩🏻‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone1-3', '👩🏻‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍💋‍👨🏾','1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE','kiss: woman, man, light skin tone, medium-dark skin tone','👩‍❤️‍💋‍👨',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone1-4', '👩🏻‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone1-4', '👩🏻‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍💋‍👨🏿','1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF','kiss: woman, man, light skin tone, dark skin tone','👩‍❤️‍💋‍👨',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone1-5', '👩🏻‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone1-5', '👩🏻‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍💋‍👨🏻','1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB','kiss: woman, man, medium-light skin tone, light skin tone','👩‍❤️‍💋‍👨',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone2-1', '👩🏼‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone2-1', '👩🏼‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍💋‍👨🏼','1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC','kiss: woman, man, medium-light skin tone','👩‍❤️‍💋‍👨',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone2', '👩🏼‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone2', '👩🏼‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍💋‍👨🏽','1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD','kiss: woman, man, medium-light skin tone, medium skin tone','👩‍❤️‍💋‍👨',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone2-3', '👩🏼‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone2-3', '👩🏼‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍💋‍👨🏾','1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE','kiss: woman, man, medium-light skin tone, medium-dark skin tone','👩‍❤️‍💋‍👨',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone2-4', '👩🏼‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone2-4', '👩🏼‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍💋‍👨🏿','1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF','kiss: woman, man, medium-light skin tone, dark skin tone','👩‍❤️‍💋‍👨',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone2-5', '👩🏼‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone2-5', '👩🏼‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍💋‍👨🏻','1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB','kiss: woman, man, medium skin tone, light skin tone','👩‍❤️‍💋‍👨',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone3-1', '👩🏽‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone3-1', '👩🏽‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍💋‍👨🏼','1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC','kiss: woman, man, medium skin tone, medium-light skin tone','👩‍❤️‍💋‍👨',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone3-2', '👩🏽‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone3-2', '👩🏽‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍💋‍👨🏽','1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD','kiss: woman, man, medium skin tone','👩‍❤️‍💋‍👨',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone3', '👩🏽‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone3', '👩🏽‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍💋‍👨🏾','1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE','kiss: woman, man, medium skin tone, medium-dark skin tone','👩‍❤️‍💋‍👨',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone3-4', '👩🏽‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone3-4', '👩🏽‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍💋‍👨🏿','1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF','kiss: woman, man, medium skin tone, dark skin tone','👩‍❤️‍💋‍👨',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone3-5', '👩🏽‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone3-5', '👩🏽‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍💋‍👨🏻','1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB','kiss: woman, man, medium-dark skin tone, light skin tone','👩‍❤️‍💋‍👨',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone4-1', '👩🏾‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone4-1', '👩🏾‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍💋‍👨🏼','1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC','kiss: woman, man, medium-dark skin tone, medium-light skin tone','👩‍❤️‍💋‍👨',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone4-2', '👩🏾‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone4-2', '👩🏾‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍💋‍👨🏽','1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD','kiss: woman, man, medium-dark skin tone, medium skin tone','👩‍❤️‍💋‍👨',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone4-3', '👩🏾‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone4-3', '👩🏾‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍💋‍👨🏾','1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE','kiss: woman, man, medium-dark skin tone','👩‍❤️‍💋‍👨',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone4', '👩🏾‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone4', '👩🏾‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍💋‍👨🏿','1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF','kiss: woman, man, medium-dark skin tone, dark skin tone','👩‍❤️‍💋‍👨',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone4-5', '👩🏾‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone4-5', '👩🏾‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍💋‍👨🏻','1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB','kiss: woman, man, dark skin tone, light skin tone','👩‍❤️‍💋‍👨',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone5-1', '👩🏿‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone5-1', '👩🏿‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍💋‍👨🏼','1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC','kiss: woman, man, dark skin tone, medium-light skin tone','👩‍❤️‍💋‍👨',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone5-2', '👩🏿‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone5-2', '👩🏿‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍💋‍👨🏽','1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD','kiss: woman, man, dark skin tone, medium skin tone','👩‍❤️‍💋‍👨',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone5-3', '👩🏿‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone5-3', '👩🏿‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍💋‍👨🏾','1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE','kiss: woman, man, dark skin tone, medium-dark skin tone','👩‍❤️‍💋‍👨',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone5-4', '👩🏿‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone5-4', '👩🏿‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍💋‍👨🏿','1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF','kiss: woman, man, dark skin tone','👩‍❤️‍💋‍👨',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_wm_tone5', '👩🏿‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiss_mw_tone5', '👩🏿‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍❤️‍💋‍👨','1F468-200D-2764-FE0F-200D-1F48B-200D-1F468','kiss: man, man','👨‍❤️‍💋‍👨','{"man","gay","couple","kiss"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","gay","couple","kiss"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kiss_mm', '👨‍❤️‍💋‍👨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍❤️‍💋‍👨🏻','1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB','kiss: man, man, light skin tone','👨‍❤️‍💋‍👨',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone1', '👨🏻‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍❤️‍💋‍👨🏼','1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC','kiss: man, man, light skin tone, medium-light skin tone','👨‍❤️‍💋‍👨',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone1-2', '👨🏻‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍❤️‍💋‍👨🏽','1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD','kiss: man, man, light skin tone, medium skin tone','👨‍❤️‍💋‍👨',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone1-3', '👨🏻‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍❤️‍💋‍👨🏾','1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE','kiss: man, man, light skin tone, medium-dark skin tone','👨‍❤️‍💋‍👨',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone1-4', '👨🏻‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍❤️‍💋‍👨🏿','1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF','kiss: man, man, light skin tone, dark skin tone','👨‍❤️‍💋‍👨',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone1-5', '👨🏻‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍❤️‍💋‍👨🏻','1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB','kiss: man, man, medium-light skin tone, light skin tone','👨‍❤️‍💋‍👨',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone2-1', '👨🏼‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍❤️‍💋‍👨🏼','1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC','kiss: man, man, medium-light skin tone','👨‍❤️‍💋‍👨',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone2', '👨🏼‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍❤️‍💋‍👨🏽','1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD','kiss: man, man, medium-light skin tone, medium skin tone','👨‍❤️‍💋‍👨',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone2-3', '👨🏼‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍❤️‍💋‍👨🏾','1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE','kiss: man, man, medium-light skin tone, medium-dark skin tone','👨‍❤️‍💋‍👨',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone2-4', '👨🏼‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍❤️‍💋‍👨🏿','1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF','kiss: man, man, medium-light skin tone, dark skin tone','👨‍❤️‍💋‍👨',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone2-5', '👨🏼‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍❤️‍💋‍👨🏻','1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB','kiss: man, man, medium skin tone, light skin tone','👨‍❤️‍💋‍👨',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone3-1', '👨🏽‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍❤️‍💋‍👨🏼','1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC','kiss: man, man, medium skin tone, medium-light skin tone','👨‍❤️‍💋‍👨',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone3-2', '👨🏽‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍❤️‍💋‍👨🏽','1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD','kiss: man, man, medium skin tone','👨‍❤️‍💋‍👨',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone3', '👨🏽‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍❤️‍💋‍👨🏾','1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE','kiss: man, man, medium skin tone, medium-dark skin tone','👨‍❤️‍💋‍👨',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone3-4', '👨🏽‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍❤️‍💋‍👨🏿','1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF','kiss: man, man, medium skin tone, dark skin tone','👨‍❤️‍💋‍👨',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone3-5', '👨🏽‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍❤️‍💋‍👨🏻','1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB','kiss: man, man, medium-dark skin tone, light skin tone','👨‍❤️‍💋‍👨',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone4-1', '👨🏾‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍❤️‍💋‍👨🏼','1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC','kiss: man, man, medium-dark skin tone, medium-light skin tone','👨‍❤️‍💋‍👨',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone4-2', '👨🏾‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍❤️‍💋‍👨🏽','1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD','kiss: man, man, medium-dark skin tone, medium skin tone','👨‍❤️‍💋‍👨',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone4-3', '👨🏾‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍❤️‍💋‍👨🏾','1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE','kiss: man, man, medium-dark skin tone','👨‍❤️‍💋‍👨',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone4', '👨🏾‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍❤️‍💋‍👨🏿','1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF','kiss: man, man, medium-dark skin tone, dark skin tone','👨‍❤️‍💋‍👨',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone4-5', '👨🏾‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍❤️‍💋‍👨🏻','1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB','kiss: man, man, dark skin tone, light skin tone','👨‍❤️‍💋‍👨',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone5-1', '👨🏿‍❤️‍💋‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍❤️‍💋‍👨🏼','1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC','kiss: man, man, dark skin tone, medium-light skin tone','👨‍❤️‍💋‍👨',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone5-2', '👨🏿‍❤️‍💋‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍❤️‍💋‍👨🏽','1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD','kiss: man, man, dark skin tone, medium skin tone','👨‍❤️‍💋‍👨',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone5-3', '👨🏿‍❤️‍💋‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍❤️‍💋‍👨🏾','1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE','kiss: man, man, dark skin tone, medium-dark skin tone','👨‍❤️‍💋‍👨',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone5-4', '👨🏿‍❤️‍💋‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍❤️‍💋‍👨🏿','1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF','kiss: man, man, dark skin tone','👨‍❤️‍💋‍👨',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_mm_tone5', '👨🏿‍❤️‍💋‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍❤️‍💋‍👩','1F469-200D-2764-FE0F-200D-1F48B-200D-1F469','kiss: woman, woman','👩‍❤️‍💋‍👩','{"woman","kiss","couple","girlfriend","lesbian"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","kiss","couple","girlfriend","lesbian"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kiss_ww', '👩‍❤️‍💋‍👩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍💋‍👩🏻','1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB','kiss: woman, woman, light skin tone','👩‍❤️‍💋‍👩',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone1', '👩🏻‍❤️‍💋‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍💋‍👩🏼','1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC','kiss: woman, woman, light skin tone, medium-light skin tone','👩‍❤️‍💋‍👩',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone1-2', '👩🏻‍❤️‍💋‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍💋‍👩🏽','1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD','kiss: woman, woman, light skin tone, medium skin tone','👩‍❤️‍💋‍👩',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone1-3', '👩🏻‍❤️‍💋‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍💋‍👩🏾','1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE','kiss: woman, woman, light skin tone, medium-dark skin tone','👩‍❤️‍💋‍👩',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone1-4', '👩🏻‍❤️‍💋‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍💋‍👩🏿','1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF','kiss: woman, woman, light skin tone, dark skin tone','👩‍❤️‍💋‍👩',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone1-5', '👩🏻‍❤️‍💋‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍💋‍👩🏻','1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB','kiss: woman, woman, medium-light skin tone, light skin tone','👩‍❤️‍💋‍👩',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone2-1', '👩🏼‍❤️‍💋‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍💋‍👩🏼','1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC','kiss: woman, woman, medium-light skin tone','👩‍❤️‍💋‍👩',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone2', '👩🏼‍❤️‍💋‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍💋‍👩🏽','1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD','kiss: woman, woman, medium-light skin tone, medium skin tone','👩‍❤️‍💋‍👩',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone2-3', '👩🏼‍❤️‍💋‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍💋‍👩🏾','1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE','kiss: woman, woman, medium-light skin tone, medium-dark skin tone','👩‍❤️‍💋‍👩',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone2-4', '👩🏼‍❤️‍💋‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍💋‍👩🏿','1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF','kiss: woman, woman, medium-light skin tone, dark skin tone','👩‍❤️‍💋‍👩',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone2-5', '👩🏼‍❤️‍💋‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍💋‍👩🏻','1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB','kiss: woman, woman, medium skin tone, light skin tone','👩‍❤️‍💋‍👩',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone3-1', '👩🏽‍❤️‍💋‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍💋‍👩🏼','1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC','kiss: woman, woman, medium skin tone, medium-light skin tone','👩‍❤️‍💋‍👩',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone3-2', '👩🏽‍❤️‍💋‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍💋‍👩🏽','1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD','kiss: woman, woman, medium skin tone','👩‍❤️‍💋‍👩',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone3', '👩🏽‍❤️‍💋‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍💋‍👩🏾','1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE','kiss: woman, woman, medium skin tone, medium-dark skin tone','👩‍❤️‍💋‍👩',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone3-4', '👩🏽‍❤️‍💋‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍💋‍👩🏿','1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF','kiss: woman, woman, medium skin tone, dark skin tone','👩‍❤️‍💋‍👩',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone3-5', '👩🏽‍❤️‍💋‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍💋‍👩🏻','1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB','kiss: woman, woman, medium-dark skin tone, light skin tone','👩‍❤️‍💋‍👩',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone4-1', '👩🏾‍❤️‍💋‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍💋‍👩🏼','1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC','kiss: woman, woman, medium-dark skin tone, medium-light skin tone','👩‍❤️‍💋‍👩',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone4-2', '👩🏾‍❤️‍💋‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍💋‍👩🏽','1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD','kiss: woman, woman, medium-dark skin tone, medium skin tone','👩‍❤️‍💋‍👩',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone4-3', '👩🏾‍❤️‍💋‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍💋‍👩🏾','1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE','kiss: woman, woman, medium-dark skin tone','👩‍❤️‍💋‍👩',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone4', '👩🏾‍❤️‍💋‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍💋‍👩🏿','1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF','kiss: woman, woman, medium-dark skin tone, dark skin tone','👩‍❤️‍💋‍👩',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone4-5', '👩🏾‍❤️‍💋‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍💋‍👩🏻','1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB','kiss: woman, woman, dark skin tone, light skin tone','👩‍❤️‍💋‍👩',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone5-1', '👩🏿‍❤️‍💋‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍💋‍👩🏼','1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC','kiss: woman, woman, dark skin tone, medium-light skin tone','👩‍❤️‍💋‍👩',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone5-2', '👩🏿‍❤️‍💋‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍💋‍👩🏽','1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD','kiss: woman, woman, dark skin tone, medium skin tone','👩‍❤️‍💋‍👩',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone5-3', '👩🏿‍❤️‍💋‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍💋‍👩🏾','1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE','kiss: woman, woman, dark skin tone, medium-dark skin tone','👩‍❤️‍💋‍👩',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone5-4', '👩🏿‍❤️‍💋‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍💋‍👩🏿','1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF','kiss: woman, woman, dark skin tone','👩‍❤️‍💋‍👩',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('kiss_ww_tone5', '👩🏿‍❤️‍💋‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💑','1F491','couple with heart','💑','{"woman","love","couple","heart","man"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","love","couple","heart","man"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart', '💑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💑🏻','1F491-1F3FB','couple with heart: light skin tone','💑',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone1', '💑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💑🏼','1F491-1F3FC','couple with heart: medium-light skin tone','💑',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone2', '💑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💑🏽','1F491-1F3FD','couple with heart: medium skin tone','💑',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone3', '💑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💑🏾','1F491-1F3FE','couple with heart: medium-dark skin tone','💑',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone4', '💑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💑🏿','1F491-1F3FF','couple with heart: dark skin tone','💑',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone5', '💑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍❤️‍🧑🏼','1F9D1-1F3FB-200D-2764-FE0F-200D-1F9D1-1F3FC','couple with heart: person, person, light skin tone, medium-light skin tone','💑',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone1-2', '🧑🏻‍❤️‍🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍❤️‍🧑🏽','1F9D1-1F3FB-200D-2764-FE0F-200D-1F9D1-1F3FD','couple with heart: person, person, light skin tone, medium skin tone','💑',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone1-3', '🧑🏻‍❤️‍🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍❤️‍🧑🏾','1F9D1-1F3FB-200D-2764-FE0F-200D-1F9D1-1F3FE','couple with heart: person, person, light skin tone, medium-dark skin tone','💑',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone1-4', '🧑🏻‍❤️‍🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏻‍❤️‍🧑🏿','1F9D1-1F3FB-200D-2764-FE0F-200D-1F9D1-1F3FF','couple with heart: person, person, light skin tone, dark skin tone','💑',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone1-5', '🧑🏻‍❤️‍🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍❤️‍🧑🏻','1F9D1-1F3FC-200D-2764-FE0F-200D-1F9D1-1F3FB','couple with heart: person, person, medium-light skin tone, light skin tone','💑',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone2-1', '🧑🏼‍❤️‍🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍❤️‍🧑🏽','1F9D1-1F3FC-200D-2764-FE0F-200D-1F9D1-1F3FD','couple with heart: person, person, medium-light skin tone, medium skin tone','💑',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone2-3', '🧑🏼‍❤️‍🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍❤️‍🧑🏾','1F9D1-1F3FC-200D-2764-FE0F-200D-1F9D1-1F3FE','couple with heart: person, person, medium-light skin tone, medium-dark skin tone','💑',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone2-4', '🧑🏼‍❤️‍🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏼‍❤️‍🧑🏿','1F9D1-1F3FC-200D-2764-FE0F-200D-1F9D1-1F3FF','couple with heart: person, person, medium-light skin tone, dark skin tone','💑',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone2-5', '🧑🏼‍❤️‍🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍❤️‍🧑🏻','1F9D1-1F3FD-200D-2764-FE0F-200D-1F9D1-1F3FB','couple with heart: person, person, medium skin tone, light skin tone','💑',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone3-1', '🧑🏽‍❤️‍🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍❤️‍🧑🏼','1F9D1-1F3FD-200D-2764-FE0F-200D-1F9D1-1F3FC','couple with heart: person, person, medium skin tone, medium-light skin tone','💑',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone3-2', '🧑🏽‍❤️‍🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍❤️‍🧑🏾','1F9D1-1F3FD-200D-2764-FE0F-200D-1F9D1-1F3FE','couple with heart: person, person, medium skin tone, medium-dark skin tone','💑',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone3-4', '🧑🏽‍❤️‍🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏽‍❤️‍🧑🏿','1F9D1-1F3FD-200D-2764-FE0F-200D-1F9D1-1F3FF','couple with heart: person, person, medium skin tone, dark skin tone','💑',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone3-5', '🧑🏽‍❤️‍🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍❤️‍🧑🏻','1F9D1-1F3FE-200D-2764-FE0F-200D-1F9D1-1F3FB','couple with heart: person, person, medium-dark skin tone, light skin tone','💑',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone4-1', '🧑🏾‍❤️‍🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍❤️‍🧑🏼','1F9D1-1F3FE-200D-2764-FE0F-200D-1F9D1-1F3FC','couple with heart: person, person, medium-dark skin tone, medium-light skin tone','💑',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone4-2', '🧑🏾‍❤️‍🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍❤️‍🧑🏽','1F9D1-1F3FE-200D-2764-FE0F-200D-1F9D1-1F3FD','couple with heart: person, person, medium-dark skin tone, medium skin tone','💑',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone4-3', '🧑🏾‍❤️‍🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏾‍❤️‍🧑🏿','1F9D1-1F3FE-200D-2764-FE0F-200D-1F9D1-1F3FF','couple with heart: person, person, medium-dark skin tone, dark skin tone','💑',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone4-5', '🧑🏾‍❤️‍🧑🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍❤️‍🧑🏻','1F9D1-1F3FF-200D-2764-FE0F-200D-1F9D1-1F3FB','couple with heart: person, person, dark skin tone, light skin tone','💑',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone5-1', '🧑🏿‍❤️‍🧑🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍❤️‍🧑🏼','1F9D1-1F3FF-200D-2764-FE0F-200D-1F9D1-1F3FC','couple with heart: person, person, dark skin tone, medium-light skin tone','💑',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone5-2', '🧑🏿‍❤️‍🧑🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍❤️‍🧑🏽','1F9D1-1F3FF-200D-2764-FE0F-200D-1F9D1-1F3FD','couple with heart: person, person, dark skin tone, medium skin tone','💑',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone5-3', '🧑🏿‍❤️‍🧑🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑🏿‍❤️‍🧑🏾','1F9D1-1F3FF-200D-2764-FE0F-200D-1F9D1-1F3FE','couple with heart: person, person, dark skin tone, medium-dark skin tone','💑',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_tone5-4', '🧑🏿‍❤️‍🧑🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍❤️‍👨','1F469-200D-2764-FE0F-200D-1F468','couple with heart: woman, man','👩‍❤️‍👨','{"couple with heart","woman","love","couple","man"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"couple with heart","woman","love","couple","man"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm', '👩‍❤️‍👨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw', '👩‍❤️‍👨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍👨🏻','1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FB','couple with heart: woman, man, light skin tone','👩‍❤️‍👨',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone1', '👩🏻‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone1', '👩🏻‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍👨🏼','1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FC','couple with heart: woman, man, light skin tone, medium-light skin tone','👩‍❤️‍👨',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone1-2', '👩🏻‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone1-2', '👩🏻‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍👨🏽','1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FD','couple with heart: woman, man, light skin tone, medium skin tone','👩‍❤️‍👨',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone1-3', '👩🏻‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone1-3', '👩🏻‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍👨🏾','1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FE','couple with heart: woman, man, light skin tone, medium-dark skin tone','👩‍❤️‍👨',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone1-4', '👩🏻‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone1-4', '👩🏻‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍👨🏿','1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FF','couple with heart: woman, man, light skin tone, dark skin tone','👩‍❤️‍👨',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone1-5', '👩🏻‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone1-5', '👩🏻‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍👨🏻','1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FB','couple with heart: woman, man, medium-light skin tone, light skin tone','👩‍❤️‍👨',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone2-1', '👩🏼‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone2-1', '👩🏼‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍👨🏼','1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FC','couple with heart: woman, man, medium-light skin tone','👩‍❤️‍👨',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone2', '👩🏼‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone2', '👩🏼‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍👨🏽','1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FD','couple with heart: woman, man, medium-light skin tone, medium skin tone','👩‍❤️‍👨',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone2-3', '👩🏼‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone2-3', '👩🏼‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍👨🏾','1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FE','couple with heart: woman, man, medium-light skin tone, medium-dark skin tone','👩‍❤️‍👨',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone2-4', '👩🏼‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone2-4', '👩🏼‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍👨🏿','1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FF','couple with heart: woman, man, medium-light skin tone, dark skin tone','👩‍❤️‍👨',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone2-5', '👩🏼‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone2-5', '👩🏼‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍👨🏻','1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FB','couple with heart: woman, man, medium skin tone, light skin tone','👩‍❤️‍👨',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone3-1', '👩🏽‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone3-1', '👩🏽‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍👨🏼','1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FC','couple with heart: woman, man, medium skin tone, medium-light skin tone','👩‍❤️‍👨',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone3-2', '👩🏽‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone3-2', '👩🏽‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍👨🏽','1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FD','couple with heart: woman, man, medium skin tone','👩‍❤️‍👨',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone3', '👩🏽‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone3', '👩🏽‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍👨🏾','1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FE','couple with heart: woman, man, medium skin tone, medium-dark skin tone','👩‍❤️‍👨',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone3-4', '👩🏽‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone3-4', '👩🏽‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍👨🏿','1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FF','couple with heart: woman, man, medium skin tone, dark skin tone','👩‍❤️‍👨',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone3-5', '👩🏽‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone3-5', '👩🏽‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍👨🏻','1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FB','couple with heart: woman, man, medium-dark skin tone, light skin tone','👩‍❤️‍👨',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone4-1', '👩🏾‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone4-1', '👩🏾‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍👨🏼','1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FC','couple with heart: woman, man, medium-dark skin tone, medium-light skin tone','👩‍❤️‍👨',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone4-2', '👩🏾‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone4-2', '👩🏾‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍👨🏽','1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FD','couple with heart: woman, man, medium-dark skin tone, medium skin tone','👩‍❤️‍👨',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone4-3', '👩🏾‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone4-3', '👩🏾‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍👨🏾','1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FE','couple with heart: woman, man, medium-dark skin tone','👩‍❤️‍👨',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone4', '👩🏾‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone4', '👩🏾‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍👨🏿','1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FF','couple with heart: woman, man, medium-dark skin tone, dark skin tone','👩‍❤️‍👨',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone4-5', '👩🏾‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone4-5', '👩🏾‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍👨🏻','1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FB','couple with heart: woman, man, dark skin tone, light skin tone','👩‍❤️‍👨',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone5-1', '👩🏿‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone5-1', '👩🏿‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍👨🏼','1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FC','couple with heart: woman, man, dark skin tone, medium-light skin tone','👩‍❤️‍👨',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone5-2', '👩🏿‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone5-2', '👩🏿‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍👨🏽','1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FD','couple with heart: woman, man, dark skin tone, medium skin tone','👩‍❤️‍👨',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone5-3', '👩🏿‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone5-3', '👩🏿‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍👨🏾','1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FE','couple with heart: woman, man, dark skin tone, medium-dark skin tone','👩‍❤️‍👨',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone5-4', '👩🏿‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone5-4', '👩🏿‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍👨🏿','1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FF','couple with heart: woman, man, dark skin tone','👩‍❤️‍👨',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mw_tone5', '👩🏿‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_wm_tone5', '👩🏿‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍❤️‍👨','1F468-200D-2764-FE0F-200D-1F468','couple with heart: man, man','👨‍❤️‍👨','{"couple with heart","love","couple","man","gay"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"couple with heart","love","couple","man","gay"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm', '👨‍❤️‍👨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍❤️‍👨🏻','1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FB','couple with heart: man, man, light skin tone','👨‍❤️‍👨',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone1', '👨🏻‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍❤️‍👨🏼','1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FC','couple with heart: man, man, light skin tone, medium-light skin tone','👨‍❤️‍👨',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone1-2', '👨🏻‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍❤️‍👨🏽','1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FD','couple with heart: man, man, light skin tone, medium skin tone','👨‍❤️‍👨',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone1-3', '👨🏻‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍❤️‍👨🏾','1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FE','couple with heart: man, man, light skin tone, medium-dark skin tone','👨‍❤️‍👨',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone1-4', '👨🏻‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏻‍❤️‍👨🏿','1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FF','couple with heart: man, man, light skin tone, dark skin tone','👨‍❤️‍👨',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone1-5', '👨🏻‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍❤️‍👨🏻','1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FB','couple with heart: man, man, medium-light skin tone, light skin tone','👨‍❤️‍👨',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone2-1', '👨🏼‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍❤️‍👨🏼','1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FC','couple with heart: man, man, medium-light skin tone','👨‍❤️‍👨',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone2', '👨🏼‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍❤️‍👨🏽','1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FD','couple with heart: man, man, medium-light skin tone, medium skin tone','👨‍❤️‍👨',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone2-3', '👨🏼‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍❤️‍👨🏾','1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FE','couple with heart: man, man, medium-light skin tone, medium-dark skin tone','👨‍❤️‍👨',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone2-4', '👨🏼‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏼‍❤️‍👨🏿','1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FF','couple with heart: man, man, medium-light skin tone, dark skin tone','👨‍❤️‍👨',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone2-5', '👨🏼‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍❤️‍👨🏻','1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FB','couple with heart: man, man, medium skin tone, light skin tone','👨‍❤️‍👨',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone3-1', '👨🏽‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍❤️‍👨🏼','1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FC','couple with heart: man, man, medium skin tone, medium-light skin tone','👨‍❤️‍👨',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone3-2', '👨🏽‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍❤️‍👨🏽','1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FD','couple with heart: man, man, medium skin tone','👨‍❤️‍👨',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone3', '👨🏽‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍❤️‍👨🏾','1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FE','couple with heart: man, man, medium skin tone, medium-dark skin tone','👨‍❤️‍👨',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone3-4', '👨🏽‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏽‍❤️‍👨🏿','1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FF','couple with heart: man, man, medium skin tone, dark skin tone','👨‍❤️‍👨',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone3-5', '👨🏽‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍❤️‍👨🏻','1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FB','couple with heart: man, man, medium-dark skin tone, light skin tone','👨‍❤️‍👨',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone4-1', '👨🏾‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍❤️‍👨🏼','1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FC','couple with heart: man, man, medium-dark skin tone, medium-light skin tone','👨‍❤️‍👨',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone4-2', '👨🏾‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍❤️‍👨🏽','1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FD','couple with heart: man, man, medium-dark skin tone, medium skin tone','👨‍❤️‍👨',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone4-3', '👨🏾‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍❤️‍👨🏾','1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FE','couple with heart: man, man, medium-dark skin tone','👨‍❤️‍👨',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone4', '👨🏾‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏾‍❤️‍👨🏿','1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FF','couple with heart: man, man, medium-dark skin tone, dark skin tone','👨‍❤️‍👨',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone4-5', '👨🏾‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍❤️‍👨🏻','1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FB','couple with heart: man, man, dark skin tone, light skin tone','👨‍❤️‍👨',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone5-1', '👨🏿‍❤️‍👨🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍❤️‍👨🏼','1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FC','couple with heart: man, man, dark skin tone, medium-light skin tone','👨‍❤️‍👨',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone5-2', '👨🏿‍❤️‍👨🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍❤️‍👨🏽','1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FD','couple with heart: man, man, dark skin tone, medium skin tone','👨‍❤️‍👨',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone5-3', '👨🏿‍❤️‍👨🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍❤️‍👨🏾','1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FE','couple with heart: man, man, dark skin tone, medium-dark skin tone','👨‍❤️‍👨',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone5-4', '👨🏿‍❤️‍👨🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨🏿‍❤️‍👨🏿','1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FF','couple with heart: man, man, dark skin tone','👨‍❤️‍👨',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_mm_tone5', '👨🏿‍❤️‍👨🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍❤️‍👩','1F469-200D-2764-FE0F-200D-1F469','couple with heart: woman, woman','👩‍❤️‍👩','{"couple with heart","woman","love","couple","girlfried","lesbian"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"couple with heart","woman","love","couple","girlfried","lesbian"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww', '👩‍❤️‍👩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍👩🏻','1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FB','couple with heart: woman, woman, light skin tone','👩‍❤️‍👩',default,'{1}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone1', '👩🏻‍❤️‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍👩🏼','1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FC','couple with heart: woman, woman, light skin tone, medium-light skin tone','👩‍❤️‍👩',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone1-2', '👩🏻‍❤️‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍👩🏽','1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FD','couple with heart: woman, woman, light skin tone, medium skin tone','👩‍❤️‍👩',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone1-3', '👩🏻‍❤️‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍👩🏾','1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FE','couple with heart: woman, woman, light skin tone, medium-dark skin tone','👩‍❤️‍👩',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone1-4', '👩🏻‍❤️‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏻‍❤️‍👩🏿','1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FF','couple with heart: woman, woman, light skin tone, dark skin tone','👩‍❤️‍👩',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone1-5', '👩🏻‍❤️‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍👩🏻','1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FB','couple with heart: woman, woman, medium-light skin tone, light skin tone','👩‍❤️‍👩',default,'{1,2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,2}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone2-1', '👩🏼‍❤️‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍👩🏼','1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FC','couple with heart: woman, woman, medium-light skin tone','👩‍❤️‍👩',default,'{2}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone2', '👩🏼‍❤️‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍👩🏽','1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FD','couple with heart: woman, woman, medium-light skin tone, medium skin tone','👩‍❤️‍👩',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone2-3', '👩🏼‍❤️‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍👩🏾','1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FE','couple with heart: woman, woman, medium-light skin tone, medium-dark skin tone','👩‍❤️‍👩',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone2-4', '👩🏼‍❤️‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏼‍❤️‍👩🏿','1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FF','couple with heart: woman, woman, medium-light skin tone, dark skin tone','👩‍❤️‍👩',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone2-5', '👩🏼‍❤️‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍👩🏻','1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FB','couple with heart: woman, woman, medium skin tone, light skin tone','👩‍❤️‍👩',default,'{1,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone3-1', '👩🏽‍❤️‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍👩🏼','1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FC','couple with heart: woman, woman, medium skin tone, medium-light skin tone','👩‍❤️‍👩',default,'{2,3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone3-2', '👩🏽‍❤️‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍👩🏽','1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FD','couple with heart: woman, woman, medium skin tone','👩‍❤️‍👩',default,'{3}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone3', '👩🏽‍❤️‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍👩🏾','1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FE','couple with heart: woman, woman, medium skin tone, medium-dark skin tone','👩‍❤️‍👩',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone3-4', '👩🏽‍❤️‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏽‍❤️‍👩🏿','1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FF','couple with heart: woman, woman, medium skin tone, dark skin tone','👩‍❤️‍👩',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone3-5', '👩🏽‍❤️‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍👩🏻','1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FB','couple with heart: woman, woman, medium-dark skin tone, light skin tone','👩‍❤️‍👩',default,'{1,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone4-1', '👩🏾‍❤️‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍👩🏼','1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FC','couple with heart: woman, woman, medium-dark skin tone, medium-light skin tone','👩‍❤️‍👩',default,'{2,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone4-2', '👩🏾‍❤️‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍👩🏽','1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FD','couple with heart: woman, woman, medium-dark skin tone, medium skin tone','👩‍❤️‍👩',default,'{3,4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone4-3', '👩🏾‍❤️‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍👩🏾','1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FE','couple with heart: woman, woman, medium-dark skin tone','👩‍❤️‍👩',default,'{4}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone4', '👩🏾‍❤️‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏾‍❤️‍👩🏿','1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FF','couple with heart: woman, woman, medium-dark skin tone, dark skin tone','👩‍❤️‍👩',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone4-5', '👩🏾‍❤️‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍👩🏻','1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FB','couple with heart: woman, woman, dark skin tone, light skin tone','👩‍❤️‍👩',default,'{1,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{1,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone5-1', '👩🏿‍❤️‍👩🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍👩🏼','1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FC','couple with heart: woman, woman, dark skin tone, medium-light skin tone','👩‍❤️‍👩',default,'{2,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{2,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone5-2', '👩🏿‍❤️‍👩🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍👩🏽','1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FD','couple with heart: woman, woman, dark skin tone, medium skin tone','👩‍❤️‍👩',default,'{3,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{3,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone5-3', '👩🏿‍❤️‍👩🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍👩🏾','1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FE','couple with heart: woman, woman, dark skin tone, medium-dark skin tone','👩‍❤️‍👩',default,'{4,5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{4,5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone5-4', '👩🏿‍❤️‍👩🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩🏿‍❤️‍👩🏿','1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FF','couple with heart: woman, woman, dark skin tone','👩‍❤️‍👩',default,'{5}') on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones || '{5}';
insert into emoji.shortcodes (code, emoji) values ('couple_with_heart_ww_tone5', '👩🏿‍❤️‍👩🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👪️','1F46A','family',default,'{"boy","child","woman","man","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"boy","child","woman","man","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family', '👪️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👩‍👦','1F468-200D-1F469-200D-1F466','family: man, woman, boy',default,'{"man","boy","woman","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","boy","woman","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mwb', '👨‍👩‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👩‍👧','1F468-200D-1F469-200D-1F467','family: man, woman, girl',default,'{"child","woman","girl","man","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"child","woman","girl","man","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mwg', '👨‍👩‍👧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👩‍👧‍👦','1F468-200D-1F469-200D-1F467-200D-1F466','family: man, woman, girl, boy',default,'{"boy","woman","girl","man","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"boy","woman","girl","man","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mwgb', '👨‍👩‍👧‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👩‍👦‍👦','1F468-200D-1F469-200D-1F466-200D-1F466','family: man, woman, boy, boy',default,'{"man","boy","woman","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","boy","woman","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mwbb', '👨‍👩‍👦‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👩‍👧‍👧','1F468-200D-1F469-200D-1F467-200D-1F467','family: man, woman, girl, girl',default,'{"man","girl","woman","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","girl","woman","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mwgg', '👨‍👩‍👧‍👧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👨‍👦','1F468-200D-1F468-200D-1F466','family: man, man, boy',default,'{"man","boy","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","boy","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mmb', '👨‍👨‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👨‍👧','1F468-200D-1F468-200D-1F467','family: man, man, girl',default,'{"man","girl","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","girl","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mmg', '👨‍👨‍👧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👨‍👧‍👦','1F468-200D-1F468-200D-1F467-200D-1F466','family: man, man, girl, boy',default,'{"man","boy","girl","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","boy","girl","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mmgb', '👨‍👨‍👧‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👨‍👦‍👦','1F468-200D-1F468-200D-1F466-200D-1F466','family: man, man, boy, boy',default,'{"man","boy","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","boy","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mmbb', '👨‍👨‍👦‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👨‍👧‍👧','1F468-200D-1F468-200D-1F467-200D-1F467','family: man, man, girl, girl',default,'{"man","girl","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","girl","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mmgg', '👨‍👨‍👧‍👧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍👩‍👦','1F469-200D-1F469-200D-1F466','family: woman, woman, boy',default,'{"boy","woman","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"boy","woman","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_wwb', '👩‍👩‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍👩‍👧','1F469-200D-1F469-200D-1F467','family: woman, woman, girl',default,'{"girl","woman","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"girl","woman","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_wwg', '👩‍👩‍👧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍👩‍👧‍👦','1F469-200D-1F469-200D-1F467-200D-1F466','family: woman, woman, girl, boy',default,'{"boy","girl","woman","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"boy","girl","woman","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_wwgb', '👩‍👩‍👧‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍👩‍👦‍👦','1F469-200D-1F469-200D-1F466-200D-1F466','family: woman, woman, boy, boy',default,'{"boy","woman","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"boy","woman","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_wwbb', '👩‍👩‍👦‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍👩‍👧‍👧','1F469-200D-1F469-200D-1F467-200D-1F467','family: woman, woman, girl, girl',default,'{"girl","woman","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"girl","woman","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_wwgg', '👩‍👩‍👧‍👧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👦','1F468-200D-1F466','family: man, boy',default,'{"man","boy","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","boy","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mb', '👨‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👦‍👦','1F468-200D-1F466-200D-1F466','family: man, boy, boy',default,'{"man","boy","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","boy","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mbb', '👨‍👦‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👧','1F468-200D-1F467','family: man, girl',default,'{"man","girl","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","girl","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mg', '👨‍👧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👧‍👦','1F468-200D-1F467-200D-1F466','family: man, girl, boy',default,'{"man","boy","girl","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","boy","girl","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mgb', '👨‍👧‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍👧‍👧','1F468-200D-1F467-200D-1F467','family: man, girl, girl',default,'{"man","girl","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","girl","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_mgg', '👨‍👧‍👧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍👦','1F469-200D-1F466','family: woman, boy',default,'{"boy","woman","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"boy","woman","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_wb', '👩‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍👦‍👦','1F469-200D-1F466-200D-1F466','family: woman, boy, boy',default,'{"boy","woman","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"boy","woman","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_wbb', '👩‍👦‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍👧','1F469-200D-1F467','family: woman, girl',default,'{"girl","woman","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"girl","woman","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_wg', '👩‍👧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍👧‍👦','1F469-200D-1F467-200D-1F466','family: woman, girl, boy',default,'{"boy","girl","woman","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"boy","girl","woman","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_wgb', '👩‍👧‍👦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍👧‍👧','1F469-200D-1F467-200D-1F467','family: woman, girl, girl',default,'{"girl","woman","family"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"girl","woman","family"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('family_wgg', '👩‍👧‍👧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗣️','1F5E3','speaking head',default,'{"speaking","person","face","speak","human","head","silhouette"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"speaking","person","face","speak","human","head","silhouette"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('speaking_head', '🗣️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👤','1F464','bust in silhouette',default,'{"bust","person","human","silhouette"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bust","person","human","silhouette"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bust_in_silhouette', '👤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👥','1F465','busts in silhouette',default,'{"bust","person","human","silhouette"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bust","person","human","silhouette"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('busts_in_silhouette', '👥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫂','1FAC2','people hugging',default,'{"hello","goodbye","making out","hug","thanks","love","harmony","humans","like","arms"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hello","goodbye","making out","hug","thanks","love","harmony","humans","like","arms"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('people_hugging', '🫂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👣','1F463','footprints',default,'{"clothing","print","footprint"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clothing","print","footprint"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('footprints', '👣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏻','1F3FB','light skin tone',default,'{"type 1–2","skin tone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"type 1–2","skin tone"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tone1', '🏻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('tone_light', '🏻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏼','1F3FC','medium-light skin tone',default,'{"skin tone","type 3"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"skin tone","type 3"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tone_medium_light', '🏼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('tone2', '🏼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏽','1F3FD','medium skin tone',default,'{"skin tone","type 4"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"skin tone","type 4"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tone_medium', '🏽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('tone3', '🏽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏾','1F3FE','medium-dark skin tone',default,'{"skin tone","type 5"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"skin tone","type 5"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tone4', '🏾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('tone_medium_dark', '🏾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏿','1F3FF','dark skin tone',default,'{"skin tone","type 6"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"skin tone","type 6"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tone5', '🏿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('tone_dark', '🏿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦰','1F9B0','red hair',default,'{"redhead","ginger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"redhead","ginger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('red_hair', '🦰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦱','1F9B1','curly hair',default,'{"curly","ringlets","afro"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"curly","ringlets","afro"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('curly_hair', '🦱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦳','1F9B3','white hair',default,'{"old","hair","gray","white"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"old","hair","gray","white"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_hair', '🦳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦲','1F9B2','bald',default,'{"chemotherapy","shaven","hairless","no hair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"chemotherapy","shaven","hairless","no hair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('no_hair', '🦲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐵','1F435','monkey face',default,'{"evolution","jungle","face","ape","primate","monkey","africa"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"evolution","jungle","face","ape","primate","monkey","africa"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('monkey_face', '🐵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐒','1F412','monkey',default,'{"evolution","jungle","ape","primate","monkey"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"evolution","jungle","ape","primate","monkey"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('monkey', '🐒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦍','1F98D','gorilla',default,'{"primate","monkey","gorilla","evolution"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"primate","monkey","gorilla","evolution"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('gorilla', '🦍') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦧','1F9A7','orangutan',default,'{"ape"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ape"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('orangutan', '🦧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐶','1F436','dog face',default,'{"face","puppy","friend","dog","pet","doggy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","puppy","friend","dog","pet","doggy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dog_face', '🐶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐕️','1F415','dog',default,'{"puppy","doggy","pet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"puppy","doggy","pet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dog', '🐕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦮','1F9AE','guide dog',default,'{"accessibility","guide","blind"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility","guide","blind"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('guide_dog', '🦮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐕‍🦺','1F415-200D-1F9BA','service dog',default,'{"service","accessibility","assistance","dog"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"service","accessibility","assistance","dog"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('service_dog', '🐕‍🦺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐩','1F429','poodle',default,'{"dog"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dog"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('poodle', '🐩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐺','1F43A','wolf',default,'{"pack","face","wild","dog","free","forest"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pack","face","wild","dog","free","forest"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wolf', '🐺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('wolf_face', '🐺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦊','1F98A','fox',default,'{"face","smart","quick","red","intelligent"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","smart","quick","red","intelligent"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fox_face', '🦊') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('fox', '🦊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦝','1F99D','raccoon',default,'{"sly","curious"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sly","curious"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('raccoon', '🦝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐱','1F431','cat face',default,'{"cat","face","kitten","kitty","miau","pet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cat","face","kitten","kitty","miau","pet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cat_face', '🐱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐈️','1F408','cat',default,'{"kitten","kitty","pet","miau"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"kitten","kitty","pet","miau"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cat', '🐈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐈‍⬛','1F408-200D-2B1B','black cat',default,'{"bad luck","cat","unlucky","black"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bad luck","cat","unlucky","black"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('black_cat', '🐈‍⬛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦁','1F981','lion',default,'{"cat","simba","face","leo","royal","wild","king","zodiac"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cat","simba","face","leo","royal","wild","king","zodiac"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lion_face', '🦁') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('lion', '🦁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐯','1F42F','tiger face',default,'{"cat","face","wild","stripes","strong","tiger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cat","face","wild","stripes","strong","tiger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tiger_face', '🐯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐅','1F405','tiger',default,'{"cat","wild","stripes","strong","tiger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cat","wild","stripes","strong","tiger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tiger', '🐅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐆','1F406','leopard',default,'{"cat","wild","strong","spots","leopard","dots"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cat","wild","strong","spots","leopard","dots"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('leopard', '🐆') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐴','1F434','horse face',default,'{"horse","sport","face","riding"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"horse","sport","face","riding"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('horse_face', '🐴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫎','1FACE','moose',default,'{"elk","mammal","animal","antlers"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"elk","mammal","animal","antlers"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('moose', '🫎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫏','1FACF','donkey',default,'{"animal","mule","ass","stubborn","burro","mammal"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"animal","mule","ass","stubborn","burro","mammal"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('donkey', '🫏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐎','1F40E','horse',default,'{"equestrian","riding","sport","racehorse","racing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"equestrian","riding","sport","racehorse","racing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('horse', '🐎') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('racehorse', '🐎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦄','1F984','unicorn',default,'{"rainbow","face","gmünd","schwäbisch","magical","fabulous"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rainbow","face","gmünd","schwäbisch","magical","fabulous"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('unicorn', '🦄') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('unicorn_face', '🦄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦓','1F993','zebra',default,'{"white","horse","stripe","black"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"white","horse","stripe","black"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('zebra', '🦓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦌','1F98C','deer',default,'{"antler","hunt","forest","deer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"antler","hunt","forest","deer"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('deer', '🦌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦬','1F9AC','bison',default,'{"wisent","herd","buffalo"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wisent","herd","buffalo"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bison', '🦬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐮','1F42E','cow face',default,'{"cow","face","horns","cheese","beef","dairy","farm","milk","grass"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cow","face","horns","cheese","beef","dairy","farm","milk","grass"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cow_face', '🐮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐂','1F402','ox',default,'{"acre","horns","taurus","beef","strong","zodiac","bull","farm"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"acre","horns","taurus","beef","strong","zodiac","bull","farm"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ox', '🐂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐃','1F403','water buffalo',default,'{"horns","buffalo","beef","water","black"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"horns","buffalo","beef","water","black"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('water_buffalo', '🐃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐄','1F404','cow',default,'{"cow","horns","cheese","beef","dairy","farm","milk","grass"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cow","horns","cheese","beef","dairy","farm","milk","grass"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cow', '🐄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐷','1F437','pig face',default,'{"pig","face","oink","farm","meat","pork","pink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pig","face","oink","farm","meat","pork","pink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pig_face', '🐷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐖','1F416','pig',default,'{"oink","farm","meat","pork","sow","pink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"oink","farm","meat","pork","sow","pink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pig', '🐖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐗','1F417','boar',default,'{"pig","angry","wild","strong","tusk","teeth","forest"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pig","angry","wild","strong","tusk","teeth","forest"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('boar', '🐗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐽','1F43D','pig nose',default,'{"pig","socket","face","smell","nose"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pig","socket","face","smell","nose"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pig_nose', '🐽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐏','1F40F','ram',default,'{"male","horns","hooves","sheep","zodiac","wool","grass","aries"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"male","horns","hooves","sheep","zodiac","wool","grass","aries"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ram', '🐏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐑','1F411','ewe',default,'{"horns","hooves","sheep","farm","wool","female","grass"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"horns","hooves","sheep","farm","wool","female","grass"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ewe', '🐑') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sheep', '🐑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐐','1F410','goat',default,'{"horns","capricorn","cheese","zodiac","farm","milk"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"horns","capricorn","cheese","zodiac","farm","milk"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('goat', '🐐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐪','1F42A','camel',default,'{"dromedary","hot","oasis","sun","sahara","desert","hump"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dromedary","hot","oasis","sun","sahara","desert","hump"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dromedary_camel', '🐪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐫','1F42B','two-hump camel',default,'{"bactrian","camel","hot","sahara","oasis","sun","hump","desert"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bactrian","camel","hot","sahara","oasis","sun","hump","desert"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('camel', '🐫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦙','1F999','llama',default,'{"guanaco","alpaca","wool","vicuña"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"guanaco","alpaca","wool","vicuña"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('llama', '🦙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦒','1F992','giraffe',default,'{"neck","long","trees","spots","big"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"neck","long","trees","spots","big"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('giraffe', '🦒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐘','1F418','elephant',default,'{"wrinkles","töröö","trunk","elephant","big"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wrinkles","töröö","trunk","elephant","big"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('elephant', '🐘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦣','1F9A3','mammoth',default,'{"woolly","tusk","extinction","large"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woolly","tusk","extinction","large"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mammoth', '🦣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦏','1F98F','rhinoceros',default,'{"rhino","africa","rhinoceros","horn"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rhino","africa","rhinoceros","horn"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rhino', '🦏') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('rhinoceros', '🦏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦛','1F99B','hippopotamus',default,'{"hippo"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hippo"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hippo', '🦛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐭','1F42D','mouse face',default,'{"whiskers","face","cute","tiny","rodent","mouse"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"whiskers","face","cute","tiny","rodent","mouse"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mouse_face', '🐭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐁','1F401','mouse',default,'{"whiskers","cute","small","tiny","rodent","mouse"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"whiskers","cute","small","tiny","rodent","mouse"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mouse', '🐁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐀','1F400','rat',default,'{"garbage","canal","plaque","rodent","fleas","rat"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"garbage","canal","plaque","rodent","fleas","rat"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rat', '🐀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐹','1F439','hamster',default,'{"face","fluffy","pet","rodent","corn","fat"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","fluffy","pet","rodent","corn","fat"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hamster_face', '🐹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('hamster', '🐹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐰','1F430','rabbit face',default,'{"face","cute","bunny","ears","hopping","teeth","rabbit","pet","rodent","easter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","cute","bunny","ears","hopping","teeth","rabbit","pet","rodent","easter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rabbit_face', '🐰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐇','1F407','rabbit',default,'{"cute","bunny","ears","hopping","teeth","pet","rodent","easter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cute","bunny","ears","hopping","teeth","pet","rodent","easter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rabbit', '🐇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐿️','1F43F','chipmunk',default,'{"squirrel","alvin"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"squirrel","alvin"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('chipmunk', '🐿️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦫','1F9AB','beaver',default,'{"dam"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dam"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('beaver', '🦫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦔','1F994','hedgehog',default,'{"prickly","spiny"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"prickly","spiny"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hedgehog', '🦔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦇','1F987','bat',default,'{"batman","vampire","dracula"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"batman","vampire","dracula"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bat', '🦇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐻','1F43B','bear',default,'{"face","brown"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","brown"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bear', '🐻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bear_face', '🐻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐻‍❄️','1F43B-200D-2744-FE0F','polar bear',default,'{"bear","animal","arctic","ice","ursa","white"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bear","animal","arctic","ice","ursa","white"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('polar_bear', '🐻‍❄️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('polar_bear_face', '🐻‍❄️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐨','1F428','koala',default,'{"face","fluffy","grey","australia","eucalyptus","clingy","marsupial"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","fluffy","grey","australia","eucalyptus","clingy","marsupial"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('koala', '🐨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('koala_face', '🐨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐼','1F43C','panda',default,'{"kawaii","japan","face","cute"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"kawaii","japan","face","cute"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('panda_face', '🐼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('panda', '🐼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦥','1F9A5','sloth',default,'{"lazy","slow"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"lazy","slow"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sloth', '🦥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦦','1F9A6','otter',default,'{"fishing","playful"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fishing","playful"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('otter', '🦦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦨','1F9A8','skunk',default,'{"stink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('skunk', '🦨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦘','1F998','kangaroo',default,'{"marsupial","joey","jump"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"marsupial","joey","jump"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kangaroo', '🦘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦡','1F9A1','badger',default,'{"pester","honey badger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pester","honey badger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('badger', '🦡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐾','1F43E','paw prints',default,'{"animal","feet","paw","paws","print","pet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"animal","feet","paw","paws","print","pet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('paw_prints', '🐾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦃','1F983','turkey',default,'{"bird"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('turkey', '🦃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐔','1F414','chicken',default,'{"bird","egg"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","egg"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('chicken', '🐔') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('chicken_face', '🐔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐓','1F413','rooster',default,'{"bird","egg"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","egg"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rooster', '🐓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐣','1F423','hatching chick',default,'{"bird","chick","hatching","baby","egg"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","chick","hatching","baby","egg"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hatching_chick', '🐣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐤','1F424','baby chick',default,'{"bird","small","chick","baby","egg"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","small","chick","baby","egg"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('baby_chick', '🐤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐥','1F425','front-facing baby chick',default,'{"bird","baby","chick"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","baby","chick"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hatched_chick', '🐥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐦️','1F426','bird',default,'{"bird","fly","colourful"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","fly","colourful"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bird_face', '🐦️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bird', '🐦️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐧','1F427','penguin',default,'{"bird"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('penguin_face', '🐧') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('penguin', '🐧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕊️','1F54A','dove',default,'{"bird","fly","peace"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","fly","peace"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dove', '🕊️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦅','1F985','eagle',default,'{"bird","fly"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","fly"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('eagle', '🦅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦆','1F986','duck',default,'{"bird","fly","water"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","fly","water"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('duck', '🦆') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦢','1F9A2','swan',default,'{"bird","cygnet","ugly duckling"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","cygnet","ugly duckling"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('swan', '🦢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦉','1F989','owl',default,'{"bird","wise"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","wise"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('owl', '🦉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦤','1F9A4','dodo',default,'{"mauritius","extinction","large"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mauritius","extinction","large"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dodo', '🦤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪶','1FAB6','feather',default,'{"light","bird","flight","plumage"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"light","bird","flight","plumage"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('feather', '🪶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦩','1F9A9','flamingo',default,'{"tropical","flamingo","flamboyant"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tropical","flamingo","flamboyant"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flamingo', '🦩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦚','1F99A','peacock',default,'{"ostentatious","bird","peahen","proud"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ostentatious","bird","peahen","proud"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('peacock', '🦚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦜','1F99C','parrot',default,'{"bird","pirate","talk"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","pirate","talk"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('parrot', '🦜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪽','1FABD','wing',default,'{"angelic","mythology","bird","aviation","flying"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"angelic","mythology","bird","aviation","flying"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wing', '🪽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐦‍⬛','1F426-200D-2B1B','black bird',default,'{"crow","rook","bird","black","raven"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"crow","rook","bird","black","raven"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('black_bird', '🐦‍⬛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪿','1FABF','goose',default,'{"bird","fowl","silly","honk"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","fowl","silly","honk"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('goose', '🪿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐸','1F438','frog',default,'{"jump","green","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"jump","green","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('frog_face', '🐸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('frog', '🐸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐊','1F40A','crocodile',default,'{"dinosaur","crocodile"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dinosaur","crocodile"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('crocodile', '🐊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐢','1F422','turtle',default,'{"terrapin","water","slow","sand","tortoise"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"terrapin","water","slow","sand","tortoise"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('turtle', '🐢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦎','1F98E','lizard',default,'{"fast","reptile","small"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fast","reptile","small"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lizard', '🦎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐍','1F40D','snake',default,'{"bearer","zodiac","ophiuchus","fast","serpent","wriggle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bearer","zodiac","ophiuchus","fast","serpent","wriggle"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('snake', '🐍') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐲','1F432','dragon face',default,'{"face","fairy tale","fly","fire","dragon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"face","fairy tale","fly","fire","dragon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dragon_face', '🐲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐉','1F409','dragon',default,'{"fairy tale","fly","fire"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fairy tale","fly","fire"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dragon', '🐉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦕','1F995','sauropod',default,'{"diplodocus","brachiosaurus","brontosaurus","dinosaur"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"diplodocus","brachiosaurus","brontosaurus","dinosaur"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sauropod', '🦕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦖','1F996','T-Rex',default,'{"tyrannosaurus rex","dinosaur","t-rex"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tyrannosaurus rex","dinosaur","t-rex"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('t-rex', '🦖') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('trex', '🦖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐳','1F433','spouting whale',default,'{"whale","animal","face","cetacean","water","swim","spouting"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"whale","animal","face","cetacean","water","swim","spouting"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('spouting_whale', '🐳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐋','1F40B','whale',default,'{"whale","animal","water","swim","cetacean"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"whale","animal","water","swim","cetacean"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('whale', '🐋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐬','1F42C','dolphin',default,'{"animal","water","swim","flipper","cetacean"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"animal","water","swim","flipper","cetacean"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dolphin', '🐬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦭','1F9AD','seal',default,'{"sea lion"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sea lion"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('seal', '🦭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐟️','1F41F','fish',default,'{"animal","pisces","water","zodiac","swim"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"animal","pisces","water","zodiac","swim"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fish', '🐟️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐠','1F420','tropical fish',default,'{"animal","tropical","water","swim","fish"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"animal","tropical","water","swim","fish"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tropical_fish', '🐠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐡','1F421','blowfish',default,'{"fish","animal","water","swim"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fish","animal","water","swim"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('blowfish', '🐡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦈','1F988','shark',default,'{"fish","animal","water","swim"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fish","animal","water","swim"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shark', '🦈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐙','1F419','octopus',default,'{"animal","water","octopus","swim"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"animal","water","octopus","swim"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('octopus', '🐙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐚','1F41A','spiral shell',default,'{"water","shell","beach","spiral","sand"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"water","shell","beach","spiral","sand"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shell', '🐚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪸','1FAB8','coral',default,'{"ocean","reef"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ocean","reef"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('coral', '🪸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪼','1FABC','jellyfish',default,'{"stinger","invertebrate","burn","marine","ouch","jelly"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stinger","invertebrate","burn","marine","ouch","jelly"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('jellyfish', '🪼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐌','1F40C','snail',default,'{"snail"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"snail"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('snail', '🐌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦋','1F98B','butterfly',default,'{"pretty","insect"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pretty","insect"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('butterfly', '🦋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐛','1F41B','bug',default,'{"insect"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"insect"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bug', '🐛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐜','1F41C','ant',default,'{"insect"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"insect"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ant', '🐜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐝','1F41D','honeybee',default,'{"insect","bee"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"insect","bee"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bee', '🐝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪲','1FAB2','beetle',default,'{"bug","insect"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bug","insect"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('beetle', '🪲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐞','1F41E','lady beetle',default,'{"beetle","ladybird","ladybug","insect"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"beetle","ladybird","ladybug","insect"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lady_beetle', '🐞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦗','1F997','cricket',default,'{"grasshopper"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"grasshopper"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cricket', '🦗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪳','1FAB3','cockroach',default,'{"roach","pest","insect"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"roach","pest","insect"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cockroach', '🪳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕷️','1F577','spider',default,'{"insect"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"insect"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('spider', '🕷️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕸️','1F578','spider web',default,'{"spider","web"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"spider","web"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('spider_web', '🕸️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦂','1F982','scorpion',default,'{"scorpio","zodiac"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"scorpio","zodiac"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('scorpion', '🦂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦟','1F99F','mosquito',default,'{"malaria","fever","disease","pest","virus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"malaria","fever","disease","pest","virus"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mosquito', '🦟') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪰','1FAB0','fly',default,'{"disease","rotting","pest","maggot"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"disease","rotting","pest","maggot"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fly', '🪰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪱','1FAB1','worm',default,'{"earthworm","annelid","parasite"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"earthworm","annelid","parasite"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('worm', '🪱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦠','1F9A0','microbe',default,'{"amoeba","bacteria","corona","COVID-19","virus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"amoeba","bacteria","corona","COVID-19","virus"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('microbe', '🦠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💐','1F490','bouquet',default,'{"present","tulip","bouquet","flower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"present","tulip","bouquet","flower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bouquet', '💐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌸','1F338','cherry blossom',default,'{"blossom","pink","cherry","flower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"blossom","pink","cherry","flower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cherry_blossom', '🌸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💮','1F4AE','white flower',default,'{"flower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_flower', '💮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪷','1FAB7','lotus',default,'{"buddhism","purity","hinduism","flower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"buddhism","purity","hinduism","flower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lotus', '🪷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏵️','1F3F5','rosette',default,'{"plant"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plant"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rosette', '🏵️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌹','1F339','rose',default,'{"present","rose","nature","red","valentines day","flower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"present","rose","nature","red","valentines day","flower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rose', '🌹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥀','1F940','wilted flower',default,'{"plant","rose","wilted","red","sad","flower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plant","rose","wilted","red","sad","flower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wilted_flower', '🥀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌺','1F33A','hibiscus',default,'{"pink","flower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pink","flower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hibiscus', '🌺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌻','1F33B','sunflower',default,'{"sun","summer","yellow","flower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sun","summer","yellow","flower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sunflower', '🌻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌼','1F33C','blossom',default,'{"yellow","nature","flower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"yellow","nature","flower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('blossom', '🌼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌷','1F337','tulip',default,'{"eastern","pink","flower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"eastern","pink","flower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tulip', '🌷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪻','1FABB','hyacinth',default,'{"bluebonnet","snapdragon","lavender","flower","lupine"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bluebonnet","snapdragon","lavender","flower","lupine"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hyacinth', '🪻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌱','1F331','seedling',default,'{"growing","plant","green","young","leaves","farming","leaf"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"growing","plant","green","young","leaves","farming","leaf"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('seedling', '🌱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪴','1FAB4','potted plant',default,'{"plant","house","grow","nurturing","boring","useless"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plant","house","grow","nurturing","boring","useless"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('potted_plant', '🪴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌲','1F332','evergreen tree',default,'{"fir","green","tree","plant"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fir","green","tree","plant"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('evergreen_tree', '🌲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌳','1F333','deciduous tree',default,'{"plant","tree","green","shedding","deciduous"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plant","tree","green","shedding","deciduous"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('deciduous_tree', '🌳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌴','1F334','palm tree',default,'{"palm","tree","vacation","relax","beach","sea"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"palm","tree","vacation","relax","beach","sea"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('palm_tree', '🌴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌵','1F335','cactus',default,'{"plant","hot","warm","sun","desert","texas"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plant","hot","warm","sun","desert","texas"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cactus', '🌵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌾','1F33E','sheaf of rice',default,'{"ear","grain","rice"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ear","grain","rice"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ear_of_rice', '🌾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sheaf_of_rice', '🌾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌿','1F33F','herb',default,'{"green","leaf","leaves","plant"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"green","leaf","leaves","plant"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('herb', '🌿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☘️','2618','shamrock',default,'{"green","plant","leaves","leaf"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"green","plant","leaves","leaf"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shamrock', '☘️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍀','1F340','four leaf clover',default,'{"plant","four-leaf clover","green","leaves","clover","luck","four","leaf","4"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plant","four-leaf clover","green","leaves","clover","luck","four","leaf","4"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('four_leaf_clover', '🍀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍁','1F341','maple leaf',default,'{"leaf","maple","orange","falling","fall","autumn"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"leaf","maple","orange","falling","fall","autumn"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('maple_leaf', '🍁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍂','1F342','fallen leaf',default,'{"leaf","falling"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"leaf","falling"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fallen_leaf', '🍂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍃','1F343','leaf fluttering in wind',default,'{"blow","wind","leaf","flutter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"blow","wind","leaf","flutter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('leaves', '🍃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪹','1FAB9','empty nest',default,'{"nesting"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"nesting"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('empty_nest', '🪹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('nest', '🪹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪺','1FABA','nest with eggs',default,'{"nesting"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"nesting"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('nest_with_eggs', '🪺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍄','1F344','mushroom',default,'{"toadstool","mushroom"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"toadstool","mushroom"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mushroom', '🍄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍇','1F347','grapes',default,'{"fruit","grape"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fruit","grape"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('grapes', '🍇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍈','1F348','melon',default,'{"fruit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fruit"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('melon', '🍈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍉','1F349','watermelon',default,'{"red","fruit","melon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"red","fruit","melon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('watermelon', '🍉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍊','1F34A','tangerine',default,'{"fruit","orange"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fruit","orange"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tangerine', '🍊') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('orange', '🍊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍋','1F34B','lemon',default,'{"citrus","yellow","fruit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"citrus","yellow","fruit"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lemon', '🍋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍌','1F34C','banana',default,'{"yellow","fruit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"yellow","fruit"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('banana', '🍌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍍','1F34D','pineapple',default,'{"tropical","fruit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tropical","fruit"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pineapple', '🍍') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥭','1F96D','mango',default,'{"tropical","fruit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tropical","fruit"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mango', '🥭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍎','1F34E','red apple',default,'{"fruit","red","apple"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fruit","red","apple"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('apple', '🍎') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('red_apple', '🍎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍏','1F34F','green apple',default,'{"fruit","green","apple"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fruit","green","apple"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('green_apple', '🍏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍐','1F350','pear',default,'{"green","fruit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"green","fruit"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pear', '🍐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍑','1F351','peach',default,'{"red","fruit","pink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"red","fruit","pink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('peach', '🍑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍒','1F352','cherries',default,'{"fruit","red","berries","cherry"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fruit","red","berries","cherry"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cherries', '🍒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍓','1F353','strawberry',default,'{"fruit","berry"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fruit","berry"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('strawberry', '🍓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫐','1FAD0','blueberries',default,'{"blueberry","bilberry","blue","berry"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"blueberry","bilberry","blue","berry"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('blueberries', '🫐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥝','1F95D','kiwi fruit',default,'{"green","kiwi","fruit","food"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"green","kiwi","fruit","food"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kiwi', '🥝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍅','1F345','tomato',default,'{"red","vegetable","fruit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"red","vegetable","fruit"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tomato', '🍅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫒','1FAD2','olive',default,'{"food"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"food"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('olive', '🫒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥥','1F965','coconut',default,'{"palm","piña colada","nut"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"palm","piña colada","nut"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('coconut', '🥥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥑','1F951','avocado',default,'{"fruit","avocado","food"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fruit","avocado","food"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('avocado', '🥑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍆','1F346','eggplant',default,'{"vegetable","aubergine","purple"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"vegetable","aubergine","purple"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('eggplant', '🍆') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥔','1F954','potato',default,'{"vegetable","food"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"vegetable","food"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('potato', '🥔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥕','1F955','carrot',default,'{"vegetable","food"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"vegetable","food"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('carrot', '🥕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌽','1F33D','ear of corn',default,'{"ear","yellow","maze","corn","maize"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ear","yellow","maze","corn","maize"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('corn', '🌽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ear_of_corn', '🌽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌶️','1F336','hot pepper',default,'{"red","pepper","hot"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"red","pepper","hot"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hot_pepper', '🌶️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫑','1FAD1','bell pepper',default,'{"vegetable","pepper","capsicum"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"vegetable","pepper","capsicum"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bell_pepper', '🫑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥒','1F952','cucumber',default,'{"vegetable","pickle","food"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"vegetable","pickle","food"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cucumber', '🥒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥬','1F96C','leafy green',default,'{"lettuce","cabbage","kale","bok choy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"lettuce","cabbage","kale","bok choy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('leafy_green', '🥬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥦','1F966','broccoli',default,'{"wild cabbage"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wild cabbage"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('broccoli', '🥦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧄','1F9C4','garlic',default,'{"flavoring"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flavoring"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('garlic', '🧄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧅','1F9C5','onion',default,'{"flavoring"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flavoring"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('onion', '🧅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥜','1F95C','peanuts',default,'{"vegetable","nut","peanut","food"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"vegetable","nut","peanut","food"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('peanuts', '🥜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫘','1FAD8','beans',default,'{"legume","kidney","food"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"legume","kidney","food"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('beans', '🫘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌰','1F330','chestnut',default,'{"plant"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plant"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('chestnut', '🌰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫚','1FADA','ginger root',default,'{"spice","beer","root"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"spice","beer","root"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ginger', '🫚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫛','1FADB','pea pod',default,'{"pea","pod","beans","legume","edamame","vegetable"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pea","pod","beans","legume","edamame","vegetable"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pea', '🫛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍞','1F35E','bread',default,'{"loaf"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"loaf"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bread', '🍞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥐','1F950','croissant',default,'{"bread","food","french","breakfast","roll"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bread","food","french","breakfast","roll"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('croissant', '🥐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥖','1F956','baguette bread',default,'{"food","baguette","french","bread"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"food","baguette","french","bread"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('baguette_bread', '🥖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫓','1FAD3','flatbread',default,'{"arepa","pita","naan","lavash"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"arepa","pita","naan","lavash"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flatbread', '🫓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥨','1F968','pretzel',default,'{"twisted"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"twisted"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pretzel', '🥨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥯','1F96F','bagel',default,'{"bakery","schmear","breakfast"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bakery","schmear","breakfast"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bagel', '🥯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥞','1F95E','pancakes',default,'{"hotcake","pancake","crêpe","food","breakfast"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hotcake","pancake","crêpe","food","breakfast"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pancakes', '🥞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧇','1F9C7','waffle',default,'{"indecisive","iron","breakfast"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"indecisive","iron","breakfast"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('waffle', '🧇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧀','1F9C0','cheese wedge',default,'{"cheese"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cheese"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cheese', '🧀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍖','1F356','meat on bone',default,'{"bone","meat"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bone","meat"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('meat_on_bone', '🍖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍗','1F357','poultry leg',default,'{"leg","poultry","bone","drumstick","chicken"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"leg","poultry","bone","drumstick","chicken"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('poultry_leg', '🍗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥩','1F969','cut of meat',default,'{"steak","porkchop","lambchop","chop"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"steak","porkchop","lambchop","chop"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cut_of_meat', '🥩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥓','1F953','bacon',default,'{"breakfast","meat","food"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"breakfast","meat","food"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bacon', '🥓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍔','1F354','hamburger',default,'{"burger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"burger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hamburger', '🍔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍟','1F35F','french fries',default,'{"french","fries"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"french","fries"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('french_fries', '🍟') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('fries', '🍟') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍕','1F355','pizza',default,'{"cheese","slice"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cheese","slice"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pizza', '🍕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌭','1F32D','hot dog',default,'{"hotdog","frankfurter","sausage"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hotdog","frankfurter","sausage"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hotdog', '🌭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥪','1F96A','sandwich',default,'{"bread"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bread"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sandwich', '🥪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌮','1F32E','taco',default,'{"mexican"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mexican"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('taco', '🌮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌯','1F32F','burrito',default,'{"wrap","mexican"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wrap","mexican"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('burrito', '🌯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫔','1FAD4','tamale',default,'{"wrapped","mexican"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wrapped","mexican"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tamale', '🫔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥙','1F959','stuffed flatbread',default,'{"falafel","gyro","food","kebab","flatbread","stuffed"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"falafel","gyro","food","kebab","flatbread","stuffed"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('stuffed_flatbread', '🥙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧆','1F9C6','falafel',default,'{"hummus","meatball","chickpea","pita"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hummus","meatball","chickpea","pita"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('falafel', '🧆') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥚','1F95A','egg',default,'{"breakfast","food"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"breakfast","food"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('egg', '🥚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍳','1F373','cooking',default,'{"pan","egg","breakfast","frying"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pan","egg","breakfast","frying"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cooking', '🍳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('fried_egg', '🍳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥘','1F958','shallow pan of food',default,'{"shallow","pan","food","paella","casserole"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"shallow","pan","food","paella","casserole"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shallow_pan_of_food', '🥘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍲','1F372','pot of food',default,'{"stew","pot"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stew","pot"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pot_of_food', '🍲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('stew', '🍲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫕','1FAD5','fondue',default,'{"swiss","cheese","pot","chocolate","melted"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"swiss","cheese","pot","chocolate","melted"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fondue', '🫕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥣','1F963','bowl with spoon',default,'{"cereal","breakfast","congee"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cereal","breakfast","congee"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bowl_with_spoon', '🥣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥗','1F957','green salad',default,'{"salad","green","food"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"salad","green","food"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('salad', '🥗') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('green_salad', '🥗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍿','1F37F','popcorn',default,'{"popcorn"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"popcorn"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('popcorn', '🍿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧈','1F9C8','butter',default,'{"dairy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dairy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('butter', '🧈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧂','1F9C2','salt',default,'{"condiment","shaker"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"condiment","shaker"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('salt', '🧂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥫','1F96B','canned food',default,'{"can"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"can"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('canned_food', '🥫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍱','1F371','bento box',default,'{"box","bento"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"box","bento"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bento_box', '🍱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bento', '🍱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍘','1F358','rice cracker',default,'{"rice","cracker"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rice","cracker"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rice_cracker', '🍘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍙','1F359','rice ball',default,'{"rice","japanese","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rice","japanese","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rice_ball', '🍙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍚','1F35A','cooked rice',default,'{"rice","cooked"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rice","cooked"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cooked_rice', '🍚') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('rice', '🍚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍛','1F35B','curry rice',default,'{"rice","curry"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rice","curry"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('curry', '🍛') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('curry_rice', '🍛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍜','1F35C','steaming bowl',default,'{"steaming","ramen","bowl","noodle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"steaming","ramen","bowl","noodle"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ramen', '🍜') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('steaming_bowl', '🍜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍝','1F35D','spaghetti',default,'{"pasta"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pasta"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('spaghetti', '🍝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍠','1F360','roasted sweet potato',default,'{"sweet","roasted","potato"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sweet","roasted","potato"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sweet_potato', '🍠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍢','1F362','oden',default,'{"kebab","seafood","skewer","stick"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"kebab","seafood","skewer","stick"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('oden', '🍢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍣','1F363','sushi',default,'{"sushi"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sushi"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sushi', '🍣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍤','1F364','fried shrimp',default,'{"prawn","shrimp","tempura","fried"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"prawn","shrimp","tempura","fried"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fried_shrimp', '🍤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍥','1F365','fish cake with swirl',default,'{"fish","swirl","pastry","cake"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fish","swirl","pastry","cake"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fish_cake', '🍥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥮','1F96E','moon cake',default,'{"yuèbǐng","autumn","festival"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"yuèbǐng","autumn","festival"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('moon_cake', '🥮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍡','1F361','dango',default,'{"sweet","stick","dessert","japanese","skewer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sweet","stick","dessert","japanese","skewer"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dango', '🍡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥟','1F95F','dumpling',default,'{"potsticker","gyōza","jiaozi","empanada","pierogi"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"potsticker","gyōza","jiaozi","empanada","pierogi"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dumpling', '🥟') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥠','1F960','fortune cookie',default,'{"prophecy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"prophecy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fortune_cookie', '🥠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥡','1F961','takeout box',default,'{"oyster pail"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"oyster pail"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('takeout_box', '🥡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦀','1F980','crab',default,'{"zodiac","cancer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"zodiac","cancer"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('crab', '🦀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦞','1F99E','lobster',default,'{"claws","seafood","bisque"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"claws","seafood","bisque"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lobster', '🦞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦐','1F990','shrimp',default,'{"animal","small","water","swim","food","shellfish"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"animal","small","water","swim","food","shellfish"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shrimp', '🦐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦑','1F991','squid',default,'{"animal","water","swim","food","molusc"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"animal","water","swim","food","molusc"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('squid', '🦑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦪','1F9AA','oyster',default,'{"diving","shell","pearl"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"diving","shell","pearl"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('oyster', '🦪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍦','1F366','soft ice cream',default,'{"cream","sweet","ice","dessert","soft","icecream"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cream","sweet","ice","dessert","soft","icecream"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('soft_serve', '🍦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('icecream', '🍦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍧','1F367','shaved ice',default,'{"shaved","ice","sweet","dessert"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"shaved","ice","sweet","dessert"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shaved_ice', '🍧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍨','1F368','ice cream',default,'{"sweet","cream","ice","dessert"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sweet","cream","ice","dessert"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ice_cream', '🍨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍩','1F369','doughnut',default,'{"donut","sweet","breakfast","dessert"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"donut","sweet","breakfast","dessert"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('doughnut', '🍩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍪','1F36A','cookie',default,'{"sweet","dessert"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sweet","dessert"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cookie', '🍪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎂','1F382','birthday cake',default,'{"birthday","sweet","celebration","dessert","pastry","cake"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"birthday","sweet","celebration","dessert","pastry","cake"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('birthday', '🎂') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('birthday_cake', '🎂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍰','1F370','shortcake',default,'{"slice","sweet","dessert","pastry","cake"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"slice","sweet","dessert","pastry","cake"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shortcake', '🍰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cake', '🍰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧁','1F9C1','cupcake',default,'{"bakery","sweet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bakery","sweet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cupcake', '🧁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥧','1F967','pie',default,'{"pastry","filling"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pastry","filling"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pie', '🥧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍫','1F36B','chocolate bar',default,'{"bar","chocolate","sweet","dessert"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bar","chocolate","sweet","dessert"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('chocolate_bar', '🍫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍬','1F36C','candy',default,'{"sweet","dessert"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sweet","dessert"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('candy', '🍬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍭','1F36D','lollipop',default,'{"sweet","candy","dessert"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sweet","candy","dessert"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lollipop', '🍭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍮','1F36E','custard',default,'{"sweet","pudding","dessert"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sweet","pudding","dessert"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('custard', '🍮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍯','1F36F','honey pot',default,'{"pot","sweet","honeypot","honey"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pot","sweet","honeypot","honey"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('honey_pot', '🍯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍼','1F37C','baby bottle',default,'{"bottle","sweet","milk","baby","drink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bottle","sweet","milk","baby","drink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('baby_bottle', '🍼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥛','1F95B','glass of milk',default,'{"glass","milk","drink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"glass","milk","drink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('milk', '🥛') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('glass_of_milk', '🥛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☕️','2615','hot beverage',default,'{"beverage","hot","tea","coffee","steaming","drink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"beverage","hot","tea","coffee","steaming","drink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('coffee', '☕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫖','1FAD6','teapot',default,'{"pot","drink","tea"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pot","drink","tea"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('teapot', '🫖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍵','1F375','teacup without handle',default,'{"teacup","beverage","hot","tea","cup","glass","drink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"teacup","beverage","hot","tea","cup","glass","drink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tea', '🍵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍶','1F376','sake',default,'{"bottle","beverage","bar","cup","drink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bottle","beverage","bar","cup","drink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sake', '🍶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍾','1F37E','bottle with popping cork',default,'{"bottle","bar","party","popping","cork","event","drink","celebrate"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bottle","bar","party","popping","cork","event","drink","celebrate"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('champagne', '🍾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍷','1F377','wine glass',default,'{"beverage","classic","bar","wine","alcohol","glass","drink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"beverage","classic","bar","wine","alcohol","glass","drink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wine_glass', '🍷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍸️','1F378','cocktail glass',default,'{"classic","elegant","bar","party","cocktail","alcohol","glass","drink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"classic","elegant","bar","party","cocktail","alcohol","glass","drink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cocktail', '🍸️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍹','1F379','tropical drink',default,'{"summer","tropical","bar","party","cocktail","glass","drink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"summer","tropical","bar","party","cocktail","glass","drink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tropical_drink', '🍹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍺','1F37A','beer mug',default,'{"german","mug","bavaria","bar","party","beer","alcohol","drink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"german","mug","bavaria","bar","party","beer","alcohol","drink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('beer', '🍺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍻','1F37B','clinking beer mugs',default,'{"german","mug","bavaria","bar","clink","party","beer","alcohol","drink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"german","mug","bavaria","bar","clink","party","beer","alcohol","drink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('beers', '🍻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥂','1F942','clinking glasses',default,'{"clink","party","secco","glass","drink","celebrate"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clink","party","secco","glass","drink","celebrate"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clinking_glasses', '🥂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥃','1F943','tumbler glass',default,'{"liquor","tumbler","shot","classic","whisky","alcohol","glass"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"liquor","tumbler","shot","classic","whisky","alcohol","glass"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tumbler_glass', '🥃') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('whisky', '🥃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫗','1FAD7','pouring liquid',default,'{"glass","empty","spill","drink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"glass","empty","spill","drink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pour', '🫗') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pouring_liquid', '🫗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥤','1F964','cup with straw',default,'{"beverage","fastfood","juice","soda"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"beverage","fastfood","juice","soda"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cup_with_straw', '🥤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧋','1F9CB','bubble tea',default,'{"bubble","milk","pearl","tea"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bubble","milk","pearl","tea"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('boba_drink', '🧋') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bubble_tea', '🧋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧃','1F9C3','beverage box',default,'{"beverage","sweet","juice","box","straw"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"beverage","sweet","juice","box","straw"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('juice_box', '🧃') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('beverage_box', '🧃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧉','1F9C9','mate',default,'{"drink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"drink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mate', '🧉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧊','1F9CA','ice',default,'{"iceberg","ice cube","isometric","cold"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"iceberg","ice cube","isometric","cold"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ice_cube', '🧊') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ice', '🧊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥢','1F962','chopsticks',default,'{"chopstick","hashi","sticks","eat"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"chopstick","hashi","sticks","eat"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('chopsticks', '🥢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍽️','1F37D','fork and knife with plate',default,'{"cooking","fork","eat","knife","plate"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cooking","fork","eat","knife","plate"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fork_knife_plate', '🍽️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🍴','1F374','fork and knife',default,'{"cooking","cutlery","fork","eat","knife"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cooking","cutlery","fork","eat","knife"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fork_and_knife', '🍴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥄','1F944','spoon',default,'{"spoon","metal","eat","tableware"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"spoon","metal","eat","tableware"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('spoon', '🥄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔪','1F52A','kitchen knife',default,'{"cooking","tool","knife","eat","hocho","weapon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cooking","tool","knife","eat","hocho","weapon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('knife', '🔪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫙','1FAD9','jar',default,'{"empty","container","sauce","store","condiment"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"empty","container","sauce","store","condiment"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('jar', '🫙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏺','1F3FA','amphora',default,'{"cooking","aquarius","jug","zodiac","drink"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cooking","aquarius","jug","zodiac","drink"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('amphora', '🏺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌍️','1F30D','globe showing Europe-Africa',default,'{"world","global","globe","planet","geographic","continent","globe showing europe-africa","europe","earth","africa"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"world","global","globe","planet","geographic","continent","globe showing europe-africa","europe","earth","africa"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('earth_africa', '🌍️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('earth_europe', '🌍️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌎️','1F30E','globe showing Americas',default,'{"world","global","globe","planet","americas","geographic","continent","globe showing americas","earth"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"world","global","globe","planet","americas","geographic","continent","globe showing americas","earth"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('earth_americas', '🌎️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌏️','1F30F','globe showing Asia-Australia',default,'{"globe showing asia-australia","world","global","globe","australia","planet","geographic","asia","continent","earth"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"globe showing asia-australia","world","global","globe","australia","planet","geographic","asia","continent","earth"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('earth_asia', '🌏️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌐','1F310','globe with meridians',default,'{"meridians","world","global","globe","grid","planet","geographic","continent","earth"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"meridians","world","global","globe","grid","planet","geographic","continent","earth"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('globe_with_meridians', '🌐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗺️','1F5FA','world map',default,'{"map","global","world","planet","geographic","continent","earth"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"map","global","world","planet","geographic","continent","earth"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('world_map', '🗺️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗾','1F5FE','map of Japan',default,'{"map","japan","map of japan"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"map","japan","map of japan"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('japan_map', '🗾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧭','1F9ED','compass',default,'{"magnetic","navigation","orienteering","wayfinding","direction"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"magnetic","navigation","orienteering","wayfinding","direction"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('compass', '🧭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏔️','1F3D4','snow-capped mountain',default,'{"climbing","snow","cold","landscape","mountain","nature","adventure","hiking","outdoor","white"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"climbing","snow","cold","landscape","mountain","nature","adventure","hiking","outdoor","white"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mountain_snow', '🏔️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛰️','26F0','mountain',default,'{"climbing","landscape","nature","mountain","adventure","hiking","outdoor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"climbing","landscape","nature","mountain","adventure","hiking","outdoor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mountain', '⛰️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌋','1F30B','volcano',default,'{"smoke","eruption","landscape","nature","mountain","hot","fire","vulcano"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"smoke","eruption","landscape","nature","mountain","hot","fire","vulcano"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('volcano', '🌋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗻','1F5FB','mount fuji',default,'{"fuji","mountain","geographic","japanese","japan"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fuji","mountain","geographic","japanese","japan"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mount_fuji', '🗻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏕️','1F3D5','camping',default,'{"tent","camping","nature","sleeping","adventure","outdoor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tent","camping","nature","sleeping","adventure","outdoor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('camping', '🏕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏖️','1F3D6','beach with umbrella',default,'{"summer","holidays","water","nature","beach","umbrella","sand","sun"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"summer","holidays","water","nature","beach","umbrella","sand","sun"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('beach', '🏖️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('beach_with_umbrella', '🏖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏜️','1F3DC','desert',default,'{"hot","nature","dry","sand","sun","desert"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hot","nature","dry","sand","sun","desert"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('desert', '🏜️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏝️','1F3DD','desert island',default,'{"palm","island","water","nature","sand","lonely","stranded","sun","desert"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"palm","island","water","nature","sand","lonely","stranded","sun","desert"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('island', '🏝️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('desert_island', '🏝️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏞️','1F3DE','national park',default,'{"park","nature","mountain","adventure","woods","outdoor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"park","nature","mountain","adventure","woods","outdoor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('national_park', '🏞️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏟️','1F3DF','stadium',default,'{"building","football","olympic","stadium","sports"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"building","football","olympic","stadium","sports"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('stadium', '🏟️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏛️','1F3DB','classical building',default,'{"historical","building","classical","antique","old"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"historical","building","classical","antique","old"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('classical_building', '🏛️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏗️','1F3D7','building construction',default,'{"building lot","work","construction","crane"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"building lot","work","construction","crane"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('construction_site', '🏗️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('building_construction', '🏗️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧱','1F9F1','brick',default,'{"bricks","mortar","clay","wall"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bricks","mortar","clay","wall"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bricks', '🧱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪨','1FAA8','rock',default,'{"stone","solid","boulder","heavy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stone","solid","boulder","heavy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rock', '🪨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪵','1FAB5','wood',default,'{"log","timber","lumber"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"log","timber","lumber"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wood', '🪵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛖','1F6D6','hut',default,'{"roundhouse","house","yurt"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"roundhouse","house","yurt"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hut', '🛖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏘️','1F3D8','houses',default,'{"neighbourhood","buildings","houses"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"neighbourhood","buildings","houses"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('homes', '🏘️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('houses', '🏘️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏚️','1F3DA','derelict house',default,'{"rotten","dangerous","building","derelict","old","house"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rotten","dangerous","building","derelict","old","house"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('house_abandoned', '🏚️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('derelict_house', '🏚️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏠️','1F3E0','house',default,'{"building","home"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"building","home"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('house', '🏠️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏡','1F3E1','house with garden',default,'{"house","tree","building","home","green","garden","grass"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"house","tree","building","home","green","garden","grass"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('house_with_garden', '🏡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏢','1F3E2','office building',default,'{"workplace","firm","building","business","company"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"workplace","firm","building","business","company"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('office', '🏢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏣','1F3E3','Japanese post office',default,'{"japanese post office","post","delivery","japanese","mailing","communication"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"japanese post office","post","delivery","japanese","mailing","communication"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('post_office', '🏣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏤','1F3E4','post office',default,'{"european","yellow","post","delivery","mailing","communication"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"european","yellow","post","delivery","mailing","communication"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('european_post_office', '🏤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏥','1F3E5','hospital',default,'{"social","public","building","doctor","help","medicine","cross"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"social","public","building","doctor","help","medicine","cross"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hospital', '🏥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏦','1F3E6','bank',default,'{"money","venture","building","finance","business"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","venture","building","finance","business"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bank', '🏦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏨','1F3E8','hotel',default,'{"sleep","vacation","building","travel","business","holiday"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sleep","vacation","building","travel","business","holiday"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hotel', '🏨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏩','1F3E9','love hotel',default,'{"affair","hotel","building","love","sex"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"affair","hotel","building","love","sex"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('love_hotel', '🏩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏪','1F3EA','convenience store',default,'{"building","24","convenience","store","shopping","buying"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"building","24","convenience","store","shopping","buying"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('convenience_store', '🏪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏫','1F3EB','school',default,'{"public","learning","building","teaching","education"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"public","learning","building","teaching","education"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('school', '🏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏬','1F3EC','department store',default,'{"building","department","store","shopping","buying"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"building","department","store","shopping","buying"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('department_store', '🏬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏭️','1F3ED','factory',default,'{"workplace","business","building","firm"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"workplace","business","building","firm"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('factory', '🏭️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏯','1F3EF','Japanese castle',default,'{"historical","building","culture","japanese","war","castle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"historical","building","culture","japanese","war","castle"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('japanese_castle', '🏯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏰','1F3F0','castle',default,'{"european","historical","building","culture","war"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"european","historical","building","culture","war"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('european_castle', '🏰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('castle', '🏰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💒','1F492','wedding',default,'{"building","love","chapel","heart","marriage","romance"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"building","love","chapel","heart","marriage","romance"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wedding', '💒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗼','1F5FC','Tokyo tower',default,'{"tokyo","tower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tokyo","tower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tokyo_tower', '🗼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗽','1F5FD','Statue of Liberty',default,'{"statue of liberty","liberty","statue"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"statue of liberty","liberty","statue"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('statue_of_liberty', '🗽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛪️','26EA','church',default,'{"faith","religion","religious","god","building","mess","christian","pray","cross"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"faith","religion","religious","god","building","mess","christian","pray","cross"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('church', '⛪️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕌','1F54C','mosque',default,'{"faith","religion","religious","god","building","muslim","pray","islam"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"faith","religion","religious","god","building","muslim","pray","islam"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mosque', '🕌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛕','1F6D5','hindu temple',default,'{"temple","hindu"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"temple","hindu"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hindu_temple', '🛕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕍','1F54D','synagogue',default,'{"faith","religion","religious","god","building","temple","jew","jewish","pray"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"faith","religion","religious","god","building","temple","jew","jewish","pray"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('synagogue', '🕍') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛩️','26E9','shinto shrine',default,'{"faith","religion","religious","god","shinto","building","pray","shrine"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"faith","religion","religious","god","shinto","building","pray","shrine"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shinto_shrine', '⛩️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕋','1F54B','kaaba',default,'{"faith","religion","religious","god","building","muslim","black","mecca","pray","islam"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"faith","religion","religious","god","building","muslim","black","mecca","pray","islam"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kaaba', '🕋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛲️','26F2','fountain',default,'{"fountain"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fountain"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fountain', '⛲️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛺️','26FA','tent',default,'{"camping","adventure","outdoor","nature"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"camping","adventure","outdoor","nature"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tent', '⛺️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌁','1F301','foggy',default,'{"fog"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fog"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('foggy', '🌁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌃','1F303','night with stars',default,'{"night","star"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"night","star"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('night_with_stars', '🌃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏙️','1F3D9','cityscape',default,'{"city","buildings","metropolis"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"city","buildings","metropolis"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cityscape', '🏙️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌄','1F304','sunrise over mountains',default,'{"sun","sunrise","morning","mountain"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sun","sunrise","morning","mountain"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sunrise_over_mountains', '🌄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌅','1F305','sunrise',default,'{"sun","morning"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sun","morning"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sunrise', '🌅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌆','1F306','cityscape at dusk',default,'{"landscape","evening","sunset","city","dusk"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"landscape","evening","sunset","city","dusk"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('city_dusk', '🌆') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌇','1F307','sunset',default,'{"dusk","sun"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dusk","sun"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('city_sunset', '🌇') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('city_sunrise', '🌇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌉','1F309','bridge at night',default,'{"bridge","night"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bridge","night"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bridge_at_night', '🌉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♨️','2668','hot springs',default,'{"hotsprings","springs","steaming","hot"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hotsprings","springs","steaming","hot"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hotsprings', '♨️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎠','1F3A0','carousel horse',default,'{"horse","carousel"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"horse","carousel"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('carousel_horse', '🎠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛝','1F6DD','playground slide',default,'{"amusement park","play"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"amusement park","play"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('slide', '🛝') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('playground_slide', '🛝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎡','1F3A1','ferris wheel',default,'{"amusement park","wheel","ferris"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"amusement park","wheel","ferris"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ferris_wheel', '🎡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎢','1F3A2','roller coaster',default,'{"amusement park","roller","coaster"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"amusement park","roller","coaster"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('roller_coaster', '🎢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💈','1F488','barber pole',default,'{"pole","hairdresser","haircut","barber","beauty"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pole","hairdresser","haircut","barber","beauty"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('barber_pole', '💈') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('barber', '💈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎪','1F3AA','circus tent',default,'{"tent","fun","leisure","entertainment","circus","red","white"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tent","fun","leisure","entertainment","circus","red","white"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('circus_tent', '🎪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚂','1F682','locomotive',default,'{"locomotive","railway","travel","train","engine","drive","steam"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"locomotive","railway","travel","train","engine","drive","steam"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('steam_locomotive', '🚂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚃','1F683','railway car',default,'{"locomotive","railway","car","travel","train","railway car","tram","trolleybus","electric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"locomotive","railway","car","travel","train","railway car","tram","trolleybus","electric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('railway_car', '🚃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚄','1F684','high-speed train',default,'{"railway","train","speed","shinkansen"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"railway","train","speed","shinkansen"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bullettrain_side', '🚄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚅','1F685','bullet train',default,'{"transportation","bullet","locomotive","speed","shinkansen","railway","travel","train","railway car"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"transportation","bullet","locomotive","speed","shinkansen","railway","travel","train","railway car"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bullettrain_front', '🚅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚆','1F686','train',default,'{"railway"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"railway"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('train', '🚆') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚇️','1F687','metro',default,'{"subway"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"subway"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('metro', '🚇️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚈','1F688','light rail',default,'{"railway"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"railway"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('light_rail', '🚈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚉','1F689','station',default,'{"stop","railway","train station","travel","station","train","departure","arrives"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stop","railway","train station","travel","station","train","departure","arrives"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('station', '🚉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚊','1F68A','tram',default,'{"trolleybus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"trolleybus"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tram', '🚊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚝','1F69D','monorail',default,'{"monorail","transportation","vehicle","locomotive","travel","train"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"monorail","transportation","vehicle","locomotive","travel","train"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('monorail', '🚝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚞','1F69E','mountain railway',default,'{"car","railway","mountain"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"car","railway","mountain"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mountain_railway', '🚞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚋','1F68B','tram car',default,'{"car","trolleybus","tram"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"car","trolleybus","tram"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tram_car', '🚋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚌','1F68C','bus',default,'{"travel","transportation","vehicle","bus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"travel","transportation","vehicle","bus"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bus', '🚌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚍️','1F68D','oncoming bus',default,'{"oncoming","bus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"oncoming","bus"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('oncoming_bus', '🚍️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚎','1F68E','trolleybus',default,'{"trolley","tram","bus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"trolley","tram","bus"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('trolleybus', '🚎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚐','1F690','minibus',default,'{"car","travel","transportation","bus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"car","travel","transportation","bus"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('minibus', '🚐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚑️','1F691','ambulance',default,'{"alarm","ambulance","vehicle","hospital","doctor","travel","help"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alarm","ambulance","vehicle","hospital","doctor","travel","help"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ambulance', '🚑️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚒','1F692','fire engine',default,'{"alarm","fire engine","travel","red","fire","engine","truck"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alarm","fire engine","travel","red","fire","engine","truck"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fire_engine', '🚒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚓','1F693','police car',default,'{"car","patrol","police","travel"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"car","patrol","police","travel"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('police_car', '🚓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚔️','1F694','oncoming police car',default,'{"car","police","oncoming"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"car","police","oncoming"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('oncoming_police_car', '🚔️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚕','1F695','taxi',default,'{"transportation","vehicle","car","travel","taxi","cab"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"transportation","vehicle","car","travel","taxi","cab"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('taxi', '🚕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚖','1F696','oncoming taxi',default,'{"oncoming","taxi"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"oncoming","taxi"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('oncoming_taxi', '🚖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚗','1F697','automobile',default,'{"transportation","vehicle","car","travel","automobile"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"transportation","vehicle","car","travel","automobile"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('car', '🚗') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('red_car', '🚗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚘️','1F698','oncoming automobile',default,'{"car","automobile","oncoming"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"car","automobile","oncoming"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('oncoming_automobile', '🚘️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚙','1F699','sport utility vehicle',default,'{"transportation","vehicle","utility","sport","recreational","car","travel","automobile","sport utility"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"transportation","vehicle","utility","sport","recreational","car","travel","automobile","sport utility"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('blue_car', '🚙') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('suv', '🚙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛻','1F6FB','pickup truck',default,'{"pick-up","pickup","truck"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pick-up","pickup","truck"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pickup_truck', '🛻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚚','1F69A','delivery truck',default,'{"transportation","trucker","driver","car","travel","delivery","truck"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"transportation","trucker","driver","car","travel","delivery","truck"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('delivery_truck', '🚚') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('truck', '🚚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚛','1F69B','articulated lorry',default,'{"transportation","semi","trucker","truck driver","lorry","car","travel","truck","delivery truck"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"transportation","semi","trucker","truck driver","lorry","car","travel","truck","delivery truck"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('articulated_lorry', '🚛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚜','1F69C','tractor',default,'{"tractor","vehicle","acre","towing","farming","farm","field"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tractor","vehicle","acre","towing","farming","farm","field"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tractor', '🚜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏎️','1F3CE','racing car',default,'{"car","sports","racing","motor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"car","sports","racing","motor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('racing_car', '🏎️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏍️','1F3CD','motorcycle',default,'{"motorsports","vehicle","racing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"motorsports","vehicle","racing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('motorcycle', '🏍️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛵','1F6F5','motor scooter',default,'{"bicycle","transportation","motor","scooter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bicycle","transportation","motor","scooter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('motor_scooter', '🛵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦽','1F9BD','manual wheelchair',default,'{"accessibility"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('manual_wheelchair', '🦽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦼','1F9BC','motorized wheelchair',default,'{"accessibility"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('motorized_wheelchair', '🦼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛺','1F6FA','auto rickshaw',default,'{"tuk tuk"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tuk tuk"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('auto_rickshaw', '🛺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚲️','1F6B2','bicycle',default,'{"bicycle","vehicle","bike"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bicycle","vehicle","bike"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bicycle', '🚲️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bike', '🚲️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛴','1F6F4','kick scooter',default,'{"scooter","kick","city roller"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"scooter","kick","city roller"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('scooter', '🛴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛹','1F6F9','skateboard',default,'{"board"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"board"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('skateboard', '🛹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛼','1F6FC','roller skate',default,'{"roller","skate"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"roller","skate"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('roller_skate', '🛼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚏','1F68F','bus stop',default,'{"stop","bus","traffic","travel","station","departure","bus stop","arrive"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stop","bus","traffic","travel","station","departure","bus stop","arrive"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('busstop', '🚏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛣️','1F6E3','motorway',default,'{"highway","road"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"highway","road"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('motorway', '🛣️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛤️','1F6E4','railway track',default,'{"railway","train"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"railway","train"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('railway_track', '🛤️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛢️','1F6E2','oil drum',default,'{"drum","oil"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"drum","oil"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('oil_drum', '🛢️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛽️','26FD','fuel pump',default,'{"transportation","pump","diesel","station","gas","fuel","fuelpump"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"transportation","pump","diesel","station","gas","fuel","fuelpump"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fuelpump', '⛽️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛞','1F6DE','wheel',default,'{"turn","tire","circle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"turn","tire","circle"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wheel', '🛞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚨','1F6A8','police car light',default,'{"police","revolving","car","light","beacon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"police","revolving","car","light","beacon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rotating_light', '🚨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚥','1F6A5','horizontal traffic light',default,'{"signal","green","yellow","traffic","red","traffic light","light"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"signal","green","yellow","traffic","red","traffic light","light"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('traffic_light', '🚥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚦','1F6A6','vertical traffic light',default,'{"signal","green","yellow","traffic","vertical","red","light"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"signal","green","yellow","traffic","vertical","red","light"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('vertical_traffic_light', '🚦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛑','1F6D1','stop sign',default,'{"signal","stop","octagonal","sign","warning"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"signal","stop","octagonal","sign","warning"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('octagonal_sign', '🛑') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('stop_sign', '🛑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚧','1F6A7','construction',default,'{"barrier","stop","attention","traffic","warning"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"barrier","stop","attention","traffic","warning"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('construction', '🚧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚓️','2693','anchor',default,'{"atlantic","tool","ship","water","anchor","travel","boat","ocean","metal","sea"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"atlantic","tool","ship","water","anchor","travel","boat","ocean","metal","sea"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('anchor', '⚓️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛟','1F6DF','ring buoy',default,'{"life preserver","float","life saver","rescue","safety"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"life preserver","float","life saver","rescue","safety"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ring_buoy', '🛟') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('lifebuoy', '🛟') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛵️','26F5','sailboat',default,'{"atlantic","sail","ship","sailboat","water","travel","yacht","boat","ocean","sea","resort","passengers"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"atlantic","sail","ship","sailboat","water","travel","yacht","boat","ocean","sea","resort","passengers"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sailboat', '⛵️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛶','1F6F6','canoe',default,'{"boat"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"boat"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('canoe', '🛶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚤','1F6A4','speedboat',default,'{"atlantic","speed","ship","water","travel","boat","ocean","sea","passengers"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"atlantic","speed","ship","water","travel","boat","ocean","sea","passengers"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('speedboat', '🚤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛳️','1F6F3','passenger ship',default,'{"atlantic","ship","water","travel","boat","ocean","sea","passengers","passenger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"atlantic","ship","water","travel","boat","ocean","sea","passengers","passenger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cruise_ship', '🛳️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('passenger_ship', '🛳️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛴️','26F4','ferry',default,'{"boat","passenger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"boat","passenger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ferry', '⛴️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛥️','1F6E5','motor boat',default,'{"motorboat","atlantic","ship","motor","water","travel","boat","ocean","sea","passengers"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"motorboat","atlantic","ship","motor","water","travel","boat","ocean","sea","passengers"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('motorboat', '🛥️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚢','1F6A2','ship',default,'{"atlantic","ship","water","travel","boat","ocean","sea","passengers","passenger"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"atlantic","ship","water","travel","boat","ocean","sea","passengers","passenger"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ship', '🚢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✈️','2708','airplane',default,'{"air","airplane","sky","travel","fly","aeroplane","departure","arrive"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"air","airplane","sky","travel","fly","aeroplane","departure","arrive"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('airplane', '✈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛩️','1F6E9','small airplane',default,'{"air","airplane","sky","travel","fly","aeroplane"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"air","airplane","sky","travel","fly","aeroplane"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('small_airplane', '🛩️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛫','1F6EB','airplane departure',default,'{"airplane","departures","air","sky","travel","fly","aeroplane","departure","check-in"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"airplane","departures","air","sky","travel","fly","aeroplane","departure","check-in"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('airplane_departure', '🛫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛬','1F6EC','airplane arrival',default,'{"airplane","arrivals","air","sky","arriving","travel","fly","aeroplane","arrive","landing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"airplane","arrivals","air","sky","arriving","travel","fly","aeroplane","arrive","landing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('airplane_arriving', '🛬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪂','1FA82','parachute',default,'{"skydive","parasail","hang-glide"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"skydive","parasail","hang-glide"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('parachute', '🪂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💺','1F4BA','seat',default,'{"airplane","comfort","lounge","seat","sitting","chair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"airplane","comfort","lounge","seat","sitting","chair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('seat', '💺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚁','1F681','helicopter',default,'{"air","transportation","vehicle","sky","helicopter","fly","flying"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"air","transportation","vehicle","sky","helicopter","fly","flying"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('helicopter', '🚁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚟','1F69F','suspension railway',default,'{"railway","suspension"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"railway","suspension"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('suspension_railway', '🚟') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚠','1F6A0','mountain cableway',default,'{"gondola","mountain","travel","cable","high"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gondola","mountain","travel","cable","high"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mountain_cableway', '🚠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚡','1F6A1','aerial tramway',default,'{"gondola","car","aerial","cable","tramway"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gondola","car","aerial","cable","tramway"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('aerial_tramway', '🚡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛰️','1F6F0','satellite',default,'{"galaxy","satellite","space"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"galaxy","satellite","space"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('satellite', '🛰️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚀','1F680','rocket',default,'{"transportation","space","galaxy","alien","adventure","rocket"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"transportation","space","galaxy","alien","adventure","rocket"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rocket', '🚀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛸','1F6F8','flying saucer',default,'{"space","ufo","alien","planets","adventures","UFO"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"space","ufo","alien","planets","adventures","UFO"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flying_saucer', '🛸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛎️','1F6CE','bellhop bell',default,'{"hotel","bell","bellhop"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hotel","bell","bellhop"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bellhop', '🛎️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧳','1F9F3','luggage',default,'{"travel","packing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"travel","packing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('luggage', '🧳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⌛️','231B','hourglass done',default,'{"hourglass","timer","sand","countdown"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hourglass","timer","sand","countdown"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hourglass', '⌛️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏳️','23F3','hourglass not done',default,'{"hourglass","timer","sand"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hourglass","timer","sand"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hourglass_flowing_sand', '⏳️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⌚️','231A','watch',default,'{"clock","watch","time"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clock","watch","time"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('watch', '⌚️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏰','23F0','alarm clock',default,'{"alarm","clock"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alarm","clock"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('alarm_clock', '⏰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏱️','23F1','stopwatch',default,'{"clock"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clock"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('stopwatch', '⏱️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏲️','23F2','timer clock',default,'{"timer","clock","time"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"timer","clock","time"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('timer_clock', '⏲️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕰️','1F570','mantelpiece clock',default,'{"clock"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clock"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock', '🕰️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕛️','1F55B','twelve o’clock',default,'{"o’clock","00","clock","time","twelve","12","12:00"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"o’clock","00","clock","time","twelve","12","12:00"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock12', '🕛️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕧️','1F567','twelve-thirty',default,'{"12:30","clock","time","thirty","twelve","12"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"12:30","clock","time","thirty","twelve","12"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock1230', '🕧️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕐️','1F550','one o’clock',default,'{"1:00","1","o’clock","00","clock","time","one"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"1:00","1","o’clock","00","clock","time","one"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock1', '🕐️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕜️','1F55C','one-thirty',default,'{"1","clock","1:30","time","thirty","one"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"1","clock","1:30","time","thirty","one"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock130', '🕜️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕑️','1F551','two o’clock',default,'{"o’clock","2","00","two","clock","2:00","time"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"o’clock","2","00","two","clock","2:00","time"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock2', '🕑️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕝️','1F55D','two-thirty',default,'{"2","two","clock","2:30","time","thirty"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"2","two","clock","2:30","time","thirty"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock230', '🕝️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕒️','1F552','three o’clock',default,'{"o’clock","three","00","clock","time","3:00","3"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"o’clock","three","00","clock","time","3:00","3"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock3', '🕒️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕞️','1F55E','three-thirty',default,'{"three","3:30","clock","time","thirty","3"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"three","3:30","clock","time","thirty","3"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock330', '🕞️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕓️','1F553','four o’clock',default,'{"o’clock","00","clock","4:00","time","four","4"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"o’clock","00","clock","4:00","time","four","4"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock4', '🕓️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕟️','1F55F','four-thirty',default,'{"clock","time","thirty","4:30","four","4"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clock","time","thirty","4:30","four","4"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock430', '🕟️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕔️','1F554','five o’clock',default,'{"o’clock","00","five","clock","5:00","time","5"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"o’clock","00","five","clock","5:00","time","5"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock5', '🕔️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕠️','1F560','five-thirty',default,'{"5:30","five","clock","time","thirty","5"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"5:30","five","clock","time","thirty","5"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock530', '🕠️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕕️','1F555','six o’clock',default,'{"o’clock","00","6","clock","six","time","6:00"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"o’clock","00","6","clock","six","time","6:00"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock6', '🕕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕡️','1F561','six-thirty',default,'{"6","clock","six","time","thirty","6:30"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"6","clock","six","time","thirty","6:30"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock630', '🕡️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕖️','1F556','seven o’clock',default,'{"o’clock","00","seven","clock","time","7","7:00"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"o’clock","00","seven","clock","time","7","7:00"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock7', '🕖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕢️','1F562','seven-thirty',default,'{"seven","clock","time","thirty","7:30","7"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"seven","clock","time","thirty","7:30","7"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock730', '🕢️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕗️','1F557','eight o’clock',default,'{"eight","o’clock","00","clock","8:00","time","8"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"eight","o’clock","00","clock","8:00","time","8"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock8', '🕗️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕣️','1F563','eight-thirty',default,'{"eight","clock","time","thirty","8","8:30"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"eight","clock","time","thirty","8","8:30"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock830', '🕣️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕘️','1F558','nine o’clock',default,'{"o’clock","00","9:00","clock","time","nine","9"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"o’clock","00","9:00","clock","time","nine","9"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock9', '🕘️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕤️','1F564','nine-thirty',default,'{"9:30","clock","time","thirty","nine","9"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"9:30","clock","time","thirty","nine","9"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock930', '🕤️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕙️','1F559','ten o’clock',default,'{"o’clock","00","clock","10:00","ten","10","time"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"o’clock","00","clock","10:00","ten","10","time"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock10', '🕙️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕥️','1F565','ten-thirty',default,'{"clock","10:30","ten","10","time","thirty"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clock","10:30","ten","10","time","thirty"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock1030', '🕥️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕚️','1F55A','eleven o’clock',default,'{"o’clock","eleven","00","clock","11:00","11","time"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"o’clock","eleven","00","clock","11:00","11","time"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock11', '🕚️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕦️','1F566','eleven-thirty',default,'{"eleven","clock","11","time","thirty","11:30"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"eleven","clock","11","time","thirty","11:30"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clock1130', '🕦️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌑','1F311','new moon',default,'{"moon","dark"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"moon","dark"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('new_moon', '🌑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌒','1F312','waxing crescent moon',default,'{"moon","waxing","crescent"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"moon","waxing","crescent"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('waxing_crescent_moon', '🌒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌓','1F313','first quarter moon',default,'{"moon","quarter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"moon","quarter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('first_quarter_moon', '🌓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌔','1F314','waxing gibbous moon',default,'{"moon","gibbous","waxing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"moon","gibbous","waxing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('waxing_gibbous_moon', '🌔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌕️','1F315','full moon',default,'{"moon","full"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"moon","full"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('full_moon', '🌕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌖','1F316','waning gibbous moon',default,'{"moon","gibbous","waning"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"moon","gibbous","waning"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('waning_gibbous_moon', '🌖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌗','1F317','last quarter moon',default,'{"moon","quarter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"moon","quarter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('last_quarter_moon', '🌗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌘','1F318','waning crescent moon',default,'{"moon","crescent","waning"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"moon","crescent","waning"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('waning_crescent_moon', '🌘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌙','1F319','crescent moon',default,'{"night","moon","night sky","celestial body","crescent moon","crescent","planet","full moon","far away"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"night","moon","night sky","celestial body","crescent moon","crescent","planet","full moon","far away"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('crescent_moon', '🌙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌚','1F31A','new moon face',default,'{"moon","face"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"moon","face"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('new_moon_with_face', '🌚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌛','1F31B','first quarter moon face',default,'{"night","moon","night sky","celestial bodies","face","first quarter","half moon","sickle","planet","round","quarter","starry sky","light","moonlight","full moon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"night","moon","night sky","celestial bodies","face","first quarter","half moon","sickle","planet","round","quarter","starry sky","light","moonlight","full moon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('first_quarter_moon_with_face', '🌛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌜️','1F31C','last quarter moon face',default,'{"night","moon","night sky","celestial bodies","face","half moon","sickle","planet","round","last quarter","quarter","starry sky","light","moonlight","full moon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"night","moon","night sky","celestial bodies","face","half moon","sickle","planet","round","last quarter","quarter","starry sky","light","moonlight","full moon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('last_quarter_moon_with_face', '🌜️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌡️','1F321','thermometer',default,'{"degrees","weather","sick","temperatures","cold","room temperatures","fever","heat","warming","celsius","measure"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"degrees","weather","sick","temperatures","cold","room temperatures","fever","heat","warming","celsius","measure"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('thermometer', '🌡️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☀️','2600','sun',default,'{"heavenly body","bright","feel good","fireball","hot","beach","sunbeams","warm","fire","rays","sun","sunny","sunrise","tanning"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"heavenly body","bright","feel good","fireball","hot","beach","sunbeams","warm","fire","rays","sun","sunny","sunrise","tanning"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sun', '☀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌝','1F31D','full moon face',default,'{"night","moon","face","bright","disc","no clouds","stars","moonlight","full moon","full"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"night","moon","face","bright","disc","no clouds","stars","moonlight","full moon","full"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('full_moon_with_face', '🌝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌞','1F31E','sun with face',default,'{"celestial bodies","face","bright","fireball","hot","beach","star","warm","fire","rays","sun","sunrise","tanning"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"celestial bodies","face","bright","fireball","hot","beach","star","warm","fire","rays","sun","sunrise","tanning"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sun_with_face', '🌞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪐','1FA90','ringed planet',default,'{"saturnine","saturn"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"saturnine","saturn"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('saturn', '🪐') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ringed_planet', '🪐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⭐️','2B50','star',default,'{"small planet","sky","sparkle","yellow","star","shine","far away"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"small planet","sky","sparkle","yellow","star","shine","far away"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('star', '⭐️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌟','1F31F','glowing star',default,'{"glow","small planet","sky","milky way","glittery","sparkle","bright","yellow","star","shooting star","shining","shine","constellation","far away"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"glow","small planet","sky","milky way","glittery","sparkle","bright","yellow","star","shooting star","shining","shine","constellation","far away"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('glowing_star', '🌟') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('star2', '🌟') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌠','1F320','shooting star',default,'{"night","sky","lightning","shooting","sparkle","bright","falling","star","shooting star","star sky","shine","wish","far away"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"night","sky","lightning","shooting","sparkle","bright","falling","star","shooting star","star sky","shine","wish","far away"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shooting_star', '🌠') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('stars', '🌠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌌','1F30C','milky way',default,'{"space"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"space"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('milky_way', '🌌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☁️','2601','cloud',default,'{"cloudy","weather","misty","sky","rain","gray","cloud","fleecy clouds","dream","diffuse"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cloudy","weather","misty","sky","rain","gray","cloud","fleecy clouds","dream","diffuse"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cloud', '☁️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛅️','26C5','sun behind cloud',default,'{"cloudy","weather","behind","cool","cloud","sun","sunny","appear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cloudy","weather","behind","cool","cloud","sun","sunny","appear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sun_behind_cloud', '⛅️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('partly_sunny', '⛅️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛈️','26C8','cloud with lightning and rain',default,'{"weather","lightning","rain","cloud","thunder","thunderstorm","storm"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"weather","lightning","rain","cloud","thunder","thunderstorm","storm"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('thunder_cloud_and_rain', '⛈️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('stormy', '⛈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌤️','1F324','sun behind small cloud',default,'{"cloudy","weather","sky","behind","rain","cool","cloud","small","sun","sunny"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cloudy","weather","sky","behind","rain","cool","cloud","small","sun","sunny"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sunny', '🌤️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sun_behind_small_cloud', '🌤️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌥️','1F325','sun behind large cloud',default,'{"cloudy","weather","sky","behind","gray","large","rain","cloud","sun","diffuse"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cloudy","weather","sky","behind","gray","large","rain","cloud","sun","diffuse"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cloudy', '🌥️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sun_behind_large_cloud', '🌥️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌦️','1F326','sun behind rain cloud',default,'{"cloudy","weather","rain","behind","cool","cloud","wet","sun","rainy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cloudy","weather","rain","behind","cool","cloud","wet","sun","rainy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sun_behind_rain_cloud', '🌦️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sun_and_rain', '🌦️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌧️','1F327','cloud with rain',default,'{"cloudy","weather","stormy","rain","cool","cloud","falling","wet","down","raindrops"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cloudy","weather","stormy","rain","cool","cloud","falling","wet","down","raindrops"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cloud_with_rain', '🌧️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('rainy', '🌧️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌨️','1F328','cloud with snow',default,'{"cloudy","weather","stormy","snow","cold","ice","cloud","falling","wet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cloudy","weather","stormy","snow","cold","ice","cloud","falling","wet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cloud_with_snow', '🌨️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('snowy', '🌨️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌩️','1F329','cloud with lightning',default,'{"glaring","cloudy","weather","current","lightning","gray","cold","cloud","wet","voltage","light","light up","storm"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"glaring","cloudy","weather","current","lightning","gray","cold","cloud","wet","voltage","light","light up","storm"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lightning', '🌩️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cloud_with_lightning', '🌩️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌪️','1F32A','tornado',default,'{"blow","whirlwind","sky","severe weather","dangerous","typhoon","cyclone","cloud","hurricane","wind","tornado","storm"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"blow","whirlwind","sky","severe weather","dangerous","typhoon","cyclone","cloud","hurricane","wind","tornado","storm"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tornado', '🌪️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌫️','1F32B','fog',default,'{"cloud"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cloud"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fog', '🌫️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌬️','1F32C','wind face',default,'{"blow","air","sky","face","cloud","mouth","blowing","mother nature","wind"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"blow","air","sky","face","cloud","mouth","blowing","mother nature","wind"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wind_blowing_face', '🌬️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌀','1F300','cyclone',default,'{"air","dizzy","typhoon","funnel","swirl","spiral","whirl","hurricane","twister","turbulent","rotation","rotate"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"air","dizzy","typhoon","funnel","swirl","spiral","whirl","hurricane","twister","turbulent","rotation","rotate"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cyclone', '🌀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌈','1F308','rainbow',default,'{"rainbow","rain","color","facet","sparkle","colors formed in the sky","sunbeams","unicorn","sunlight","colorful"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rainbow","rain","color","facet","sparkle","colors formed in the sky","sunbeams","unicorn","sunlight","colorful"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rainbow', '🌈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌂','1F302','closed umbrella',default,'{"umbrella","clothing","rain"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"umbrella","clothing","rain"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('closed_umbrella', '🌂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☂️','2602','umbrella',default,'{"rain","clothing","wet","drop","umbrella","raindrops","purple"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rain","clothing","wet","drop","umbrella","raindrops","purple"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('umbrella', '☂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☔️','2614','umbrella with rain drops',default,'{"rain","clothing","rain falling","drop","wet","umbrella","windy","drops","raindrops"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rain","clothing","rain falling","drop","wet","umbrella","windy","drops","raindrops"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('umbrella_with_rain', '☔️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛱️','26F1','umbrella on ground',default,'{"sun","umbrella","rain"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sun","umbrella","rain"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('beach_umbrella', '⛱️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('umbrella_on_ground', '⛱️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚡️','26A1','high voltage',default,'{"volts","current","lightning","danger","voltage","high voltage","lights","light","electric","zap","storm"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"volts","current","lightning","danger","voltage","high voltage","lights","light","electric","zap","storm"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('zap', '⚡️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('high_voltage', '⚡️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('❄️','2744','snowflake',default,'{"weather","wintry","snow","cold","ice","icy","snow storm","melting","season","snowflake","frosty","white"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"weather","wintry","snow","cold","ice","icy","snow storm","melting","season","snowflake","frosty","white"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('snowflake', '❄️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☃️','2603','snowman',default,'{"snow","cold"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"snow","cold"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('snowman2', '☃️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛄️','26C4','snowman without snow',default,'{"olaf","snowman","frosty the snowman","snow","cold","not snowing","frosty","winter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"olaf","snowman","frosty the snowman","snow","cold","not snowing","frosty","winter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('snowman', '⛄️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☄️','2604','comet',default,'{"space"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"space"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('comet', '☄️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔥','1F525','fire',default,'{"high temperature","glow","tool","flame","burn","hot","fire"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"high temperature","glow","tool","flame","burn","hot","fire"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fire', '🔥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💧','1F4A7','droplet',default,'{"puddle","rain","cold","fluid","drop","wet","comic","liquid","sweat","pearl","drops","droplets","raindrops","tear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"puddle","rain","cold","fluid","drop","wet","comic","liquid","sweat","pearl","drops","droplets","raindrops","tear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('droplet', '💧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🌊','1F30A','water wave',default,'{"air","salty","cold","wave","vacation","water","wet","beach","listen","ocean","sun","sea","surf","sough"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"air","salty","cold","wave","vacation","water","wet","beach","listen","ocean","sun","sea","surf","sough"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('water_wave', '🌊') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ocean', '🌊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎃','1F383','jack-o-lantern',default,'{"lantern","jack","celebration","pumpkin","halloween"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"lantern","jack","celebration","pumpkin","halloween"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('jack_o_lantern', '🎃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎄','1F384','Christmas tree',default,'{"xmas","celebration","tree","christmas"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"xmas","celebration","tree","christmas"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('christmas_tree', '🎄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎆','1F386','fireworks',default,'{"celebration"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"celebration"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fireworks', '🎆') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎇','1F387','sparkler',default,'{"sparkle","fireworks","celebration"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sparkle","fireworks","celebration"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sparkler', '🎇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧨','1F9E8','firecracker',default,'{"explosive","fireworks","dynamite"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"explosive","fireworks","dynamite"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('firecracker', '🧨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✨','2728','sparkles',default,'{"magic","beautiful","sparkle","star","*"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"magic","beautiful","sparkle","star","*"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sparkles', '✨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎈','1F388','balloon',default,'{"balloon","decoration","birthday","celebration","party"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"balloon","decoration","birthday","celebration","party"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('balloon', '🎈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎉','1F389','party popper',default,'{"decoration","tada","celebration","happy","party","popper"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"decoration","tada","celebration","happy","party","popper"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('party_popper', '🎉') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('party', '🎉') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('tada', '🎉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎊','1F38A','confetti ball',default,'{"decoration","confetti","celebration","happy","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"decoration","confetti","celebration","happy","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('confetti_ball', '🎊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎋','1F38B','tanabata tree',default,'{"tree","japanese","celebration","banner"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tree","japanese","celebration","banner"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tanabata_tree', '🎋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎍','1F38D','pine decoration',default,'{"bamboo","japanese","pine","celebration"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bamboo","japanese","pine","celebration"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bamboo', '🎍') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎎','1F38E','Japanese dolls',default,'{"japanese dolls","doll","celebration","japanese","festival"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"japanese dolls","doll","celebration","japanese","festival"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dolls', '🎎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎏','1F38F','carp streamer',default,'{"carp","celebration","streamer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"carp","celebration","streamer"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flags', '🎏') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('carp_streamer', '🎏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎐','1F390','wind chime',default,'{"wind","celebration","chime","bell"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wind","celebration","chime","bell"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wind_chime', '🎐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎑','1F391','moon viewing ceremony',default,'{"moon","ceremony","celebration"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"moon","ceremony","celebration"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rice_scene', '🎑') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('moon_ceremony', '🎑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧧','1F9E7','red envelope',default,'{"money","hóngbāo","gift","lai see","good luck"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","hóngbāo","gift","lai see","good luck"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('red_envelope', '🧧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎀','1F380','ribbon',default,'{"girly","fashion","decoration","present","celebration","girl","party","gift"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"girly","fashion","decoration","present","celebration","girl","party","gift"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ribbon', '🎀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎁','1F381','wrapped gift',default,'{"birthday","present","celebration","wrapped","christmas","box","gift"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"birthday","present","celebration","wrapped","christmas","box","gift"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('gift', '🎁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎗️','1F397','reminder ribbon',default,'{"reminder","ribbon","celebration"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"reminder","ribbon","celebration"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('reminder_ribbon', '🎗️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎟️','1F39F','admission tickets',default,'{"admission","ticket"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"admission","ticket"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tickets', '🎟️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('admission_tickets', '🎟️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎫','1F3AB','ticket',default,'{"admission"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"admission"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ticket', '🎫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎖️','1F396','military medal',default,'{"medal","military","celebration","medallion","ribbon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"medal","military","celebration","medallion","ribbon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('military_medal', '🎖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏆️','1F3C6','trophy',default,'{"championship","trophy","gold cup","winner","award","prize"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"championship","trophy","gold cup","winner","award","prize"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('trophy', '🏆️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏅','1F3C5','sports medal',default,'{"medal","sports","sporting"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"medal","sports","sporting"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sports_medal', '🏅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥇','1F947','1st place medal',default,'{"first place medal","medal","first","1st place medal","gold","gold medal"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"first place medal","medal","first","1st place medal","gold","gold medal"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('1st', '🥇') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('first_place_medal', '🥇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥈','1F948','2nd place medal',default,'{"second place medal","silver medal","medal","second place","silver","2nd place medal","second"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"second place medal","silver medal","medal","second place","silver","2nd place medal","second"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('second_place_medal', '🥈') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('2nd', '🥈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥉','1F949','3rd place medal',default,'{"third place","third","medal","bronze","bronze medal","third place medal","3rd place medal"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"third place","third","medal","bronze","bronze medal","third place medal","3rd place medal"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('3rd', '🥉') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('third_place_medal', '🥉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚽️','26BD','soccer ball',default,'{"football","ball game","team sports","soccer","game","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"football","ball game","team sports","soccer","game","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('soccer', '⚽️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚾️','26BE','baseball',default,'{"baseball","ball","ball game","team sports","game","american","white"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"baseball","ball","ball game","team sports","game","american","white"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('baseball', '⚾️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥎','1F94E','softball',default,'{"underarm","glove","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"underarm","glove","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('softball', '🥎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏀','1F3C0','basketball',default,'{"ball","team sport","sport","hoop","canadian sport","game","orange ball","basketball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ball","team sport","sport","hoop","canadian sport","game","orange ball","basketball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('basketball', '🏀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏐','1F3D0','volleyball',default,'{"olympic games","team sport","sport","ball game","hobby","game","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"olympic games","team sport","sport","ball game","hobby","game","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('volleyball', '🏐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏈','1F3C8','american football',default,'{"superbowl","team sport","oval ball","football","ball game","american game","american","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"superbowl","team sport","oval ball","football","ball game","american game","american","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('football', '🏈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏉','1F3C9','rugby football',default,'{"brown ball","league","team sport","sport","football","rugby","union","british sports","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"brown ball","league","team sport","sport","football","rugby","union","british sports","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rugby_football', '🏉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎾','1F3BE','tennis',default,'{"sport","ball game","racquet","tennis ball","tennis","racket","game","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sport","ball game","racquet","tennis ball","tennis","racket","game","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tennis', '🎾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥏','1F94F','flying disc',default,'{"ultimate"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ultimate"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flying_disc', '🥏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎳','1F3B3','bowling',default,'{"game","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"game","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bowling', '🎳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏏','1F3CF','cricket game',default,'{"bat","cricket bat and ball","cricket","hobby","game","activity","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bat","cricket bat and ball","cricket","hobby","game","activity","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cricket_game', '🏏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏑','1F3D1','field hockey',default,'{"ice hockey","field hockey stick and ball","team sport","stick","puck","hockey stick","field","hockey","game","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ice hockey","field hockey stick and ball","team sport","stick","puck","hockey stick","field","hockey","game","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('field_hockey', '🏑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏒','1F3D2','ice hockey',default,'{"ice hockey","team sport","ice","stick","puck","hockey stick","hockey","field hockey","game"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ice hockey","team sport","ice","stick","puck","hockey stick","hockey","field hockey","game"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hockey', '🏒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥍','1F94D','lacrosse',default,'{"goal","stick","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"goal","stick","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lacrosse', '🥍') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏓','1F3D3','ping pong',default,'{"bat","ping pong","ball game","hobby","table tennis","game","paddle","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bat","ping pong","ball game","hobby","table tennis","game","paddle","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ping_pong', '🏓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏸','1F3F8','badminton',default,'{"game","racquet","birdie","shuttlecock"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"game","racquet","birdie","shuttlecock"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('badminton', '🏸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥊','1F94A','boxing glove',default,'{"beat","slap in your face","glove","sport","mitt","fist","slap","muhammad ali","red","boxing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"beat","slap in your face","glove","sport","mitt","fist","slap","muhammad ali","red","boxing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('boxing_glove', '🥊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥋','1F94B','martial arts uniform',default,'{"taekwondo","keikogi","sport","uniform","judo","martial arts","karate","white"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"taekwondo","keikogi","sport","uniform","judo","martial arts","karate","white"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('martial_arts_uniform', '🥋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥅','1F945','goal net',default,'{"goal","net"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"goal","net"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('goal_net', '🥅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛳️','26F3','flag in hole',default,'{"golf flag","goal","sport","flag","hole","golf","golf hole with flag","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"golf flag","goal","sport","flag","hole","golf","golf hole with flag","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('golf', '⛳️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛸️','26F8','ice skate',default,'{"ice","skate"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ice","skate"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ice_skate', '⛸️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎣','1F3A3','fishing pole',default,'{"pole","fishing rod","caught","fishing pole","fish","hobby","line"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pole","fishing rod","caught","fishing pole","fish","hobby","line"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fishing_pole_and_fish', '🎣') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('fishing_pole', '🎣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🤿','1F93F','diving mask',default,'{"diving","snorkeling","scuba"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"diving","snorkeling","scuba"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('diving_mask', '🤿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎽','1F3BD','running shirt',default,'{"athletics","sash","running","shirt"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"athletics","sash","running","shirt"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('running_shirt_with_sash', '🎽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('running_shirt', '🎽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎿','1F3BF','skis',default,'{"ski","ski boot","snow","skiing","sport","hobby","to ski","winter","skis"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ski","ski boot","snow","skiing","sport","hobby","to ski","winter","skis"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ski', '🎿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛷','1F6F7','sled',default,'{"sledge","sleigh"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sledge","sleigh"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sled', '🛷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥌','1F94C','curling stone',default,'{"game","rock"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"game","rock"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('curling_stone', '🥌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎯','1F3AF','bullseye',default,'{"hit","darts","bullseye","direct hit","direct","dart","target","archery","game","dart board"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hit","darts","bullseye","direct hit","direct","dart","target","archery","game","dart board"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bullseye', '🎯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('direct_hit', '🎯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('dart', '🎯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪀','1FA80','yo-yo',default,'{"fluctuate","toy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fluctuate","toy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('yo_yo', '🪀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪁','1FA81','kite',default,'{"fly","soar"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fly","soar"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kite', '🪁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔫','1F52B','water pistol',default,'{"revolver","gun","tool","water","pistol","weapon","handgun"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"revolver","gun","tool","water","pistol","weapon","handgun"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('gun', '🔫') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pistol', '🔫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎱','1F3B1','pool 8 ball',default,'{"snooker","eight","cue ball","pool","billiards","8 ball","billiard","8","black ball","game","magic 8 ball","pool ball","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"snooker","eight","cue ball","pool","billiards","8 ball","billiard","8","black ball","game","magic 8 ball","pool ball","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('8ball', '🎱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('billiards', '🎱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔮','1F52E','crystal ball',default,'{"tool","mystery","fairy tale","crystal","fortune","fantasy","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tool","mystery","fairy tale","crystal","fortune","fantasy","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('crystal_ball', '🔮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪄','1FA84','magic wand',default,'{"magic","witch","wizard"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"magic","witch","wizard"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('magic_wand', '🪄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎮️','1F3AE','video game',default,'{"controller","game","gamble"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"controller","game","gamble"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('controller', '🎮️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('video_game', '🎮️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕹️','1F579','joystick',default,'{"game","video game"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"game","video game"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('joystick', '🕹️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎰','1F3B0','slot machine',default,'{"game","slot"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"game","slot"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('slot_machine', '🎰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎲','1F3B2','game die',default,'{"isometric","die","board game","game","dice"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"isometric","die","board game","game","dice"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('game_die', '🎲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧩','1F9E9','puzzle piece',default,'{"interlocking","clue","piece","puzzle","jigsaw"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"interlocking","clue","piece","puzzle","jigsaw"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('puzzle_piece', '🧩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('jigsaw', '🧩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧸','1F9F8','teddy bear',default,'{"toy","plush","stuffed","plaything"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"toy","plush","stuffed","plaything"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('teddy_bear', '🧸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪅','1FA85','piñata',default,'{"party","celebration"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"party","celebration"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pinata', '🪅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪩','1FAA9','mirror ball',default,'{"dance","disco","party","glitter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dance","disco","party","glitter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('disco', '🪩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('disco_ball', '🪩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mirror_ball', '🪩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪆','1FA86','nesting dolls',default,'{"nesting","russia","doll"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"nesting","russia","doll"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('nesting_dolls', '🪆') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♠️','2660','spade suit',default,'{"card","game"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"card","game"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('spades', '♠️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♥️','2665','heart suit',default,'{"card","game"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"card","game"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hearts', '♥️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♦️','2666','diamond suit',default,'{"card","game"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"card","game"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('diamonds', '♦️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♣️','2663','club suit',default,'{"card","game"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"card","game"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clubs', '♣️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♟️','265F','chess pawn',default,'{"dupe","chess","expendable"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dupe","chess","expendable"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('chess_pawn', '♟️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🃏','1F0CF','joker',default,'{"card","wildcard","game"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"card","wildcard","game"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('black_joker', '🃏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🀄️','1F004','mahjong red dragon',default,'{"game","red","mahjong"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"game","red","mahjong"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mahjong', '🀄️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎴','1F3B4','flower playing cards',default,'{"game","playing","japanese","card","flower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"game","playing","japanese","card","flower"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flower_playing_cards', '🎴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎭️','1F3AD','performing arts',default,'{"theater","entertainment","mask","art","culture","theatre","performing","education"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"theater","entertainment","mask","art","culture","theatre","performing","education"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('performing_arts', '🎭️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖼️','1F5BC','framed picture',default,'{"artist","entertainment","culture","picture","painting","art","frame","museum"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"artist","entertainment","culture","picture","painting","art","frame","museum"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('framed_picture', '🖼️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('frame_with_picture', '🖼️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎨','1F3A8','artist palette',default,'{"artist","leisure","entertainment","culture","palette","painting","art","museum"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"artist","leisure","entertainment","culture","palette","painting","art","museum"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('art', '🎨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('palette', '🎨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧵','1F9F5','thread',default,'{"sewing","needle","string","spool"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sewing","needle","string","spool"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('thread', '🧵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪡','1FAA1','sewing needle',default,'{"needle","sewing","stitches","embroidery","tailoring","sutures"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"needle","sewing","stitches","embroidery","tailoring","sutures"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sewing_needle', '🪡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧶','1F9F6','yarn',default,'{"crochet","knit","ball"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"crochet","knit","ball"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('yarn', '🧶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪢','1FAA2','knot',default,'{"tie","rope","tangled","twine","twist"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tie","rope","tangled","twine","twist"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('knot', '🪢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👓️','1F453','glasses',default,'{"eyeglasses","clothing","eyewear","eye"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"eyeglasses","clothing","eyewear","eye"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('glasses', '👓️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('eyeglasses', '👓️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕶️','1F576','sunglasses',default,'{"glasses","sunglasses","eye","dark","eyewear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"glasses","sunglasses","eye","dark","eyewear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sunglasses', '🕶️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥽','1F97D','goggles',default,'{"swimming","welding","eye protection"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"swimming","welding","eye protection"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('goggles', '🥽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥼','1F97C','lab coat',default,'{"scientist","experiment","doctor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"scientist","experiment","doctor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lab_coat', '🥼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦺','1F9BA','safety vest',default,'{"safety","vest","emergency"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"safety","vest","emergency"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('safety_vest', '🦺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👔','1F454','necktie',default,'{"tie","cravatte","clothing","smart"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tie","cravatte","clothing","smart"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('necktie', '👔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👕','1F455','t-shirt',default,'{"shirt","clothing","tshirt"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"shirt","clothing","tshirt"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shirt', '👕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👖','1F456','jeans',default,'{"trousers","clothing","pants"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"trousers","clothing","pants"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('jeans', '👖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧣','1F9E3','scarf',default,'{"neck"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"neck"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('scarf', '🧣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧤','1F9E4','gloves',default,'{"hand"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hand"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('gloves', '🧤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧥','1F9E5','coat',default,'{"jacket"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"jacket"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('coat', '🧥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧦','1F9E6','socks',default,'{"stocking"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stocking"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('socks', '🧦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👗','1F457','dress',default,'{"woman","beautiful","clothing","dress"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","beautiful","clothing","dress"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dress', '👗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👘','1F458','kimono',default,'{"clothing","japan"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clothing","japan"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kimono', '👘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥻','1F97B','sari',default,'{"clothing","dress"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clothing","dress"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sari', '🥻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🩱','1FA71','one-piece swimsuit',default,'{"bathing suit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bathing suit"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('one_piece_swimsuit', '🩱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🩲','1FA72','briefs',default,'{"one-piece","bathing suit","swimsuit","underwear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"one-piece","bathing suit","swimsuit","underwear"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('briefs', '🩲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🩳','1FA73','shorts',default,'{"underwear","bathing suit","pants"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"underwear","bathing suit","pants"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shorts', '🩳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👙','1F459','bikini',default,'{"summer","clothing","swim"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"summer","clothing","swim"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bikini', '👙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👚','1F45A','woman’s clothes',default,'{"clothing","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clothing","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('womans_clothes', '👚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪭','1FAAD','folding hand fan',default,'{"fan","dance","cooling","hot","shy","flutter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fan","dance","cooling","hot","shy","flutter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('folding_fan', '🪭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👛','1F45B','purse',default,'{"money","clothing","coin"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","clothing","coin"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('purse', '👛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👜','1F45C','handbag',default,'{"purse","bag","clothing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"purse","bag","clothing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('handbag', '👜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👝','1F45D','clutch bag',default,'{"pouch","bag","clothing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pouch","bag","clothing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pouch', '👝') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('clutch_bag', '👝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛍️','1F6CD','shopping bags',default,'{"shopping","buy","bag","hotel"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"shopping","buy","bag","hotel"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shopping_bags', '🛍️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎒','1F392','backpack',default,'{"school","rucksack","satchel","young","bag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"school","rucksack","satchel","young","bag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('backpack', '🎒') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('school_satchel', '🎒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🩴','1FA74','thong sandal',default,'{"zōri","beach sandals","thong sandals","thongs","sandals"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"zōri","beach sandals","thong sandals","thongs","sandals"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('thong_sandal', '🩴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👞','1F45E','man’s shoe',default,'{"man","clothing","shoe"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","clothing","shoe"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mans_shoe', '👞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👟','1F45F','running shoe',default,'{"sneaker","athletic","clothing","shoe"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sneaker","athletic","clothing","shoe"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sneaker', '👟') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('athletic_shoe', '👟') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥾','1F97E','hiking boot',default,'{"camping","boot","backpacking","hiking"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"camping","boot","backpacking","hiking"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hiking_boot', '🥾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥿','1F97F','flat shoe',default,'{"slipper","ballet flat","slip-on"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"slipper","ballet flat","slip-on"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('womans_flat_shoe', '🥿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flat_shoe', '🥿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👠','1F460','high-heeled shoe',default,'{"woman","clothing","heel","shoe"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","clothing","heel","shoe"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('high_heel', '👠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👡','1F461','woman’s sandal',default,'{"woman","clothing","sandal","shoe"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","clothing","sandal","shoe"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sandal', '👡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🩰','1FA70','ballet shoes',default,'{"dance","ballet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dance","ballet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ballet_shoes', '🩰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👢','1F462','woman’s boot',default,'{"woman","boot","clothing","shoe"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"woman","boot","clothing","shoe"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('boot', '👢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪮','1FAAE','hair pick',default,'{"afro","pick","comb","hair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"afro","pick","comb","hair"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hair_pick', '🪮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👑','1F451','crown',default,'{"queen","clothing","king","crone","gold"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"queen","clothing","king","crone","gold"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('crown', '👑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👒','1F452','woman’s hat',default,'{"beautiful","hat","clothing","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"beautiful","hat","clothing","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('womans_hat', '👒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎩','1F3A9','top hat',default,'{"magic","tophat","clothing","top","hat"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"magic","tophat","clothing","top","hat"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('top_hat', '🎩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('tophat', '🎩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎓️','1F393','graduation cap',default,'{"graduation","clothing","celebration","cap","hat"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"graduation","clothing","celebration","cap","hat"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('graduation_cap', '🎓️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mortar_board', '🎓️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧢','1F9E2','billed cap',default,'{"baseball cap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"baseball cap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('billed_cap', '🧢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪖','1FA96','military helmet',default,'{"helmet","army","military","soldier","warrior"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"helmet","army","military","soldier","warrior"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('military_helmet', '🪖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛑️','26D1','rescue worker’s helmet',default,'{"helmet","face","aid","hat","cross"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"helmet","face","aid","hat","cross"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('helmet_with_cross', '⛑️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('rescue_worker_helmet', '⛑️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📿','1F4FF','prayer beads',default,'{"religion","beads","jewelry","prayer","clothing","necklace","expensive"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"religion","beads","jewelry","prayer","clothing","necklace","expensive"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('prayer_beads', '📿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💄','1F484','lipstick',default,'{"cosmetics","makeup"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cosmetics","makeup"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lipstick', '💄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💍','1F48D','ring',default,'{"diamond","expensive","jewelry"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"diamond","expensive","jewelry"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ring', '💍') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💎','1F48E','gem stone',default,'{"diamond","expensive","jewel","gem"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"diamond","expensive","jewel","gem"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('gem', '💎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔇','1F507','muted speaker',default,'{"silent","mute","quiet","speaker"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"silent","mute","quiet","speaker"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mute', '🔇') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('no_sound', '🔇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔈️','1F508','speaker low volume',default,'{"sound","soft"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sound","soft"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('quiet_sound', '🔈️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('low_volume', '🔈️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('speaker', '🔈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔉','1F509','speaker medium volume',default,'{"medium"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"medium"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sound', '🔉') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('medium_volumne', '🔉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔊','1F50A','speaker high volume',default,'{"sound","loud"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sound","loud"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('loud_sound', '🔊') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('high_volume', '🔊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📢','1F4E2','loudspeaker',default,'{"sound","loud","public address"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sound","loud","public address"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('loudspeaker', '📢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📣','1F4E3','megaphone',default,'{"cheering"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cheering"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mega', '📣') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('megaphone', '📣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📯','1F4EF','postal horn',default,'{"horn","postal","post"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"horn","postal","post"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('postal_horn', '📯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔔','1F514','bell',default,'{"sound","bell"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sound","bell"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bell', '🔔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔕','1F515','bell with slash',default,'{"quiet","silent","mute","forbidden","bell"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"quiet","silent","mute","forbidden","bell"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('no_bell', '🔕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎼','1F3BC','musical score',default,'{"music","violin key","rhythm","score"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"music","violin key","rhythm","score"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('musical_score', '🎼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎵','1F3B5','musical note',default,'{"song","melody","note","tone","music","sounds"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"song","melody","note","tone","music","sounds"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('musical_note', '🎵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎶','1F3B6','musical notes',default,'{"notes","harmony","melody","note","music","rhythm","sounds"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"notes","harmony","melody","note","music","rhythm","sounds"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('musical_notes', '🎶') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('notes', '🎶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎙️','1F399','studio microphone',default,'{"studio","recording","stereo","music","microphone","mic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"studio","recording","stereo","music","microphone","mic"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('studio_microphone', '🎙️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎚️','1F39A','level slider',default,'{"music slider","slider","level","studio","music"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"music slider","slider","level","studio","music"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('level_slider', '🎚️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎛️','1F39B','control knobs',default,'{"tool","knobs","control","mix","recording","music"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tool","knobs","control","mix","recording","music"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('control_knobs', '🎛️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎤','1F3A4','microphone',default,'{"singing","speech","karaoke","stage","tone","sound","loud","microphone","mic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"singing","speech","karaoke","stage","tone","sound","loud","microphone","mic"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('microphone', '🎤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎧️','1F3A7','headphone',default,'{"music","headphones","earbud"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"music","headphones","earbud"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('headphones', '🎧️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📻️','1F4FB','radio',default,'{"radio","video","stereo radio","analog radio"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"radio","video","stereo radio","analog radio"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('radio', '📻️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎷','1F3B7','saxophone',default,'{"instrument","saxophone","jazz","music","sax"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"instrument","saxophone","jazz","music","sax"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('saxophone', '🎷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪗','1FA97','accordion',default,'{"squeeze box","concertina"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"squeeze box","concertina"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('accordion', '🪗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎸','1F3B8','guitar',default,'{"instrument","e-guitar","guitar","chords","acoustic","music","instrumental"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"instrument","e-guitar","guitar","chords","acoustic","music","instrumental"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('guitar', '🎸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎹','1F3B9','musical keyboard',default,'{"keyboard","piano keys","instrument","chords","music","piano"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keyboard","piano keys","instrument","chords","music","piano"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('musical_keyboard', '🎹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎺','1F3BA','trumpet',default,'{"horns","trumpet","instrument","woodwind instrument","music"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"horns","trumpet","instrument","woodwind instrument","music"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('trumpet', '🎺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎻','1F3BB','violin',default,'{"instrument","violin","string","bow","fiddle","music"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"instrument","violin","string","bow","fiddle","music"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('violin', '🎻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪕','1FA95','banjo',default,'{"music","stringed"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"music","stringed"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('banjo', '🪕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🥁','1F941','drum',default,'{"drum","music","beat","drumsticks"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"drum","music","beat","drumsticks"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('drum', '🥁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪘','1FA98','long drum',default,'{"drum","beat","rhythm","conga"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"drum","beat","rhythm","conga"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('long_drum', '🪘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪇','1FA87','maracas',default,'{"shake","rattle","instrument","music","percussion"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"shake","rattle","instrument","music","percussion"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('maracas', '🪇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪈','1FA88','flute',default,'{"fife","pipe","woodwind","recorder","music"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fife","pipe","woodwind","recorder","music"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flute', '🪈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📱','1F4F1','mobile phone',default,'{"mobile","telephone","smartphone","cell","message","voice","communication","phone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mobile","telephone","smartphone","cell","message","voice","communication","phone"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mobile_phone', '📱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('iphone', '📱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('android', '📱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📲','1F4F2','mobile phone with arrow',default,'{"mobile","smartphone","arrow","cell","voice","receive","message","phone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mobile","smartphone","arrow","cell","voice","receive","message","phone"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mobile_phone_arrow', '📲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('calling', '📲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☎️','260E','telephone',default,'{"call","voice","communication","phone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"call","voice","communication","phone"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('telephone', '☎️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📞','1F4DE','telephone receiver',default,'{"call","phone","telephone","voice","communication","receiver"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"call","phone","telephone","voice","communication","receiver"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('telephone_receiver', '📞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📟️','1F4DF','pager',default,'{"pager"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pager"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pager', '📟️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📠','1F4E0','fax machine',default,'{"paper","fax","communication","office"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"paper","fax","communication","office"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fax', '📠') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('fax_machine', '📠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔋','1F50B','battery',default,'{"energy","electric","electricity","battery"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"energy","electric","electricity","battery"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('battery', '🔋') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪫','1FAAB','low battery',default,'{"electronic","low energy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"electronic","low energy"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('low_battery', '🪫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔌','1F50C','electric plug',default,'{"electric","electricity","plug"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"electric","electricity","plug"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('electric_plug', '🔌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💻️','1F4BB','laptop',default,'{"computer","retro","pc","personal","old"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"computer","retro","pc","personal","old"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('laptop', '💻️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖥️','1F5A5','desktop computer',default,'{"computer","electric","desktop","screen"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"computer","electric","desktop","screen"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('computer', '🖥️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('desktop_computer', '🖥️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖨️','1F5A8','printer',default,'{"color","computer","electric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"color","computer","electric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('printer', '🖨️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⌨️','2328','keyboard',default,'{"computer","electric","write","key"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"computer","electric","write","key"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('keyboard', '⌨️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖱️','1F5B1','computer mouse',default,'{"computer","electric","mouse"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"computer","electric","mouse"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('computer_mouse', '🖱️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖲️','1F5B2','trackball',default,'{"computer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"computer"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('trackball', '🖲️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💽','1F4BD','computer disk',default,'{"computer","retro","optical","minidisk","old","disk"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"computer","retro","optical","minidisk","old","disk"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('computer_disk', '💽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('minidisc', '💽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💾','1F4BE','floppy disk',default,'{"computer","retro","old","floppy","disk"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"computer","retro","old","floppy","disk"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('floppy_disk', '💾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💿️','1F4BF','optical disk',default,'{"computer","optical","analog","cd","disk"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"computer","optical","analog","cd","disk"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cd', '💿️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('optical_disk', '💿️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📀','1F4C0','dvd',default,'{"computer","optical","blu-ray","film","disk"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"computer","optical","blu-ray","film","disk"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dvd', '📀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧮','1F9EE','abacus',default,'{"calculation"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"calculation"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('abacus', '🧮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎥','1F3A5','movie camera',default,'{"cinema","record","camera","film","movie"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cinema","record","camera","film","movie"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('movie_camera', '🎥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎞️','1F39E','film frames',default,'{"cinema","frames","film","movie","clip"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cinema","frames","film","movie","clip"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('film_frames', '🎞️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📽️','1F4FD','film projector',default,'{"film clip","video","cinema","play","projector","film","movie"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"film clip","video","cinema","play","projector","film","movie"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('film_projector', '📽️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎬️','1F3AC','clapper board',default,'{"new recording","clapper","cut","movie"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"new recording","clapper","cut","movie"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clapper', '🎬️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📺️','1F4FA','television',default,'{"video","tv","flat screen","modern"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"video","tv","flat screen","modern"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tv', '📺️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📷️','1F4F7','camera',default,'{"video","camera","digital"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"video","camera","digital"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('camera', '📷️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📸','1F4F8','camera with flash',default,'{"bright","video","camera","flash"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bright","video","camera","flash"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('camera_with_flash', '📸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📹️','1F4F9','video camera',default,'{"video","record","camera","film","movie","recording"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"video","record","camera","film","movie","recording"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('video_camera', '📹️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📼','1F4FC','videocassette',default,'{"video","tape","cassette","record","vhs","film","movie","recording"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"video","tape","cassette","record","vhs","film","movie","recording"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('videocassette', '📼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('vhs', '📼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔍️','1F50D','magnifying glass tilted left',default,'{"detective","tool","zoom","detail","magnifying","glass","search","big"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"detective","tool","zoom","detail","magnifying","glass","search","big"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mag', '🔍️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔎','1F50E','magnifying glass tilted right',default,'{"detective","tool","zoom","detail","magnifying","glass","search","big"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"detective","tool","zoom","detail","magnifying","glass","search","big"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mag_right', '🔎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕯️','1F56F','candle',default,'{"light","shine","bright","fire"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"light","shine","bright","fire"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('candle', '🕯️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💡','1F4A1','light bulb',default,'{"on","shine","comic","bulb","idea","light","electric","power"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"on","shine","comic","bulb","idea","light","electric","power"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('light_bulb', '💡') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bulb', '💡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔦','1F526','flashlight',default,'{"tool","bright","torch","shine","light","electric","flashlight","gadget"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tool","bright","torch","shine","light","electric","flashlight","gadget"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flashlight', '🔦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏮','1F3EE','red paper lantern',default,'{"bar","red","lantern","light"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bar","red","lantern","light"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('izakaya_lantern', '🏮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('red_paper_lantern', '🏮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪔','1FA94','diya lamp',default,'{"diya","oil","lamp"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"diya","oil","lamp"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('diya_lamp', '🪔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📔','1F4D4','notebook with decorative cover',default,'{"cover","book","notebook","decorated"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cover","book","notebook","decorated"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('notebook_with_decorative_cover', '📔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📕','1F4D5','closed book',default,'{"book","write","closed","read"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"book","write","closed","read"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('closed_book', '📕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📖','1F4D6','open book',default,'{"book","open","write","read"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"book","open","write","read"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('book', '📖') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('open_book', '📖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📗','1F4D7','green book',default,'{"book","green"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"book","green"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('green_book', '📗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📘','1F4D8','blue book',default,'{"book","blue"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"book","blue"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('blue_book', '📘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📙','1F4D9','orange book',default,'{"book","orange"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"book","orange"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('orange_book', '📙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📚️','1F4DA','books',default,'{"book","write","isometric","read"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"book","write","isometric","read"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('books', '📚️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📓','1F4D3','notebook',default,'{"book","notebook","write","read"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"book","notebook","write","read"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('notebook', '📓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📒','1F4D2','ledger',default,'{"book","notebook","write","read"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"book","notebook","write","read"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ledger', '📒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📃','1F4C3','page with curl',default,'{"page","rolled","curl","text","document"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"page","rolled","curl","text","document"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('page_with_curl', '📃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📜','1F4DC','scroll',default,'{"paper","old","papyrus","text"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"paper","old","papyrus","text"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('scroll', '📜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📄','1F4C4','page facing up',default,'{"write","page","notes","paper","text","document"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"write","page","notes","paper","text","document"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('page_facing_up', '📄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📰','1F4F0','newspaper',default,'{"news","text","paper","read"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"news","text","paper","read"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('newspaper', '📰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗞️','1F5DE','rolled-up newspaper',default,'{"news","rolled","paper","newspaper"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"news","rolled","paper","newspaper"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rolled_up_newspaper', '🗞️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📑','1F4D1','bookmark tabs',default,'{"mark","bookmark","tabs","marker"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","bookmark","tabs","marker"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bookmark_tabs', '📑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔖','1F516','bookmark',default,'{"mark","remember"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","remember"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bookmark', '🔖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏷️','1F3F7','label',default,'{"label","stick"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"label","stick"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('label', '🏷️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💰️','1F4B0','money bag',default,'{"money","bag","dollar","moneybag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","bag","dollar","moneybag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('moneybag', '💰️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪙','1FA99','coin',default,'{"money","silver","metal","gold","treasure"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","silver","metal","gold","treasure"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('coin', '🪙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💴','1F4B4','yen banknote',default,'{"money","bill","currency","note","yen","banknote"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","bill","currency","note","yen","banknote"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('yen', '💴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💵','1F4B5','dollar banknote',default,'{"money","bill","currency","note","banknote","dollar"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","bill","currency","note","banknote","dollar"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dollar', '💵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💶','1F4B6','euro banknote',default,'{"money","bill","currency","note","banknote","euro"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","bill","currency","note","banknote","euro"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('euro', '💶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💷','1F4B7','pound banknote',default,'{"money","bill","currency","note","banknote","pound"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","bill","currency","note","banknote","pound"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pound', '💷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💸','1F4B8','money with wings',default,'{"money","bill","fly","wings","banknote"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","bill","fly","wings","banknote"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('money_with_wings', '💸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💳️','1F4B3','credit card',default,'{"card","credit","money"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"card","credit","money"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('credit_card', '💳️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧾','1F9FE','receipt',default,'{"accounting","evidence","bookkeeping","proof"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accounting","evidence","bookkeeping","proof"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('receipt', '🧾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💹','1F4B9','chart increasing with yen',default,'{"money","graph","chart","yen","growth"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","graph","chart","yen","growth"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('chart', '💹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✉️','2709','envelope',default,'{"message","email","post","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"message","email","post","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('envelope', '✉️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📧','1F4E7','e-mail',default,'{"mail","message","email","electronic","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mail","message","email","electronic","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('e-mail', '📧') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('email', '📧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📨','1F4E8','incoming envelope',default,'{"envelope","incoming","receive","e-mail","email","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"envelope","incoming","receive","e-mail","email","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('incoming_envelope', '📨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📩','1F4E9','envelope with arrow',default,'{"envelope","arrow","post","outgoing","email","e-mail"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"envelope","arrow","post","outgoing","email","e-mail"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('envelope_with_arrow', '📩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📤️','1F4E4','outbox tray',default,'{"mail","letter","post","outbox","tray","sent","box"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mail","letter","post","outbox","tray","sent","box"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('outbox_tray', '📤️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📥️','1F4E5','inbox tray',default,'{"inbox","mail","post","receive","tray","letter","box"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"inbox","mail","post","receive","tray","letter","box"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('inbox_tray', '📥️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📦️','1F4E6','package',default,'{"shipping","mail","post","parcel","box"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"shipping","mail","post","parcel","box"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('package', '📦️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📫️','1F4EB','closed mailbox with raised flag',default,'{"mail","post","postbox","closed","mailbox"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mail","post","postbox","closed","mailbox"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mailbox', '📫️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📪️','1F4EA','closed mailbox with lowered flag',default,'{"mail","post","lowered","postbox","closed","mailbox"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mail","post","lowered","postbox","closed","mailbox"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mailbox_closed', '📪️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📬️','1F4EC','open mailbox with raised flag',default,'{"open","postbox","mail","mailbox"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"open","postbox","mail","mailbox"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mailbox_with_mail', '📬️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📭️','1F4ED','open mailbox with lowered flag',default,'{"mail","lowered","postbox","open","mailbox"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mail","lowered","postbox","open","mailbox"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mailbox_with_no_mail', '📭️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📮','1F4EE','postbox',default,'{"mail","mailbox","post"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mail","mailbox","post"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('postbox', '📮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗳️','1F5F3','ballot box with ballot',default,'{"box","ballot"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"box","ballot"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ballot_box', '🗳️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✏️','270F','pencil',default,'{"pencil","notes"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pencil","notes"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pencil', '✏️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✒️','2712','black nib',default,'{"nib","pen"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"nib","pen"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('black_nib', '✒️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖋️','1F58B','fountain pen',default,'{"pen","fountain"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pen","fountain"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fountain_pen', '🖋️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖊️','1F58A','pen',default,'{"ballpoint"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ballpoint"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pen', '🖊️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖌️','1F58C','paintbrush',default,'{"painting","colors","pain","brush"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"painting","colors","pain","brush"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('paintbrush', '🖌️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖍️','1F58D','crayon',default,'{"painting","colors","crayon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"painting","colors","crayon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('crayon', '🖍️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📝','1F4DD','memo',default,'{"paper","pencil","notice","notes"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"paper","pencil","notice","notes"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('memo', '📝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💼','1F4BC','briefcase',default,'{"bag","office bag","briefcase","leather bag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bag","office bag","briefcase","leather bag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('briefcase', '💼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📁','1F4C1','file folder',default,'{"structure","office","paper","organise","file","box","folder"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"structure","office","paper","organise","file","box","folder"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('file_folder', '📁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📂','1F4C2','open file folder',default,'{"structure","open file","office","organise","file","box","open","folder"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"structure","open file","office","organise","file","box","open","folder"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('open_file_folder', '📂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗂️','1F5C2','card index dividers',default,'{"card","dividers","index"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"card","dividers","index"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('card_index_dividers', '🗂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📅','1F4C5','calendar',default,'{"day view","calendar","analog","date","pages"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"day view","calendar","analog","date","pages"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('date', '📅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📆','1F4C6','tear-off calendar',default,'{"tear off","calendar"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tear off","calendar"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('calendar', '📆') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗒️','1F5D2','spiral notepad',default,'{"handwrite","notes","paper","pen","spiral block","college","note","pad","spiral"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"handwrite","notes","paper","pen","spiral block","college","note","pad","spiral"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('notepad_spiral', '🗒️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗓️','1F5D3','spiral calendar',default,'{"year","calendar","pad","spiral","month view"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"year","calendar","pad","spiral","month view"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('calendar_spiral', '🗓️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📇','1F4C7','card index',default,'{"card","index","rolodex"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"card","index","rolodex"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('card_index', '📇') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📈','1F4C8','chart increasing',default,'{"graph","graph going up","chart","upward","trend","upward trend","growth"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"graph","graph going up","chart","upward","trend","upward trend","growth"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('chart_increasing', '📈') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('chart_with_upwards_trend', '📈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📉','1F4C9','chart decreasing',default,'{"graph","chart","trend","graph going down","downtrend","down"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"graph","chart","trend","graph going down","downtrend","down"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('chart_with_downwards_trend', '📉') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('chart_decreasing', '📉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📊','1F4CA','bar chart',default,'{"graph","chart","data","bar","sheet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"graph","chart","data","bar","sheet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bar_chart', '📊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📋️','1F4CB','clipboard',default,'{"board","clipboard","metal","handwriting","clip","wood"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"board","clipboard","metal","handwriting","clip","wood"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clipboard', '📋️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📌','1F4CC','pushpin',default,'{"pin","push","paper","wall"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pin","push","paper","wall"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pushpin', '📌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📍','1F4CD','round pushpin',default,'{"pin","push","notes","paper","wall","pushpin"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pin","push","notes","paper","wall","pushpin"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('round_pushpin', '📍') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📎','1F4CE','paperclip',default,'{"paperclip","office","organisation"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"paperclip","office","organisation"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('paperclip', '📎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🖇️','1F587','linked paperclips',default,'{"paperclip","link"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"paperclip","link"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('paperclips', '🖇️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📏','1F4CF','straight ruler',default,'{"ruler","straight edge","straight","detail","measure","line"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ruler","straight edge","straight","detail","measure","line"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('straight_ruler', '📏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📐','1F4D0','triangular ruler',default,'{"ruler","triangle","set","detail","measure","line"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ruler","triangle","set","detail","measure","line"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('triangular_ruler', '📐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✂️','2702','scissors',default,'{"work","cutting","cut","tool","paper","scissors","material"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"work","cutting","cut","tool","paper","scissors","material"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('scissors', '✂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗃️','1F5C3','card file box',default,'{"structure","file","tidy","organising","card","box","system"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"structure","file","tidy","organising","card","box","system"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('card_file_box', '🗃️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗄️','1F5C4','file cabinet',default,'{"box","file organising","cabinet","file","filing","file system"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"box","file organising","cabinet","file","filing","file system"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('file_cabinet', '🗄️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗑️','1F5D1','wastebasket',default,'{"paper","wastebasket","trash","bin"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"paper","wastebasket","trash","bin"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wastebasket', '🗑️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('trashcan', '🗑️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔒️','1F512','locked',default,'{"locker","closed","padlock"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"locker","closed","padlock"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('locked', '🔒️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('lock', '🔒️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔓️','1F513','unlocked',default,'{"lock","padlock","locker","open","unlock"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"lock","padlock","locker","open","unlock"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('unlocked', '🔓️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('unlock', '🔓️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔏','1F50F','locked with pen',default,'{"ink","lock","pen","privacy","nib"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ink","lock","pen","privacy","nib"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('locked_with_pen', '🔏') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('lock_with_ink_pen', '🔏') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔐','1F510','locked with key',default,'{"lock","secure","closed","key"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"lock","secure","closed","key"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('locked_with_key', '🔐') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('closed_lock_with_key', '🔐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔑','1F511','key',default,'{"closing","lock","password"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"closing","lock","password"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('key', '🔑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗝️','1F5DD','old key',default,'{"clue","lock","old","key"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clue","lock","old","key"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('old_key', '🗝️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔨','1F528','hammer',default,'{"metal","wood","toolbox","tool"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"metal","wood","toolbox","tool"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hammer', '🔨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪓','1FA93','axe',default,'{"split","chop","wood","hatchet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"split","chop","wood","hatchet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('axe', '🪓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛏️','26CF','pick',default,'{"mining","weapon","tool"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mining","weapon","tool"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pick', '⛏️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚒️','2692','hammer and pick',default,'{"pick","hammer","tool"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pick","hammer","tool"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hammer_and_pick', '⚒️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛠️','1F6E0','hammer and wrench',default,'{"tool","spanner","logo","wrench","hammer","craft mans"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tool","spanner","logo","wrench","hammer","craft mans"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hammer_and_wrench', '🛠️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗡️','1F5E1','dagger',default,'{"metal","weapon","knife"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"metal","weapon","knife"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dagger', '🗡️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚔️','2694','crossed swords',default,'{"swords","crossed","weapon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"swords","crossed","weapon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('crossed_swords', '⚔️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💣️','1F4A3','bomb',default,'{"comic","explosion"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"comic","explosion"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bomb', '💣️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪃','1FA83','boomerang',default,'{"repercussion","rebound"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"repercussion","rebound"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('boomerang', '🪃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏹','1F3F9','bow and arrow',default,'{"archer","arrow","zodiac","bow","sagittarius"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"archer","arrow","zodiac","bow","sagittarius"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bow_and_arrow', '🏹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛡️','1F6E1','shield',default,'{"middle ages","weapon","fight","protection"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"middle ages","weapon","fight","protection"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shield', '🛡️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪚','1FA9A','carpentry saw',default,'{"carpenter","saw","tool","lumber"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"carpenter","saw","tool","lumber"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('carpentry_saw', '🪚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔧','1F527','wrench',default,'{"silver","toolbox","tool","spanner"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"silver","toolbox","tool","spanner"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wrench', '🔧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪛','1FA9B','screwdriver',default,'{"screw","tool"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"screw","tool"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('screwdriver', '🪛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔩','1F529','nut and bolt',default,'{"tool","bolt","nut"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tool","bolt","nut"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('nut_and_bolt', '🔩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚙️','2699','gear',default,'{"tool","silver","cogwheel","cog","metal"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tool","silver","cogwheel","cog","metal"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('gear', '⚙️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗜️','1F5DC','clamp',default,'{"toolbox","vice","compress","tool"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"toolbox","vice","compress","tool"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('compression', '🗜️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('clamp', '🗜️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚖️','2696','balance scale',default,'{"justice","balance","zodiac","silver","libra","scale"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"justice","balance","zodiac","silver","libra","scale"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('scales', '⚖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🦯','1F9AF','white cane',default,'{"accessibility","blind"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility","blind"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_cane', '🦯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('probing_cane', '🦯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔗','1F517','link',default,'{"silver","link"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"silver","link"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('link', '🔗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛓️','26D3','chains',default,'{"chain","silver","metal"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"chain","silver","metal"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('chains', '⛓️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪝','1FA9D','hook',default,'{"fishing","selling point","crook","catch","ensnare","curve"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fishing","selling point","crook","catch","ensnare","curve"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hook', '🪝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧰','1F9F0','toolbox',default,'{"mechanic","chest","tool"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mechanic","chest","tool"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('toolbox', '🧰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧲','1F9F2','magnet',default,'{"magnetic","horseshoe","attraction"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"magnetic","horseshoe","attraction"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('magnet', '🧲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪜','1FA9C','ladder',default,'{"climb","step","rung"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"climb","step","rung"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ladder', '🪜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚗️','2697','alembic',default,'{"chemistry","tool"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"chemistry","tool"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('alembic', '⚗️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧪','1F9EA','test tube',default,'{"chemistry","chemist","experiment","lab","science"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"chemistry","chemist","experiment","lab","science"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('test_tube', '🧪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧫','1F9EB','petri dish',default,'{"bacteria","biologist","culture","lab","biology"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bacteria","biologist","culture","lab","biology"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('petri_dish', '🧫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧬','1F9EC','dna',default,'{"evolution","gene","biologist","genetics","life"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"evolution","gene","biologist","genetics","life"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('double_helix', '🧬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('dna', '🧬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔬','1F52C','microscope',default,'{"science","tool"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"science","tool"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('microscope', '🔬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔭','1F52D','telescope',default,'{"sky","space","tool","stars","science"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sky","space","tool","stars","science"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('telescope', '🔭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📡','1F4E1','satellite antenna',default,'{"signal","radiation","dish","receive","antenna","satellite"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"signal","radiation","dish","receive","antenna","satellite"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('satellite_antenna', '📡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💉','1F489','syringe',default,'{"IV","needle","health","sick","drug","shot","injection","medicine"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"IV","needle","health","sick","drug","shot","injection","medicine"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('syringe', '💉') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🩸','1FA78','drop of blood',default,'{"blood donation","injury","menstruation","medicine","bleed"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"blood donation","injury","menstruation","medicine","bleed"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('drop_of_blood', '🩸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💊','1F48A','pill',default,'{"health","sick","medicine","doctor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"health","sick","medicine","doctor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pill', '💊') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🩹','1FA79','adhesive bandage',default,'{"bandage"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bandage"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('adhesive_bandage', '🩹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bandaid', '🩹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🩼','1FA7C','crutch',default,'{"disability","hurt","mobility aid","stick","cane"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"disability","hurt","mobility aid","stick","cane"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('crutch', '🩼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🩺','1FA7A','stethoscope',default,'{"medicine","heart","doctor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"medicine","heart","doctor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('stethoscope', '🩺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🩻','1FA7B','x-ray',default,'{"skeleton","medical","bones","doctor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"skeleton","medical","bones","doctor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('x-ray', '🩻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('xray', '🩻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚪','1F6AA','door',default,'{"door"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"door"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('door', '🚪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛗','1F6D7','elevator',default,'{"accessibility","lift","hoist"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"accessibility","lift","hoist"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('elevator', '🛗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪞','1FA9E','mirror',default,'{"reflector","reflection","speculum"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"reflector","reflection","speculum"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mirror', '🪞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪟','1FA9F','window',default,'{"view","fresh air","transparent","opening","frame"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"view","fresh air","transparent","opening","frame"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('window', '🪟') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛏️','1F6CF','bed',default,'{"furniture","hotel","sleep"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"furniture","hotel","sleep"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bed', '🛏️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛋️','1F6CB','couch and lamp',default,'{"couch","furniture","lamp","hotel"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"couch","furniture","lamp","hotel"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('couch_and_lamp', '🛋️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪑','1FA91','chair',default,'{"seat","sit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"seat","sit"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('chair', '🪑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚽','1F6BD','toilet',default,'{"toilet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"toilet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('toilet', '🚽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪠','1FAA0','plunger',default,'{"force cup","plumber","toilet","suction"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"force cup","plumber","toilet","suction"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('plunger', '🪠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚿','1F6BF','shower',default,'{"wash","water"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wash","water"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shower', '🚿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛁','1F6C1','bathtub',default,'{"water","wash","foam","bath"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"water","wash","foam","bath"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bathtub', '🛁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪤','1FAA4','mouse trap',default,'{"trap","mousetrap","bait","isometric","snare"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"trap","mousetrap","bait","isometric","snare"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mouse_trap', '🪤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪒','1FA92','razor',default,'{"sharp","shave"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sharp","shave"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('razor', '🪒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧴','1F9F4','lotion bottle',default,'{"lotion","sunscreen","moisturizer","shampoo"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"lotion","sunscreen","moisturizer","shampoo"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lotion_bottle', '🧴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧷','1F9F7','safety pin',default,'{"diaper","punk rock"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"diaper","punk rock"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('safety_pin', '🧷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧹','1F9F9','broom',default,'{"witch","sweeping","cleaning"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"witch","sweeping","cleaning"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('broom', '🧹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧺','1F9FA','basket',default,'{"laundry","farming","picnic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"laundry","farming","picnic"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('basket', '🧺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧻','1F9FB','roll of paper',default,'{"paper towels","toilet paper","isometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"paper towels","toilet paper","isometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('toilet_paper', '🧻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('roll_of_paper', '🧻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪣','1FAA3','bucket',default,'{"vat","pail","cask"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"vat","pail","cask"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bucket', '🪣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧼','1F9FC','soap',default,'{"lather","bar","cleaning","soapdish","bathing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"lather","bar","cleaning","soapdish","bathing"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('soap', '🧼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫧','1FAE7','bubbles',default,'{"underwater","burp","soap","clean"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"underwater","burp","soap","clean"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bubbles', '🫧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪥','1FAA5','toothbrush',default,'{"bathroom","brush","dental","hygiene","clean","teeth"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bathroom","brush","dental","hygiene","clean","teeth"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('toothbrush', '🪥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧽','1F9FD','sponge',default,'{"porous","absorbing","cleaning"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"porous","absorbing","cleaning"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sponge', '🧽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧯','1F9EF','fire extinguisher',default,'{"extinguish","quench","fire"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"extinguish","quench","fire"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fire_extinguisher', '🧯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛒','1F6D2','shopping cart',default,'{"cart","shopping","trolley"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cart","shopping","trolley"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('shopping_cart', '🛒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚬','1F6AC','cigarette',default,'{"tobacco","smoke","smoking"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tobacco","smoke","smoking"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('smoking', '🚬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cigarette', '🚬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚰️','26B0','coffin',default,'{"death","dead","funeral"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"death","dead","funeral"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('coffin', '⚰️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪦','1FAA6','headstone',default,'{"grave","cemetery","graveyard","tombstone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"grave","cemetery","graveyard","tombstone"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('headstone', '🪦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚱️','26B1','funeral urn',default,'{"death","urn","funeral","ashes"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"death","urn","funeral","ashes"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('funeral_urn', '⚱️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧿','1F9FF','nazar amulet',default,'{"talisman","bead","evil-eye","charm","nazar"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"talisman","bead","evil-eye","charm","nazar"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('nazar_amulet', '🧿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪬','1FAAC','hamsa',default,'{"miriam","mary","protection","hand","fatima","amulet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"miriam","mary","protection","hand","fatima","amulet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hamsa', '🪬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🗿','1F5FF','moai',default,'{"meeting point","face","statue","japan","moyai","shibuya","meet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"meeting point","face","statue","japan","moyai","shibuya","meet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('moai', '🗿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('moyai', '🗿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪧','1FAA7','placard',default,'{"demonstration","protest","sign","picket"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"demonstration","protest","sign","picket"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('placard', '🪧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪪','1FAAA','identification card',default,'{"license","id","security","credentials"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"license","id","security","credentials"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('id_card', '🪪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏧','1F3E7','ATM sign',default,'{"atm sign","bank","atm","automated","teller"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"atm sign","bank","atm","automated","teller"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('atm', '🏧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚮','1F6AE','litter in bin sign',default,'{"garbage","throw","litter bin","can","litter","trash","away","bin"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"garbage","throw","litter bin","can","litter","trash","away","bin"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('litter_bin', '🚮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('put_litter_in_its_place', '🚮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚰','1F6B0','potable water',default,'{"tap","faucet","water","potable","drinking","glass"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tap","faucet","water","potable","drinking","glass"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('potable_water', '🚰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♿️','267F','wheelchair symbol',default,'{"disabled person","access","wheel chair","restroom","toilet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"disabled person","access","wheel chair","restroom","toilet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('handicapped', '♿️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('wheelchair', '♿️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚹️','1F6B9','men’s room',default,'{"male","bathroom","guy","lavatory","man","wc","restroom","dude","toilet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"male","bathroom","guy","lavatory","man","wc","restroom","dude","toilet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mens', '🚹️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚺️','1F6BA','women’s room',default,'{"bathroom","woman","chick","lavatory","women","wc","female","restroom","toilet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bathroom","woman","chick","lavatory","women","wc","female","restroom","toilet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('womens', '🚺️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚻','1F6BB','restroom',default,'{"male","bathroom","woman","unisex","lavatory","wc","female","restroom","toilet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"male","bathroom","woman","unisex","lavatory","wc","female","restroom","toilet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bathroom', '🚻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('restroom', '🚻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚼️','1F6BC','baby symbol',default,'{"changing","station","baby","restroom","toilet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"changing","station","baby","restroom","toilet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('baby_symbol', '🚼️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚾','1F6BE','water closet',default,'{"bathroom","water","lavatory","wc","restroom","WC","closet","toilet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bathroom","water","lavatory","wc","restroom","WC","closet","toilet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wc', '🚾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('water_closet', '🚾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛂','1F6C2','passport control',default,'{"control","passport"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"control","passport"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('passport_control', '🛂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛃','1F6C3','customs',default,'{"customs"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"customs"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('customs', '🛃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛄','1F6C4','baggage claim',default,'{"baggage","claim"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"baggage","claim"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('baggage_claim', '🛄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛅','1F6C5','left luggage',default,'{"luggage","locker","baggage"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"luggage","locker","baggage"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('left_luggage', '🛅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚠️','26A0','warning',default,'{"warning"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"warning"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('warning', '⚠️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚸','1F6B8','children crossing',default,'{"pedestrian","crossing","child","traffic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pedestrian","crossing","child","traffic"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('children_crossing', '🚸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛔️','26D4','no entry',default,'{"traffic","no","forbidden","entry","not","prohibited"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"traffic","no","forbidden","entry","not","prohibited"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('no_entry', '⛔️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚫','1F6AB','prohibited',default,'{"forbidden","entry","not","no"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"forbidden","entry","not","no"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('no_entry_sign', '🚫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚳','1F6B3','no bicycles',default,'{"bike","no","forbidden","bicycle","prohibited"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bike","no","forbidden","bicycle","prohibited"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('no_bicycles', '🚳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚭️','1F6AD','no smoking',default,'{"smoking","no","forbidden","not","prohibited"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"smoking","no","forbidden","not","prohibited"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('no_smoking', '🚭️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚯','1F6AF','no littering',default,'{"litter","no","forbidden","not","prohibited"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"litter","no","forbidden","not","prohibited"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('do_not_litter', '🚯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('no_littering', '🚯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚱','1F6B1','non-potable water',default,'{"non-drinking","water","non-potable"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"non-drinking","water","non-potable"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('non-potable_water', '🚱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚷','1F6B7','no pedestrians',default,'{"pedestrian","no","forbidden","not","prohibited"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pedestrian","no","forbidden","not","prohibited"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('no_pedestrians', '🚷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📵','1F4F5','no mobile phones',default,'{"mobile","cell","no","forbidden","phone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mobile","cell","no","forbidden","phone"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('no_mobile_phones', '📵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔞','1F51E','no one under eighteen',default,'{"underage","18","age restriction","eighteen","prohibited"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"underage","18","age restriction","eighteen","prohibited"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('no_one_under_18', '🔞') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('underage', '🔞') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☢️','2622','radioactive',default,'{"sign"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sign"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('radioactive', '☢️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☣️','2623','biohazard',default,'{"sign"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sign"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('biohazard', '☣️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬆️','2B06','up arrow',default,'{"direction","cardinal","arrow","above","up","north"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"direction","cardinal","arrow","above","up","north"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_up', '⬆️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('↗️','2197','up-right arrow',default,'{"diagonal","arrow","right up","intercardinal","northeast","direction"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"diagonal","arrow","right up","intercardinal","northeast","direction"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_upper_right', '↗️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('➡️','27A1','right arrow',default,'{"right","soon","cardinal","arrow","future","direction","east"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"right","soon","cardinal","arrow","future","direction","east"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_right', '➡️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('↘️','2198','down-right arrow',default,'{"right down","diagonal","arrow","southeast","intercardinal","direction"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"right down","diagonal","arrow","southeast","intercardinal","direction"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_lower_right', '↘️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬇️','2B07','down arrow',default,'{"underneath","cardinal","arrow","south","down","direction"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"underneath","cardinal","arrow","south","down","direction"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_down', '⬇️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('↙️','2199','down-left arrow',default,'{"diagonal","arrow","left down","intercardinal","southwest","direction"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"diagonal","arrow","left down","intercardinal","southwest","direction"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_lower_left', '↙️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬅️','2B05','left arrow',default,'{"cardinal","arrow","left","west","past","direction"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cardinal","arrow","left","west","past","direction"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_left', '⬅️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('↖️','2196','up-left arrow',default,'{"northwest","diagonal","arrow","intercardinal","direction","left up"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"northwest","diagonal","arrow","intercardinal","direction","left up"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_upper_left', '↖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('↕️','2195','up-down arrow',default,'{"directions","arrow","opposite","up and down"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"directions","arrow","opposite","up and down"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_up_down', '↕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('↔️','2194','left-right arrow',default,'{"directions","arrow","opposite","left and right"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"directions","arrow","opposite","left and right"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('left_right_arrow', '↔️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('↩️','21A9','right arrow curving left',default,'{"directions","arrow","turn around"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"directions","arrow","turn around"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('leftwards_arrow_with_hook', '↩️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('arrow_left_hook', '↩️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('↪️','21AA','left arrow curving right',default,'{"directions","arrow","turn around"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"directions","arrow","turn around"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rightwards_arrow_with_hook', '↪️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('arrow_right_hook', '↪️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⤴️','2934','right arrow curving up',default,'{"arrow","curve up","direction"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"arrow","curve up","direction"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_heading_up', '⤴️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⤵️','2935','right arrow curving down',default,'{"curve down","arrow","down","direction"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"curve down","arrow","down","direction"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_heading_down', '⤵️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔃','1F503','clockwise vertical arrows',default,'{"clockwise","arrow","reload"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clockwise","arrow","reload"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clockwise', '🔃') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('arrows_clockwise', '🔃') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔄','1F504','counterclockwise arrows button',default,'{"anticlockwise","cycle","arrow","counterclockwise","withershins"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"anticlockwise","cycle","arrow","counterclockwise","withershins"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrows_counterclockwise', '🔄') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('counterclockwise', '🔄') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔙','1F519','BACK arrow',default,'{"back","arrow"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"back","arrow"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('back', '🔙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔚','1F51A','END arrow',default,'{"end","arrow"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"end","arrow"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('end', '🔚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔛','1F51B','ON! arrow',default,'{"mark","arrow","on!","on"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","arrow","on!","on"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('on', '🔛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔜','1F51C','SOON arrow',default,'{"arrow","soon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"arrow","soon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('soon', '🔜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔝','1F51D','TOP arrow',default,'{"arrow","top","up"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"arrow","top","up"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('top', '🔝') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛐','1F6D0','place of worship',default,'{"worship","religion","pray"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"worship","religion","pray"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('place_of_worship', '🛐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚛️','269B','atom symbol',default,'{"atom","atheist"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"atom","atheist"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('atom', '⚛️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('atom_symbol', '⚛️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕉️','1F549','om',default,'{"religion","hindu"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"religion","hindu"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('om', '🕉️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✡️','2721','star of David',default,'{"star of david","religion","david","star","jew","jewish"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"star of david","religion","david","star","jew","jewish"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('star_of_david', '✡️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☸️','2638','wheel of dharma',default,'{"buddhist","religion","dharma","wheel"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"buddhist","religion","dharma","wheel"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wheel_of_dharma', '☸️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☯️','262F','yin yang',default,'{"religion","yang","balance","yin","taoist","tao"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"religion","yang","balance","yin","taoist","tao"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('yin_yang', '☯️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✝️','271D','latin cross',default,'{"religion","christian","cross"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"religion","christian","cross"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('latin_cross', '✝️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☦️','2626','orthodox cross',default,'{"religion","christian","cross"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"religion","christian","cross"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('orthodox_cross', '☦️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☪️','262A','star and crescent',default,'{"muslim","religion","islam"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"muslim","religion","islam"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('star_and_crescent', '☪️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☮️','262E','peace symbol',default,'{"peace"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"peace"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('peace_symbol', '☮️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('peace', '☮️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🕎','1F54E','menorah',default,'{"candelabrum","candlestick","religion"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"candelabrum","candlestick","religion"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('menorah', '🕎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔯','1F52F','dotted six-pointed star',default,'{"fortune","star"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fortune","star"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('six_pointed_star', '🔯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🪯','1FAAF','khanda',default,'{"religion","sikh"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"religion","sikh"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('khanda', '🪯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♈️','2648','Aries',default,'{"zodiac","ram","aries"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"zodiac","ram","aries"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('aries', '♈️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♉️','2649','Taurus',default,'{"ox","bull","zodiac","taurus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ox","bull","zodiac","taurus"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('taurus', '♉️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♊️','264A','Gemini',default,'{"gemini","twins","zodiac"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gemini","twins","zodiac"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('gemini', '♊️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♋️','264B','Cancer',default,'{"zodiac","crab","cancer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"zodiac","crab","cancer"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cancer', '♋️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♌️','264C','Leo',default,'{"lion","zodiac","leo"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"lion","zodiac","leo"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('leo', '♌️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♍️','264D','Virgo',default,'{"virgo","zodiac"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"virgo","zodiac"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('virgo', '♍️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♎️','264E','Libra',default,'{"justice","scales","balance","zodiac","libra"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"justice","scales","balance","zodiac","libra"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('libra', '♎️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♏️','264F','Scorpio',default,'{"scorpius","scorpio","scorpion","zodiac"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"scorpius","scorpio","scorpion","zodiac"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('scorpius', '♏️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♐️','2650','Sagittarius',default,'{"archer","zodiac","sagittarius"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"archer","zodiac","sagittarius"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sagittarius', '♐️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♑️','2651','Capricorn',default,'{"capricorn","goat","zodiac"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"capricorn","goat","zodiac"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('capricorn', '♑️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♒️','2652','Aquarius',default,'{"aquarius","bearer","water","zodiac"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"aquarius","bearer","water","zodiac"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('aquarius', '♒️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♓️','2653','Pisces',default,'{"fish","pisces","zodiac"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fish","pisces","zodiac"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pisces', '♓️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⛎','26CE','Ophiuchus',default,'{"snake","bearer","zodiac","ophiuchus","serpent"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"snake","bearer","zodiac","ophiuchus","serpent"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ophiuchus', '⛎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔀','1F500','shuffle tracks button',default,'{"random","crossed","arrow"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"random","crossed","arrow"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('twisted_rightwards_arrows', '🔀') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('shuffle', '🔀') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔁','1F501','repeat button',default,'{"clockwise","arrow","repeat","cycle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clockwise","arrow","repeat","cycle"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('repeat', '🔁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔂','1F502','repeat single button',default,'{"once","clockwise","arrow"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"once","clockwise","arrow"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('repeat_one', '🔂') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('▶️','25B6','play button',default,'{"right","arrow","play","triangle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"right","arrow","play","triangle"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_forward', '▶️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('play', '▶️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏩️','23E9','fast-forward button',default,'{"fast","forward","arrow","double"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fast","forward","arrow","double"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fast_forward', '⏩️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏭️','23ED','next track button',default,'{"triangle","next track","arrow","next scene"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"triangle","next track","arrow","next scene"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('next_track', '⏭️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏯️','23EF','play or pause button',default,'{"right","play","arrow","triangle","pause"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"right","play","arrow","triangle","pause"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('play_pause', '⏯️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◀️','25C0','reverse button',default,'{"left","arrow","reverse","triangle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"left","arrow","reverse","triangle"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_backward', '◀️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('reverse', '◀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏪️','23EA','fast reverse button',default,'{"arrow","rewind","double"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"arrow","rewind","double"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rewind', '⏪️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('fast_reverse', '⏪️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏮️','23EE','last track button',default,'{"previous track","arrow","triangle","previous scene"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"previous track","arrow","triangle","previous scene"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('previous_track', '⏮️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔼','1F53C','upwards button',default,'{"arrow","improve","button"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"arrow","improve","button"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_up_small', '🔼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('up', '🔼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏫','23EB','fast up button',default,'{"arrow","double"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"arrow","double"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('arrow_double_up', '⏫') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('fast_up', '⏫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔽','1F53D','downwards button',default,'{"decline","decrease","arrow","down","button"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"decline","decrease","arrow","down","button"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('down', '🔽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('arrow_down_small', '🔽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏬','23EC','fast down button',default,'{"arrow","down","double"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"arrow","down","double"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fast_down', '⏬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('arrow_double_down', '⏬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏸️','23F8','pause button',default,'{"bar","pause","double","vertical"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bar","pause","double","vertical"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pause', '⏸️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏹️','23F9','stop button',default,'{"square","stop"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","stop"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('stop', '⏹️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏺️','23FA','record button',default,'{"record","circle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"record","circle"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('record', '⏺️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏏️','23CF','eject button',default,'{"eject"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"eject"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('eject', '⏏️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎦','1F3A6','cinema',default,'{"camera","film","movie"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"camera","film","movie"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cinema', '🎦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔅','1F505','dim button',default,'{"low","dim","brightness"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"low","dim","brightness"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dim_button', '🔅') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('low_brightness', '🔅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔆','1F506','bright button',default,'{"bright","brightness"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bright","brightness"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bright_button', '🔆') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('high_brightness', '🔆') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📶','1F4F6','antenna bars',default,'{"mobile","cell","bar","antenna","phone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mobile","cell","bar","antenna","phone"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('signal_strength', '📶') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('antenna_bars', '📶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🛜','1F6DC','wireless',default,'{"computer","network","internet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"computer","network","internet"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wireless', '🛜') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📳','1F4F3','vibration mode',default,'{"mobile","telephone","cell","vibration","mode","silent mode","phone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mobile","telephone","cell","vibration","mode","silent mode","phone"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('vibration_mode', '📳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📴','1F4F4','mobile phone off',default,'{"off","mobile","telephone","cell","caos","phone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"off","mobile","telephone","cell","caos","phone"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mobile_phone_off', '📴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♀️','2640','female sign',default,'{"gender","sign","woman"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gender","sign","woman"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('female_sign', '♀️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('female', '♀️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♂️','2642','male sign',default,'{"man","gender","sign"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"man","gender","sign"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('male', '♂️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('male_sign', '♂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚧️','26A7','transgender symbol',default,'{"queer","transgender","trans","LGBT","gender"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"queer","transgender","trans","LGBT","gender"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('transgender_symbol', '⚧️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✖️','2716','multiply',default,'{"x","cancel","sign","wrong","×","multiplication"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"x","cancel","sign","wrong","×","multiplication"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('multiplication', '✖️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('multiply', '✖️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('➕','2795','plus',default,'{"plus","+","sign","math"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plus","+","sign","math"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('plus', '➕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('➖','2796','minus',default,'{"-","minus","−","sign","math"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"-","minus","−","sign","math"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('minus', '➖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('➗','2797','divide',default,'{"÷","math","sign","division"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"÷","math","sign","division"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('divide', '➗') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('division', '➗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🟰','1F7F0','heavy equals sign',default,'{"equality","math"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"equality","math"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('heavy_equals_sign', '🟰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♾️','267E','infinity',default,'{"universal","unbounded","forever"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"universal","unbounded","forever"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('infinity', '♾️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('‼️','203C','double exclamation mark',default,'{"mark","!!","bangbang","exclamation","!"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","!!","bangbang","exclamation","!"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('double_exclamation', '‼️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bangbang', '‼️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⁉️','2049','exclamation question mark',default,'{"mark","punctuation","exclamation","?","!","question","!?","interrobang"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","punctuation","exclamation","?","!","question","!?","interrobang"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('interrobang', '⁉️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('exclamation_question', '⁉️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('❓️','2753','red question mark',default,'{"mark","?","punctuation","question"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","?","punctuation","question"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('question', '❓️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('❔','2754','white question mark',default,'{"mark","outlined","punctuation","?","question","white"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","outlined","punctuation","?","question","white"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_question', '❔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('❕','2755','white exclamation mark',default,'{"mark","outlined","punctuation","exclamation","!","white"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","outlined","punctuation","exclamation","!","white"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_exclamation', '❕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('❗️','2757','red exclamation mark',default,'{"punctuation","mark","!","exclamation"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"punctuation","mark","!","exclamation"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('exclamation', '❗️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('〰️','3030','wavy dash',default,'{"wavy","dash","punctuation"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wavy","dash","punctuation"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wavy_dash', '〰️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💱','1F4B1','currency exchange',default,'{"money","bank","currency","exchange"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"money","bank","currency","exchange"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('currency_exchange', '💱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💲','1F4B2','heavy dollar sign',default,'{"dollar","money","currency"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dollar","money","currency"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('heavy_dollar_sign', '💲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚕️','2695','medical symbol',default,'{"staff","aesculapius","medicine","medical"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"staff","aesculapius","medicine","medical"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('medical_symbol', '⚕️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('medical', '⚕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('♻️','267B','recycling symbol',default,'{"recycle","nature"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"recycle","nature"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('recycling_symbol', '♻️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('recycle', '♻️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚜️','269C','fleur-de-lis',default,'{"fleur-de-lis"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fleur-de-lis"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fleur-de-lis', '⚜️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔱','1F531','trident emblem',default,'{"emblem","tool","ship","trident","anchor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"emblem","tool","ship","trident","anchor"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('trident', '🔱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('📛','1F4DB','name badge',default,'{"name","badge"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"name","badge"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('name_badge', '📛') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔰','1F530','Japanese symbol for beginner',default,'{"chevron","beginner","japanese symbol for beginner","japanese","leaf"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"chevron","beginner","japanese symbol for beginner","japanese","leaf"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('beginner', '🔰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⭕️','2B55','hollow red circle',default,'{"red","o","circle","large"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"red","o","circle","large"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('red_o', '⭕️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('hollow_red_circle', '⭕️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✅','2705','check mark button',default,'{"mark","right","button","check","✓","white"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","right","button","check","✓","white"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_check_mark', '✅') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('check_mark_button', '✅') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('☑️','2611','check box with check',default,'{"check","box","right","✓"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"check","box","right","✓"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ballot_box_with_check', '☑️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✔️','2714','check mark',default,'{"mark","right","todo","check","✓"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","right","todo","check","✓"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('heavy_check_mark', '✔️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('check_mark', '✔️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('❌','274C','cross mark',default,'{"mark","x","multiply","cancel","wrong","×","multiplication","cross"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","x","multiply","cancel","wrong","×","multiplication","cross"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('x', '❌') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cross_mark', '❌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('❎','274E','cross mark button',default,'{"mark","x","square","×","button"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","x","square","×","button"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('negative_squared_cross_mark', '❎') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cross_mark_button', '❎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('➰','27B0','curly loop',default,'{"loop","curl"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"loop","curl"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('curly_loop', '➰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('➿','27BF','double curly loop',default,'{"loop","curl","double"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"loop","curl","double"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('loop', '➿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('double_curly_loop', '➿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('〽️','303D','part alternation mark',default,'{"mark","part"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","part"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('part_alternation_mark', '〽️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✳️','2733','eight-spoked asterisk',default,'{"asterisk","*"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"asterisk","*"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('eight_spoked_asterisk', '✳️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('✴️','2734','eight-pointed star',default,'{"star","*"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"star","*"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('eight_pointed_black_star', '✴️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('❇️','2747','sparkle',default,'{"*"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"*"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sparkle', '❇️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('©️','00A9','copyright',default,'{"c","sign","copyright"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"c","sign","copyright"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('copyright', '©️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('®️','00AE','registered',default,'{"registered","sign","r"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"registered","sign","r"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('registered', '®️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('™️','2122','trade mark',default,'{"mark","tm","trademark"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","tm","trademark"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('trade_mark', '™️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('tm', '™️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('#️⃣','0023-FE0F-20E3','keycap: #',default,'{"keycap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keycap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hash', '#️⃣') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('number_sign', '#️⃣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('*️⃣','002A-FE0F-20E3','keycap: *',default,'{"keycap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keycap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('asterisk', '*️⃣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('0️⃣','0030-FE0F-20E3','keycap: 0',default,'{"keycap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keycap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('zero', '0️⃣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('1️⃣','0031-FE0F-20E3','keycap: 1',default,'{"keycap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keycap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('one', '1️⃣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('2️⃣','0032-FE0F-20E3','keycap: 2',default,'{"keycap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keycap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('two', '2️⃣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('3️⃣','0033-FE0F-20E3','keycap: 3',default,'{"keycap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keycap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('three', '3️⃣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('4️⃣','0034-FE0F-20E3','keycap: 4',default,'{"keycap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keycap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('four', '4️⃣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('5️⃣','0035-FE0F-20E3','keycap: 5',default,'{"keycap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keycap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('five', '5️⃣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('6️⃣','0036-FE0F-20E3','keycap: 6',default,'{"keycap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keycap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('six', '6️⃣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('7️⃣','0037-FE0F-20E3','keycap: 7',default,'{"keycap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keycap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('seven', '7️⃣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('8️⃣','0038-FE0F-20E3','keycap: 8',default,'{"keycap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keycap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('eight', '8️⃣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('9️⃣','0039-FE0F-20E3','keycap: 9',default,'{"keycap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keycap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('nine', '9️⃣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔟','1F51F','keycap: 10',default,'{"keycap"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keycap"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ten', '🔟') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔠','1F520','input latin uppercase',default,'{"alphabet","letters","abcd","uppercase","input","latin"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","letters","abcd","uppercase","input","latin"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('capital_abcd', '🔠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔡','1F521','input latin lowercase',default,'{"alphabet","letters","abcd","lowercase","input","latin"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","letters","abcd","lowercase","input","latin"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('abcd', '🔡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔢','1F522','input numbers',default,'{"1234","numbers","input"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"1234","numbers","input"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('1234', '🔢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔣','1F523','input symbols',default,'{"ampersand","percentage","〒♪&%","note","music","input"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ampersand","percentage","〒♪&%","note","music","input"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('symbols', '🔣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔤','1F524','input latin letters',default,'{"alphabet","letters","abc","input","latin"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","letters","abc","input","latin"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('abc', '🔤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🅰️','1F170','A button (blood type)',default,'{"a button (blood type)","blood type","a"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"a button (blood type)","blood type","a"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('a_blood', '🅰️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('a', '🅰️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🆎','1F18E','AB button (blood type)',default,'{"ab button (blood type)","ab","blood type"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ab button (blood type)","ab","blood type"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ab', '🆎') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ab_blood', '🆎') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🅱️','1F171','B button (blood type)',default,'{"b","b button (blood type)","blood type"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"b","b button (blood type)","blood type"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('b_blood', '🅱️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('b', '🅱️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🆑','1F191','CL button',default,'{"cl button","cl"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cl button","cl"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cl', '🆑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🆒','1F192','COOL button',default,'{"popular","nice","cool","cool button"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"popular","nice","cool","cool button"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cool', '🆒') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🆓','1F193','FREE button',default,'{"free button","free"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"free button","free"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('free', '🆓') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('ℹ️','2139','information',default,'{"i","advice","info"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"i","advice","info"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('info', 'ℹ️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('information_source', 'ℹ️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🆔','1F194','ID button',default,'{"identity","id","id button","id card"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"identity","id","id button","id card"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('id', '🆔') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('Ⓜ️','24C2','circled M',default,'{"circled m","circle","m"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"circled m","circle","m"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('m', 'Ⓜ️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🆕','1F195','NEW button',default,'{"new","new button","recent","modern"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"new","new button","recent","modern"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('new', '🆕') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🆖','1F196','NG button',default,'{"ng","ng button"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ng","ng button"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ng', '🆖') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🅾️','1F17E','O button (blood type)',default,'{"o","blood type","o button (blood type)"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"o","blood type","o button (blood type)"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('o', '🅾️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('o_blood', '🅾️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🆗','1F197','OK button',default,'{"ok button","ok","okay"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ok button","ok","okay"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ok', '🆗') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🅿️','1F17F','P button',default,'{"place","p button","p","parking","drive"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"place","p button","p","parking","drive"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('parking', '🅿️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🆘','1F198','SOS button',default,'{"sos","emergency","help","warning","sos button"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sos","emergency","help","warning","sos button"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sos', '🆘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🆙','1F199','UP! button',default,'{"up!","mark","up! button","up"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"up!","mark","up! button","up"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('up2', '🆙') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🆚','1F19A','VS button',default,'{"versus","against","vs button","vs"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"versus","against","vs button","vs"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('vs', '🆚') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🈁','1F201','Japanese “here” button',default,'{"ココ","japanese","japanese “here” button","“here”","katakana"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ココ","japanese","japanese “here” button","“here”","katakana"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('koko', '🈁') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ja_here', '🈁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🈂️','1F202','Japanese “service charge” button',default,'{"サ","japanese","“service charge”","japanese “service charge” button","katakana"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"サ","japanese","“service charge”","japanese “service charge” button","katakana"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_service_charge', '🈂️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🈷️','1F237','Japanese “monthly amount” button',default,'{"ideograph","japanese","“monthly amount”","japanese “monthly amount” button","月"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ideograph","japanese","“monthly amount”","japanese “monthly amount” button","月"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_monthly_amount', '🈷️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🈶','1F236','Japanese “not free of charge” button',default,'{"有","japanese “not free of charge” button","ideograph","“not free of charge”","japanese"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"有","japanese “not free of charge” button","ideograph","“not free of charge”","japanese"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_not_free_of_carge', '🈶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🈯️','1F22F','Japanese “reserved” button',default,'{"指","ideograph","japanese","japanese “reserved” button","“reserved”"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"指","ideograph","japanese","japanese “reserved” button","“reserved”"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_reserved', '🈯️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🉐','1F250','Japanese “bargain” button',default,'{"“bargain”","得","ideograph","japanese","japanese “bargain” button"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"“bargain”","得","ideograph","japanese","japanese “bargain” button"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ideograph_advantage', '🉐') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ja_bargain', '🉐') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🈹','1F239','Japanese “discount” button',default,'{"japanese “discount” button","割","ideograph","japanese","“discount”"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"japanese “discount” button","割","ideograph","japanese","“discount”"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_discount', '🈹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🈚️','1F21A','Japanese “free of charge” button',default,'{"japanese “free of charge” button","ideograph","“free of charge”","japanese","無"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"japanese “free of charge” button","ideograph","“free of charge”","japanese","無"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_free_of_charge', '🈚️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🈲','1F232','Japanese “prohibited” button',default,'{"禁","“prohibited”","ideograph","japanese","japanese “prohibited” button"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"禁","“prohibited”","ideograph","japanese","japanese “prohibited” button"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_prohibited', '🈲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🉑','1F251','Japanese “acceptable” button',default,'{"japanese “acceptable” button","ideograph","“acceptable”","japanese","可"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"japanese “acceptable” button","ideograph","“acceptable”","japanese","可"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_acceptable', '🉑') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('accept', '🉑') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🈸','1F238','Japanese “application” button',default,'{"japanese “application” button","“application”","ideograph","申","japanese"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"japanese “application” button","“application”","ideograph","申","japanese"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_application', '🈸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🈴','1F234','Japanese “passing grade” button',default,'{"“passing grade”","合","ideograph","japanese","japanese “passing grade” button"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"“passing grade”","合","ideograph","japanese","japanese “passing grade” button"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_passing_grade', '🈴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🈳','1F233','Japanese “vacancy” button',default,'{"japanese “vacancy” button","ideograph","japanese","空","“vacancy”"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"japanese “vacancy” button","ideograph","japanese","空","“vacancy”"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_vacancy', '🈳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('㊗️','3297','Japanese “congratulations” button',default,'{"祝","japanese “congratulations” button","ideograph","japanese","compliments","“congratulations”"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"祝","japanese “congratulations” button","ideograph","japanese","compliments","“congratulations”"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_congratulations', '㊗️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('congratulations', '㊗️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('㊙️','3299','Japanese “secret” button',default,'{"“secret”","秘","ideograph","japanese “secret” button","japanese","mysterious"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"“secret”","秘","ideograph","japanese “secret” button","japanese","mysterious"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('secret', '㊙️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ja_secret', '㊙️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🈺','1F23A','Japanese “open for business” button',default,'{"japanese “open for business” button","ideograph","japanese","“open for business”","営"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"japanese “open for business” button","ideograph","japanese","“open for business”","営"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_open_for_business', '🈺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🈵','1F235','Japanese “no vacancy” button',default,'{"満","ideograph","japanese","japanese “no vacancy” button","“no vacancy”"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"満","ideograph","japanese","japanese “no vacancy” button","“no vacancy”"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ja_no_vacancy', '🈵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔴','1F534','red circle',default,'{"red","circle","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"red","circle","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('red_circle', '🔴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🟠','1F7E0','orange circle',default,'{"circle","orange"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"circle","orange"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('orange_circle', '🟠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🟡','1F7E1','yellow circle',default,'{"yellow","circle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"yellow","circle"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('yellow_circle', '🟡') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🟢','1F7E2','green circle',default,'{"green","circle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"green","circle"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('green_circle', '🟢') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔵','1F535','blue circle',default,'{"circle","blue","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"circle","blue","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('blue_circle', '🔵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🟣','1F7E3','purple circle',default,'{"circle","purple"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"circle","purple"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('purple_circle', '🟣') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🟤','1F7E4','brown circle',default,'{"circle","brown"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"circle","brown"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('brown_circle', '🟤') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚫️','26AB','black circle',default,'{"circle","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"circle","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('black_circle', '⚫️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚪️','26AA','white circle',default,'{"circle","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"circle","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_circle', '⚪️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🟥','1F7E5','red square',default,'{"square","red"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","red"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('red_square', '🟥') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🟧','1F7E7','orange square',default,'{"square","orange"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","orange"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('orange_square', '🟧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🟨','1F7E8','yellow square',default,'{"square","yellow"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","yellow"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('yellow_square', '🟨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🟩','1F7E9','green square',default,'{"square","green"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","green"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('green_square', '🟩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🟦','1F7E6','blue square',default,'{"square","blue"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","blue"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('blue_square', '🟦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🟪','1F7EA','purple square',default,'{"square","purple"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","purple"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('purple_square', '🟪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🟫','1F7EB','brown square',default,'{"square","brown"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","brown"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('brown_square', '🟫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬛️','2B1B','black large square',default,'{"square","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('black_large_square', '⬛️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬜️','2B1C','white large square',default,'{"square","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_large_square', '⬜️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◼️','25FC','black medium square',default,'{"square","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('black_medium_square', '◼️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◻️','25FB','white medium square',default,'{"square","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_medium_square', '◻️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◾️','25FE','black medium-small square',default,'{"square","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('black_medium_small_square', '◾️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◽️','25FD','white medium-small square',default,'{"square","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_medium_small_square', '◽️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('▪️','25AA','black small square',default,'{"square","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('black_small_square', '▪️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('▫️','25AB','white small square',default,'{"square","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_small_square', '▫️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔶','1F536','large orange diamond',default,'{"diamond","orange","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"diamond","orange","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('large_orange_diamond', '🔶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔷','1F537','large blue diamond',default,'{"diamond","blue","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"diamond","blue","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('large_blue_diamond', '🔷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔸','1F538','small orange diamond',default,'{"diamond","orange","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"diamond","orange","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('small_orange_diamond', '🔸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔹','1F539','small blue diamond',default,'{"diamond","blue","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"diamond","blue","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('small_blue_diamond', '🔹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔺','1F53A','red triangle pointed up',default,'{"arrow","red","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"arrow","red","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('small_red_triangle', '🔺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔻','1F53B','red triangle pointed down',default,'{"arrow","geometric","red","down"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"arrow","geometric","red","down"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('small_red_triangle_down', '🔻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('💠','1F4A0','diamond with a dot',default,'{"comic","diamond","inside","geometric"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"comic","diamond","inside","geometric"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('diamond_shape_with_a_dot_inside', '💠') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('diamond_with_a_dot', '💠') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔘','1F518','radio button',default,'{"radio","geometric","button"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"radio","geometric","button"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('radio_button', '🔘') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔳','1F533','white square button',default,'{"square","outlined","geometric","button"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","outlined","geometric","button"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_square_button', '🔳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🔲','1F532','black square button',default,'{"square","geometric","button"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"square","geometric","button"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('black_square_button', '🔲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏁','1F3C1','chequered flag',default,'{"chequered","checkered","grid","racing","black","white"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"chequered","checkered","grid","racing","black","white"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('checkered_flag', '🏁') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🚩','1F6A9','triangular flag',default,'{"post"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"post"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('triangular_flag', '🚩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('triangular_flag_on_post', '🚩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🎌','1F38C','crossed flags',default,'{"crossed","japanese","celebration","cross"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"crossed","japanese","celebration","cross"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('crossed_flags', '🎌') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴','1F3F4','black flag',default,'{"waving"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"waving"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('black_flag', '🏴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️','1F3F3','white flag',default,'{"white","waving"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"white","waving"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('white_flag', '🏳️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️‍🌈','1F3F3-FE0F-200D-1F308','rainbow flag',default,'{"color","pride","rainbow"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"color","pride","rainbow"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('rainbow_flag', '🏳️‍🌈') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️‍⚧️','1F3F3-FE0F-200D-26A7-FE0F','transgender flag',default,'{"queer","transgender","LGBT","trans","flag","light blue","gender","pink","white"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"queer","transgender","LGBT","trans","flag","light blue","gender","pink","white"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('transgender_flag', '🏳️‍⚧️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴‍☠️','1F3F4-200D-2620-FE0F','pirate flag',default,'{"treasure","jolly roger","plunder","pirate"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"treasure","jolly roger","plunder","pirate"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('jolly_roger', '🏴‍☠️') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('pirate_flag', '🏴‍☠️') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇨','1F1E6-1F1E8','flag: Ascension Island',default,'{"AC","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"AC","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ac', '🇦🇨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ascension_island', '🇦🇨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇩','1F1E6-1F1E9','flag: Andorra',default,'{"flag","AD"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AD"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ad', '🇦🇩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('andorra', '🇦🇩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇪','1F1E6-1F1EA','flag: United Arab Emirates',default,'{"flag","AE"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AE"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ae', '🇦🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('united_arab_emirates', '🇦🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇫','1F1E6-1F1EB','flag: Afghanistan',default,'{"AF","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"AF","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_af', '🇦🇫') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('afghanistan', '🇦🇫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇬','1F1E6-1F1EC','flag: Antigua & Barbuda',default,'{"flag","AG"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AG"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('antigua_barbuda', '🇦🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ag', '🇦🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇮','1F1E6-1F1EE','flag: Anguilla',default,'{"flag","AI"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AI"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('anguilla', '🇦🇮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ai', '🇦🇮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇱','1F1E6-1F1F1','flag: Albania',default,'{"flag","AL"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AL"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('albania', '🇦🇱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_al', '🇦🇱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇲','1F1E6-1F1F2','flag: Armenia',default,'{"flag","AM"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AM"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('armenia', '🇦🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_am', '🇦🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇴','1F1E6-1F1F4','flag: Angola',default,'{"flag","AO"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AO"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ao', '🇦🇴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('angola', '🇦🇴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇶','1F1E6-1F1F6','flag: Antarctica',default,'{"flag","AQ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AQ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('antarctica', '🇦🇶') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_aq', '🇦🇶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇷','1F1E6-1F1F7','flag: Argentina',default,'{"flag","AR"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AR"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('argentina', '🇦🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ar', '🇦🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇸','1F1E6-1F1F8','flag: American Samoa',default,'{"flag","AS"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AS"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('american_samoa', '🇦🇸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_as', '🇦🇸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇹','1F1E6-1F1F9','flag: Austria',default,'{"flag","AT"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AT"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_at', '🇦🇹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('austria', '🇦🇹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇺','1F1E6-1F1FA','flag: Australia',default,'{"AU","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"AU","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('australia', '🇦🇺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_au', '🇦🇺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇼','1F1E6-1F1FC','flag: Aruba',default,'{"flag","AW"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AW"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('aruba', '🇦🇼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_aw', '🇦🇼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇽','1F1E6-1F1FD','flag: Åland Islands',default,'{"flag","AX"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AX"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ax', '🇦🇽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('aland_islands', '🇦🇽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇿','1F1E6-1F1FF','flag: Azerbaijan',default,'{"flag","AZ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","AZ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_az', '🇦🇿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('azerbaijan', '🇦🇿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇦','1F1E7-1F1E6','flag: Bosnia & Herzegovina',default,'{"flag","BA"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BA"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ba', '🇧🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bosnia_herzegovina', '🇧🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇧','1F1E7-1F1E7','flag: Barbados',default,'{"flag","BB"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BB"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('barbados', '🇧🇧') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_bb', '🇧🇧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇩','1F1E7-1F1E9','flag: Bangladesh',default,'{"flag","BD"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BD"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bangladesh', '🇧🇩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_bd', '🇧🇩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇪','1F1E7-1F1EA','flag: Belgium',default,'{"flag","BE"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BE"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('belgium', '🇧🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_be', '🇧🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇫','1F1E7-1F1EB','flag: Burkina Faso',default,'{"BF","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"BF","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_bf', '🇧🇫') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('burkina_faso', '🇧🇫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇬','1F1E7-1F1EC','flag: Bulgaria',default,'{"BG","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"BG","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bulgaria', '🇧🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_bg', '🇧🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇭','1F1E7-1F1ED','flag: Bahrain',default,'{"flag","BH"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BH"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bahrain', '🇧🇭') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_bh', '🇧🇭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇮','1F1E7-1F1EE','flag: Burundi',default,'{"flag","BI"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BI"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_bi', '🇧🇮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('burundi', '🇧🇮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇯','1F1E7-1F1EF','flag: Benin',default,'{"flag","BJ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BJ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_bj', '🇧🇯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('benin', '🇧🇯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇱','1F1E7-1F1F1','flag: St. Barthélemy',default,'{"flag","BL"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BL"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_bl', '🇧🇱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('st_barthelemy', '🇧🇱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇲','1F1E7-1F1F2','flag: Bermuda',default,'{"flag","BM"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BM"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_bm', '🇧🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bermuda', '🇧🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇳','1F1E7-1F1F3','flag: Brunei',default,'{"flag","BN"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BN"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('brunei', '🇧🇳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_bn', '🇧🇳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇴','1F1E7-1F1F4','flag: Bolivia',default,'{"flag","BO"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BO"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bolivia', '🇧🇴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_bo', '🇧🇴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇶','1F1E7-1F1F6','flag: Caribbean Netherlands',default,'{"flag","BQ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BQ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('caribbean_netherlands', '🇧🇶') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_bq', '🇧🇶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇷','1F1E7-1F1F7','flag: Brazil',default,'{"flag","BR"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BR"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_br', '🇧🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('brazil', '🇧🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇸','1F1E7-1F1F8','flag: Bahamas',default,'{"flag","BS"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BS"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bahamas', '🇧🇸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_bs', '🇧🇸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇹','1F1E7-1F1F9','flag: Bhutan',default,'{"flag","BT"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BT"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('bhutan', '🇧🇹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_bt', '🇧🇹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇻','1F1E7-1F1FB','flag: Bouvet Island',default,'{"flag","BV"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BV"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_bv', '🇧🇻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('bouvet_island', '🇧🇻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇼','1F1E7-1F1FC','flag: Botswana',default,'{"flag","BW"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","BW"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_bw', '🇧🇼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('botswana', '🇧🇼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇾','1F1E7-1F1FE','flag: Belarus',default,'{"BY","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"BY","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_by', '🇧🇾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('belarus', '🇧🇾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧🇿','1F1E7-1F1FF','flag: Belize',default,'{"BZ","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"BZ","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('belize', '🇧🇿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_bz', '🇧🇿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇦','1F1E8-1F1E6','flag: Canada',default,'{"flag","CA"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CA"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ca', '🇨🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('canada', '🇨🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇨','1F1E8-1F1E8','flag: Cocos (Keeling) Islands',default,'{"CC","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"CC","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_cc', '🇨🇨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cocos_islands', '🇨🇨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇩','1F1E8-1F1E9','flag: Congo - Kinshasa',default,'{"flag","CD"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CD"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('congo_kinshasa', '🇨🇩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_cd', '🇨🇩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇫','1F1E8-1F1EB','flag: Central African Republic',default,'{"CF","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"CF","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_cf', '🇨🇫') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('central_african_republic', '🇨🇫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇬','1F1E8-1F1EC','flag: Congo - Brazzaville',default,'{"flag","CG"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CG"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('congo_brazzaville', '🇨🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_cg', '🇨🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇭','1F1E8-1F1ED','flag: Switzerland',default,'{"flag","CH"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CH"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ch', '🇨🇭') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('switzerland', '🇨🇭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇮','1F1E8-1F1EE','flag: Côte d’Ivoire',default,'{"flag","CI"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CI"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ci', '🇨🇮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cote_divoire', '🇨🇮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇰','1F1E8-1F1F0','flag: Cook Islands',default,'{"flag","CK"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CK"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ck', '🇨🇰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cook_islands', '🇨🇰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇱','1F1E8-1F1F1','flag: Chile',default,'{"flag","CL"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CL"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_cl', '🇨🇱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('chile', '🇨🇱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇲','1F1E8-1F1F2','flag: Cameroon',default,'{"flag","CM"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CM"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cameroon', '🇨🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_cm', '🇨🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇳','1F1E8-1F1F3','flag: China',default,'{"flag","CN"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CN"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('china', '🇨🇳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_cn', '🇨🇳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇴','1F1E8-1F1F4','flag: Colombia',default,'{"flag","CO"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CO"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_co', '🇨🇴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('colombia', '🇨🇴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇵','1F1E8-1F1F5','flag: Clipperton Island',default,'{"CP","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"CP","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('clipperton_island', '🇨🇵') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_cp', '🇨🇵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇷','1F1E8-1F1F7','flag: Costa Rica',default,'{"flag","CR"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CR"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('costa_rica', '🇨🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_cr', '🇨🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇺','1F1E8-1F1FA','flag: Cuba',default,'{"CU","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"CU","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_cu', '🇨🇺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cuba', '🇨🇺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇻','1F1E8-1F1FB','flag: Cape Verde',default,'{"flag","CV"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CV"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('cape_verde', '🇨🇻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_cv', '🇨🇻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇼','1F1E8-1F1FC','flag: Curaçao',default,'{"flag","CW"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CW"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_cw', '🇨🇼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('curacao', '🇨🇼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇽','1F1E8-1F1FD','flag: Christmas Island',default,'{"CX","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"CX","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_cx', '🇨🇽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('christmas_island', '🇨🇽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇾','1F1E8-1F1FE','flag: Cyprus',default,'{"CY","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"CY","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_cy', '🇨🇾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cyprus', '🇨🇾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨🇿','1F1E8-1F1FF','flag: Czechia',default,'{"flag","CZ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","CZ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('czechia', '🇨🇿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_cz', '🇨🇿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('czech_republic', '🇨🇿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇩🇪','1F1E9-1F1EA','flag: Germany',default,'{"flag","DE"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","DE"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('germany', '🇩🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_de', '🇩🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇩🇬','1F1E9-1F1EC','flag: Diego Garcia',default,'{"flag","DG"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","DG"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_dg', '🇩🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('diego_garcia', '🇩🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇩🇯','1F1E9-1F1EF','flag: Djibouti',default,'{"DJ","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"DJ","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('djibouti', '🇩🇯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_dj', '🇩🇯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇩🇰','1F1E9-1F1F0','flag: Denmark',default,'{"flag","DK"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","DK"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('denmark', '🇩🇰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_dk', '🇩🇰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇩🇲','1F1E9-1F1F2','flag: Dominica',default,'{"flag","DM"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","DM"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_dm', '🇩🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('dominica', '🇩🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇩🇴','1F1E9-1F1F4','flag: Dominican Republic',default,'{"flag","DO"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","DO"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('dominican_republic', '🇩🇴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_do', '🇩🇴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇩🇿','1F1E9-1F1FF','flag: Algeria',default,'{"flag","DZ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","DZ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('algeria', '🇩🇿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_dz', '🇩🇿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇪🇦','1F1EA-1F1E6','flag: Ceuta & Melilla',default,'{"flag","EA"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","EA"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ea', '🇪🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ceuta_melilla', '🇪🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇪🇨','1F1EA-1F1E8','flag: Ecuador',default,'{"flag","EC"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","EC"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('ecuador', '🇪🇨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ec', '🇪🇨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇪🇪','1F1EA-1F1EA','flag: Estonia',default,'{"EE","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"EE","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('estonia', '🇪🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ee', '🇪🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇪🇬','1F1EA-1F1EC','flag: Egypt',default,'{"flag","EG"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","EG"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_eg', '🇪🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('egypt', '🇪🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇪🇭','1F1EA-1F1ED','flag: Western Sahara',default,'{"EH","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"EH","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_eh', '🇪🇭') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('western_sahara', '🇪🇭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇪🇷','1F1EA-1F1F7','flag: Eritrea',default,'{"ER","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ER","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_er', '🇪🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('eritrea', '🇪🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇪🇸','1F1EA-1F1F8','flag: Spain',default,'{"ES","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ES","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('spain', '🇪🇸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_es', '🇪🇸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇪🇹','1F1EA-1F1F9','flag: Ethiopia',default,'{"flag","ET"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","ET"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_et', '🇪🇹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ethiopia', '🇪🇹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇪🇺','1F1EA-1F1FA','flag: European Union',default,'{"flag","EU"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","EU"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_eu', '🇪🇺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('european_union', '🇪🇺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇫🇮','1F1EB-1F1EE','flag: Finland',default,'{"FI","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"FI","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_fi', '🇫🇮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('finland', '🇫🇮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇫🇯','1F1EB-1F1EF','flag: Fiji',default,'{"flag","FJ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","FJ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('fiji', '🇫🇯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_fj', '🇫🇯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇫🇰','1F1EB-1F1F0','flag: Falkland Islands',default,'{"FK","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"FK","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('falkland_islands', '🇫🇰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_fk', '🇫🇰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇫🇲','1F1EB-1F1F2','flag: Micronesia',default,'{"FM","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"FM","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('micronesia', '🇫🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_fm', '🇫🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇫🇴','1F1EB-1F1F4','flag: Faroe Islands',default,'{"flag","FO"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","FO"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_fo', '🇫🇴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('faroe_islands', '🇫🇴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇫🇷','1F1EB-1F1F7','flag: France',default,'{"flag","FR"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","FR"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('france', '🇫🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_fr', '🇫🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇦','1F1EC-1F1E6','flag: Gabon',default,'{"flag","GA"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","GA"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('gabon', '🇬🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ga', '🇬🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇧','1F1EC-1F1E7','flag: United Kingdom',default,'{"GB","england","flag","uk","union jack","great britain"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"GB","england","flag","uk","union jack","great britain"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('uk', '🇬🇧') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_gb', '🇬🇧') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('united_kingdom', '🇬🇧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇩','1F1EC-1F1E9','flag: Grenada',default,'{"flag","GD"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","GD"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('grenada', '🇬🇩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_gd', '🇬🇩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇪','1F1EC-1F1EA','flag: Georgia',default,'{"flag","GE"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","GE"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ge', '🇬🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('georgia', '🇬🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇫','1F1EC-1F1EB','flag: French Guiana',default,'{"flag","GF"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","GF"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_gf', '🇬🇫') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('french_guiana', '🇬🇫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇬','1F1EC-1F1EC','flag: Guernsey',default,'{"flag","GG"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","GG"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('guernsey', '🇬🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_gg', '🇬🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇭','1F1EC-1F1ED','flag: Ghana',default,'{"GH","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"GH","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_gh', '🇬🇭') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ghana', '🇬🇭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇮','1F1EC-1F1EE','flag: Gibraltar',default,'{"flag","GI"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","GI"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('gibraltar', '🇬🇮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_gi', '🇬🇮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇱','1F1EC-1F1F1','flag: Greenland',default,'{"flag","GL"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","GL"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('greenland', '🇬🇱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_gl', '🇬🇱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇲','1F1EC-1F1F2','flag: Gambia',default,'{"GM","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"GM","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_gm', '🇬🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('gambia', '🇬🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇳','1F1EC-1F1F3','flag: Guinea',default,'{"GN","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"GN","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_gn', '🇬🇳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('guinea', '🇬🇳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇵','1F1EC-1F1F5','flag: Guadeloupe',default,'{"GP","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"GP","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_gp', '🇬🇵') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('guadeloupe', '🇬🇵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇶','1F1EC-1F1F6','flag: Equatorial Guinea',default,'{"flag","GQ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","GQ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_gq', '🇬🇶') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('equatorial_guinea', '🇬🇶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇷','1F1EC-1F1F7','flag: Greece',default,'{"flag","GR"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","GR"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_gr', '🇬🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('greece', '🇬🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇸','1F1EC-1F1F8','flag: South Georgia & South Sandwich Islands',default,'{"flag","GS"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","GS"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_gs', '🇬🇸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('south_georgia_south_sandwich_islands', '🇬🇸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇹','1F1EC-1F1F9','flag: Guatemala',default,'{"flag","GT"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","GT"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('guatemala', '🇬🇹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_gt', '🇬🇹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇺','1F1EC-1F1FA','flag: Guam',default,'{"GU","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"GU","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_gu', '🇬🇺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('guam', '🇬🇺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇼','1F1EC-1F1FC','flag: Guinea-Bissau',default,'{"flag","GW"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","GW"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_gw', '🇬🇼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('guinea_bissau', '🇬🇼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬🇾','1F1EC-1F1FE','flag: Guyana',default,'{"flag","GY"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","GY"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('guyana', '🇬🇾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_gy', '🇬🇾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇭🇰','1F1ED-1F1F0','flag: Hong Kong SAR China',default,'{"flag","HK"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","HK"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hong_kong', '🇭🇰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_hk', '🇭🇰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇭🇲','1F1ED-1F1F2','flag: Heard & McDonald Islands',default,'{"HM","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"HM","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('heard_mcdonald_islands', '🇭🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_hm', '🇭🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇭🇳','1F1ED-1F1F3','flag: Honduras',default,'{"flag","HN"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","HN"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('honduras', '🇭🇳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_hn', '🇭🇳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇭🇷','1F1ED-1F1F7','flag: Croatia',default,'{"flag","HR"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","HR"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('croatia', '🇭🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_hr', '🇭🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇭🇹','1F1ED-1F1F9','flag: Haiti',default,'{"HT","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"HT","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('haiti', '🇭🇹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ht', '🇭🇹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇭🇺','1F1ED-1F1FA','flag: Hungary',default,'{"flag","HU"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","HU"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('hungary', '🇭🇺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_hu', '🇭🇺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇮🇨','1F1EE-1F1E8','flag: Canary Islands',default,'{"flag","IC"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","IC"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ic', '🇮🇨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('canary_islands', '🇮🇨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇮🇩','1F1EE-1F1E9','flag: Indonesia',default,'{"ID","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ID","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('indonesia', '🇮🇩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_id', '🇮🇩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇮🇪','1F1EE-1F1EA','flag: Ireland',default,'{"flag","IE"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","IE"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ie', '🇮🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ireland', '🇮🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇮🇱','1F1EE-1F1F1','flag: Israel',default,'{"flag","IL"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","IL"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_il', '🇮🇱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('israel', '🇮🇱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇮🇲','1F1EE-1F1F2','flag: Isle of Man',default,'{"flag","IM"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","IM"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('isle_of_man', '🇮🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_im', '🇮🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇮🇳','1F1EE-1F1F3','flag: India',default,'{"flag","IN"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","IN"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('india', '🇮🇳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_in', '🇮🇳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇮🇴','1F1EE-1F1F4','flag: British Indian Ocean Territory',default,'{"flag","IO"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","IO"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_io', '🇮🇴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('british_indian_ocean_territory', '🇮🇴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇮🇶','1F1EE-1F1F6','flag: Iraq',default,'{"flag","IQ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","IQ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('iraq', '🇮🇶') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_iq', '🇮🇶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇮🇷','1F1EE-1F1F7','flag: Iran',default,'{"IR","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"IR","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('iran', '🇮🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ir', '🇮🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇮🇸','1F1EE-1F1F8','flag: Iceland',default,'{"flag","IS"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","IS"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_is', '🇮🇸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('iceland', '🇮🇸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇮🇹','1F1EE-1F1F9','flag: Italy',default,'{"flag","IT"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","IT"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('italy', '🇮🇹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_it', '🇮🇹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇯🇪','1F1EF-1F1EA','flag: Jersey',default,'{"flag","JE"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","JE"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('jersey', '🇯🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_je', '🇯🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇯🇲','1F1EF-1F1F2','flag: Jamaica',default,'{"flag","JM"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","JM"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('jamaica', '🇯🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_jm', '🇯🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇯🇴','1F1EF-1F1F4','flag: Jordan',default,'{"JO","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"JO","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_jo', '🇯🇴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('jordan', '🇯🇴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇯🇵','1F1EF-1F1F5','flag: Japan',default,'{"flag","JP"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","JP"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('japan', '🇯🇵') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_jp', '🇯🇵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇰🇪','1F1F0-1F1EA','flag: Kenya',default,'{"flag","KE"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","KE"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kenya', '🇰🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ke', '🇰🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇰🇬','1F1F0-1F1EC','flag: Kyrgyzstan',default,'{"KG","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"KG","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_kg', '🇰🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kyrgyzstan', '🇰🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇰🇭','1F1F0-1F1ED','flag: Cambodia',default,'{"flag","KH"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","KH"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_kh', '🇰🇭') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cambodia', '🇰🇭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇰🇮','1F1F0-1F1EE','flag: Kiribati',default,'{"flag","KI"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","KI"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ki', '🇰🇮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kiribati', '🇰🇮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇰🇲','1F1F0-1F1F2','flag: Comoros',default,'{"flag","KM"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","KM"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_km', '🇰🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('comoros', '🇰🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇰🇳','1F1F0-1F1F3','flag: St. Kitts & Nevis',default,'{"KN","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"KN","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('st_kitts_nevis', '🇰🇳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_kn', '🇰🇳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇰🇵','1F1F0-1F1F5','flag: North Korea',default,'{"flag","KP"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","KP"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_kp', '🇰🇵') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('north_korea', '🇰🇵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇰🇷','1F1F0-1F1F7','flag: South Korea',default,'{"flag","KR"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","KR"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('south_korea', '🇰🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_kr', '🇰🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇰🇼','1F1F0-1F1FC','flag: Kuwait',default,'{"flag","KW"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","KW"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kuwait', '🇰🇼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_kw', '🇰🇼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇰🇾','1F1F0-1F1FE','flag: Cayman Islands',default,'{"KY","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"KY","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ky', '🇰🇾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('cayman_islands', '🇰🇾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇰🇿','1F1F0-1F1FF','flag: Kazakhstan',default,'{"flag","KZ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","KZ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_kz', '🇰🇿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('kazakhstan', '🇰🇿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇱🇦','1F1F1-1F1E6','flag: Laos',default,'{"LA","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"LA","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_la', '🇱🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('laos', '🇱🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇱🇧','1F1F1-1F1E7','flag: Lebanon',default,'{"flag","LB"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","LB"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lebanon', '🇱🇧') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_lb', '🇱🇧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇱🇨','1F1F1-1F1E8','flag: St. Lucia',default,'{"LC","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"LC","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('st_lucia', '🇱🇨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_lc', '🇱🇨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇱🇮','1F1F1-1F1EE','flag: Liechtenstein',default,'{"LI","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"LI","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_li', '🇱🇮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('liechtenstein', '🇱🇮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇱🇰','1F1F1-1F1F0','flag: Sri Lanka',default,'{"LK","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"LK","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sri_lanka', '🇱🇰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_lk', '🇱🇰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇱🇷','1F1F1-1F1F7','flag: Liberia',default,'{"LR","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"LR","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_lr', '🇱🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('liberia', '🇱🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇱🇸','1F1F1-1F1F8','flag: Lesotho',default,'{"flag","LS"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","LS"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lesotho', '🇱🇸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ls', '🇱🇸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇱🇹','1F1F1-1F1F9','flag: Lithuania',default,'{"LT","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"LT","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('lithuania', '🇱🇹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_lt', '🇱🇹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇱🇺','1F1F1-1F1FA','flag: Luxembourg',default,'{"flag","LU"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","LU"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_lu', '🇱🇺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('luxembourg', '🇱🇺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇱🇻','1F1F1-1F1FB','flag: Latvia',default,'{"LV","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"LV","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_lv', '🇱🇻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('latvia', '🇱🇻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇱🇾','1F1F1-1F1FE','flag: Libya',default,'{"flag","LY"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","LY"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('libya', '🇱🇾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ly', '🇱🇾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇦','1F1F2-1F1E6','flag: Morocco',default,'{"flag","MA"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MA"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('morocco', '🇲🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ma', '🇲🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇨','1F1F2-1F1E8','flag: Monaco',default,'{"MC","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"MC","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_mc', '🇲🇨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('monaco', '🇲🇨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇩','1F1F2-1F1E9','flag: Moldova',default,'{"MD","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"MD","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('moldova', '🇲🇩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_md', '🇲🇩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇪','1F1F2-1F1EA','flag: Montenegro',default,'{"ME","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ME","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('montenegro', '🇲🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_me', '🇲🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇫','1F1F2-1F1EB','flag: St. Martin',default,'{"flag","MF"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MF"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('st_martin', '🇲🇫') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_mf', '🇲🇫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇬','1F1F2-1F1EC','flag: Madagascar',default,'{"flag","MG"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MG"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('madagascar', '🇲🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_mg', '🇲🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇭','1F1F2-1F1ED','flag: Marshall Islands',default,'{"MH","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"MH","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('marshall_islands', '🇲🇭') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_mh', '🇲🇭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇰','1F1F2-1F1F0','flag: North Macedonia',default,'{"MK","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"MK","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_mk', '🇲🇰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('macedonia', '🇲🇰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇱','1F1F2-1F1F1','flag: Mali',default,'{"flag","ML"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","ML"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mali', '🇲🇱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ml', '🇲🇱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇲','1F1F2-1F1F2','flag: Myanmar (Burma)',default,'{"flag","MM"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MM"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('burma', '🇲🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('myanmar', '🇲🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_mm', '🇲🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇳','1F1F2-1F1F3','flag: Mongolia',default,'{"flag","MN"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MN"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_mn', '🇲🇳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mongolia', '🇲🇳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇴','1F1F2-1F1F4','flag: Macao SAR China',default,'{"flag","MO"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MO"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('macao', '🇲🇴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_mo', '🇲🇴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('macau', '🇲🇴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇵','1F1F2-1F1F5','flag: Northern Mariana Islands',default,'{"MP","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"MP","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_mp', '🇲🇵') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('northern_mariana_islands', '🇲🇵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇶','1F1F2-1F1F6','flag: Martinique',default,'{"flag","MQ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MQ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('martinique', '🇲🇶') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_mq', '🇲🇶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇷','1F1F2-1F1F7','flag: Mauritania',default,'{"flag","MR"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MR"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_mr', '🇲🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mauritania', '🇲🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇸','1F1F2-1F1F8','flag: Montserrat',default,'{"flag","MS"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MS"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ms', '🇲🇸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('montserrat', '🇲🇸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇹','1F1F2-1F1F9','flag: Malta',default,'{"flag","MT"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MT"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_mt', '🇲🇹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('malta', '🇲🇹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇺','1F1F2-1F1FA','flag: Mauritius',default,'{"flag","MU"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MU"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_mu', '🇲🇺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mauritius', '🇲🇺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇻','1F1F2-1F1FB','flag: Maldives',default,'{"flag","MV"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MV"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('maldives', '🇲🇻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_mv', '🇲🇻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇼','1F1F2-1F1FC','flag: Malawi',default,'{"flag","MW"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MW"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_mw', '🇲🇼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('malawi', '🇲🇼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇽','1F1F2-1F1FD','flag: Mexico',default,'{"flag","MX"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MX"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('mexico', '🇲🇽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_mx', '🇲🇽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇾','1F1F2-1F1FE','flag: Malaysia',default,'{"MY","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"MY","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('malaysia', '🇲🇾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_my', '🇲🇾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲🇿','1F1F2-1F1FF','flag: Mozambique',default,'{"flag","MZ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","MZ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_mz', '🇲🇿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mozambique', '🇲🇿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇳🇦','1F1F3-1F1E6','flag: Namibia',default,'{"flag","NA"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","NA"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('namibia', '🇳🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_na', '🇳🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇳🇨','1F1F3-1F1E8','flag: New Caledonia',default,'{"NC","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"NC","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_nc', '🇳🇨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('new_caledonia', '🇳🇨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇳🇪','1F1F3-1F1EA','flag: Niger',default,'{"flag","NE"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","NE"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ne', '🇳🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('niger', '🇳🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇳🇫','1F1F3-1F1EB','flag: Norfolk Island',default,'{"flag","NF"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","NF"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_nf', '🇳🇫') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('norfolk_island', '🇳🇫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇳🇬','1F1F3-1F1EC','flag: Nigeria',default,'{"flag","NG"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","NG"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ng', '🇳🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('nigeria', '🇳🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇳🇮','1F1F3-1F1EE','flag: Nicaragua',default,'{"flag","NI"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","NI"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ni', '🇳🇮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('nicaragua', '🇳🇮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇳🇱','1F1F3-1F1F1','flag: Netherlands',default,'{"NL","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"NL","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_nl', '🇳🇱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('netherlands', '🇳🇱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇳🇴','1F1F3-1F1F4','flag: Norway',default,'{"flag","NO"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","NO"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('norway', '🇳🇴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_no', '🇳🇴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇳🇵','1F1F3-1F1F5','flag: Nepal',default,'{"flag","NP"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","NP"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('nepal', '🇳🇵') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_np', '🇳🇵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇳🇷','1F1F3-1F1F7','flag: Nauru',default,'{"NR","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"NR","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('nauru', '🇳🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_nr', '🇳🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇳🇺','1F1F3-1F1FA','flag: Niue',default,'{"NU","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"NU","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('niue', '🇳🇺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_nu', '🇳🇺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇳🇿','1F1F3-1F1FF','flag: New Zealand',default,'{"flag","NZ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","NZ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_nz', '🇳🇿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('new_zealand', '🇳🇿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇴🇲','1F1F4-1F1F2','flag: Oman',default,'{"flag","OM"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","OM"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_om', '🇴🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('oman', '🇴🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇦','1F1F5-1F1E6','flag: Panama',default,'{"PA","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"PA","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_pa', '🇵🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('panama', '🇵🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇪','1F1F5-1F1EA','flag: Peru',default,'{"flag","PE"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","PE"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_pe', '🇵🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('peru', '🇵🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇫','1F1F5-1F1EB','flag: French Polynesia',default,'{"PF","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"PF","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('french_polynesia', '🇵🇫') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_pf', '🇵🇫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇬','1F1F5-1F1EC','flag: Papua New Guinea',default,'{"flag","PG"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","PG"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('papua_new_guinea', '🇵🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_pg', '🇵🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇭','1F1F5-1F1ED','flag: Philippines',default,'{"flag","PH"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","PH"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ph', '🇵🇭') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('philippines', '🇵🇭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇰','1F1F5-1F1F0','flag: Pakistan',default,'{"flag","PK"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","PK"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pakistan', '🇵🇰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_pk', '🇵🇰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇱','1F1F5-1F1F1','flag: Poland',default,'{"flag","PL"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","PL"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_pl', '🇵🇱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('poland', '🇵🇱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇲','1F1F5-1F1F2','flag: St. Pierre & Miquelon',default,'{"flag","PM"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","PM"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('st_pierre_miquelon', '🇵🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_pm', '🇵🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇳','1F1F5-1F1F3','flag: Pitcairn Islands',default,'{"flag","PN"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","PN"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('pitcairn_islands', '🇵🇳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_pn', '🇵🇳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇷','1F1F5-1F1F7','flag: Puerto Rico',default,'{"flag","PR"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","PR"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_pr', '🇵🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('puerto_rico', '🇵🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇸','1F1F5-1F1F8','flag: Palestinian Territories',default,'{"flag","PS"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","PS"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('palestinian_territories', '🇵🇸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ps', '🇵🇸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇹','1F1F5-1F1F9','flag: Portugal',default,'{"PT","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"PT","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_pt', '🇵🇹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('portugal', '🇵🇹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇼','1F1F5-1F1FC','flag: Palau',default,'{"flag","PW"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","PW"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_pw', '🇵🇼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('palau', '🇵🇼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵🇾','1F1F5-1F1FE','flag: Paraguay',default,'{"PY","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"PY","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('paraguay', '🇵🇾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_py', '🇵🇾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇶🇦','1F1F6-1F1E6','flag: Qatar',default,'{"flag","QA"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","QA"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('qatar', '🇶🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_qa', '🇶🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇷🇪','1F1F7-1F1EA','flag: Réunion',default,'{"flag","RE"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","RE"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_re', '🇷🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('reunion', '🇷🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇷🇴','1F1F7-1F1F4','flag: Romania',default,'{"RO","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"RO","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ro', '🇷🇴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('romania', '🇷🇴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇷🇸','1F1F7-1F1F8','flag: Serbia',default,'{"flag","RS"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","RS"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('serbia', '🇷🇸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_rs', '🇷🇸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇷🇺','1F1F7-1F1FA','flag: Russia',default,'{"flag","RU"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","RU"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('russia', '🇷🇺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ru', '🇷🇺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇷🇼','1F1F7-1F1FC','flag: Rwanda',default,'{"RW","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"RW","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_rw', '🇷🇼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('rwanda', '🇷🇼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇦','1F1F8-1F1E6','flag: Saudi Arabia',default,'{"flag","SA"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SA"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_sa', '🇸🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('saudi_arabia', '🇸🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇧','1F1F8-1F1E7','flag: Solomon Islands',default,'{"flag","SB"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SB"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_sb', '🇸🇧') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('solomon_islands', '🇸🇧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇨','1F1F8-1F1E8','flag: Seychelles',default,'{"flag","SC"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SC"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_sc', '🇸🇨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('seychelles', '🇸🇨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇩','1F1F8-1F1E9','flag: Sudan',default,'{"SD","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"SD","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sudan', '🇸🇩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_sd', '🇸🇩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇪','1F1F8-1F1EA','flag: Sweden',default,'{"flag","SE"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SE"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sweden', '🇸🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_se', '🇸🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇬','1F1F8-1F1EC','flag: Singapore',default,'{"flag","SG"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SG"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('singapore', '🇸🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_sg', '🇸🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇭','1F1F8-1F1ED','flag: St. Helena',default,'{"flag","SH"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SH"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_sh', '🇸🇭') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('st_helena', '🇸🇭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇮','1F1F8-1F1EE','flag: Slovenia',default,'{"flag","SI"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SI"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_si', '🇸🇮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('slovenia', '🇸🇮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇯','1F1F8-1F1EF','flag: Svalbard & Jan Mayen',default,'{"flag","SJ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SJ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_sj', '🇸🇯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('svalbard_jan_mayen', '🇸🇯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇰','1F1F8-1F1F0','flag: Slovakia',default,'{"flag","SK"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SK"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('slovakia', '🇸🇰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_sk', '🇸🇰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇱','1F1F8-1F1F1','flag: Sierra Leone',default,'{"flag","SL"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SL"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('sierra_leone', '🇸🇱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_sl', '🇸🇱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇲','1F1F8-1F1F2','flag: San Marino',default,'{"flag","SM"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SM"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('san_marino', '🇸🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_sm', '🇸🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇳','1F1F8-1F1F3','flag: Senegal',default,'{"flag","SN"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SN"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('senegal', '🇸🇳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_sn', '🇸🇳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇴','1F1F8-1F1F4','flag: Somalia',default,'{"flag","SO"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SO"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('somalia', '🇸🇴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_so', '🇸🇴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇷','1F1F8-1F1F7','flag: Suriname',default,'{"flag","SR"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SR"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('suriname', '🇸🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_sr', '🇸🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇸','1F1F8-1F1F8','flag: South Sudan',default,'{"flag","SS"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SS"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('south_sudan', '🇸🇸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_ss', '🇸🇸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇹','1F1F8-1F1F9','flag: São Tomé & Príncipe',default,'{"flag","ST"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","ST"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_st', '🇸🇹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sao_tome_principe', '🇸🇹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇻','1F1F8-1F1FB','flag: El Salvador',default,'{"flag","SV"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SV"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('el_salvador', '🇸🇻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_sv', '🇸🇻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇽','1F1F8-1F1FD','flag: Sint Maarten',default,'{"flag","SX"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SX"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_sx', '🇸🇽') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('sint_maarten', '🇸🇽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇾','1F1F8-1F1FE','flag: Syria',default,'{"flag","SY"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SY"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('syria', '🇸🇾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_sy', '🇸🇾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸🇿','1F1F8-1F1FF','flag: Eswatini',default,'{"flag","SZ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","SZ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_sz', '🇸🇿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('eswatini', '🇸🇿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('swaziland', '🇸🇿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇦','1F1F9-1F1E6','flag: Tristan da Cunha',default,'{"flag","TA"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TA"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ta', '🇹🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('tristan_da_cunha', '🇹🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇨','1F1F9-1F1E8','flag: Turks & Caicos Islands',default,'{"flag","TC"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TC"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_tc', '🇹🇨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('turks_caicos_islands', '🇹🇨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇩','1F1F9-1F1E9','flag: Chad',default,'{"flag","TD"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TD"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('chad', '🇹🇩') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_td', '🇹🇩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇫','1F1F9-1F1EB','flag: French Southern Territories',default,'{"flag","TF"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TF"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_tf', '🇹🇫') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('french_southern_territories', '🇹🇫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇬','1F1F9-1F1EC','flag: Togo',default,'{"TG","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"TG","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('togo', '🇹🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_tg', '🇹🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇭','1F1F9-1F1ED','flag: Thailand',default,'{"flag","TH"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TH"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('thailand', '🇹🇭') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_th', '🇹🇭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇯','1F1F9-1F1EF','flag: Tajikistan',default,'{"TJ","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"TJ","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tajikistan', '🇹🇯') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_tj', '🇹🇯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇰','1F1F9-1F1F0','flag: Tokelau',default,'{"flag","TK"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TK"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tokelau', '🇹🇰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_tk', '🇹🇰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇱','1F1F9-1F1F1','flag: Timor-Leste',default,'{"flag","TL"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TL"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_tl', '🇹🇱') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('timor_leste', '🇹🇱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇲','1F1F9-1F1F2','flag: Turkmenistan',default,'{"flag","TM"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TM"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_tm', '🇹🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('turkmenistan', '🇹🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇳','1F1F9-1F1F3','flag: Tunisia',default,'{"flag","TN"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TN"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tunisia', '🇹🇳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_tn', '🇹🇳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇴','1F1F9-1F1F4','flag: Tonga',default,'{"flag","TO"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TO"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_to', '🇹🇴') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('tonga', '🇹🇴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇷','1F1F9-1F1F7','flag: Turkey',default,'{"flag","TR"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TR"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_tr', '🇹🇷') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('turkey_tr', '🇹🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇹','1F1F9-1F1F9','flag: Trinidad & Tobago',default,'{"TT","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"TT","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_tt', '🇹🇹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('trinidad_tobago', '🇹🇹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇻','1F1F9-1F1FB','flag: Tuvalu',default,'{"flag","TV"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TV"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tuvalu', '🇹🇻') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_tv', '🇹🇻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇼','1F1F9-1F1FC','flag: Taiwan',default,'{"flag","TW"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TW"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('taiwan', '🇹🇼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_tw', '🇹🇼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹🇿','1F1F9-1F1FF','flag: Tanzania',default,'{"flag","TZ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","TZ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('tanzania', '🇹🇿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_tz', '🇹🇿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇺🇦','1F1FA-1F1E6','flag: Ukraine',default,'{"UA","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"UA","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ua', '🇺🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('ukraine', '🇺🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇺🇬','1F1FA-1F1EC','flag: Uganda',default,'{"flag","UG"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","UG"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ug', '🇺🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('uganda', '🇺🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇺🇲','1F1FA-1F1F2','flag: U.S. Outlying Islands',default,'{"UM","flag","united states","usa","us","america"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"UM","flag","united states","usa","us","america"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('us_outlying_islands', '🇺🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_um', '🇺🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇺🇳','1F1FA-1F1F3','flag: United Nations',default,'{"flag","UN"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","UN"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('un', '🇺🇳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_un', '🇺🇳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('united_nations', '🇺🇳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇺🇸','1F1FA-1F1F8','flag: United States',default,'{"US","flag","united states","usa","us","america"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"US","flag","united states","usa","us","america"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_us', '🇺🇸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('united_states', '🇺🇸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('usa', '🇺🇸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇺🇾','1F1FA-1F1FE','flag: Uruguay',default,'{"flag","UY"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","UY"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('uruguay', '🇺🇾') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_uy', '🇺🇾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇺🇿','1F1FA-1F1FF','flag: Uzbekistan',default,'{"flag","UZ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","UZ"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_uz', '🇺🇿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('uzbekistan', '🇺🇿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇻🇦','1F1FB-1F1E6','flag: Vatican City',default,'{"flag","VA"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","VA"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('vatican_city', '🇻🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_va', '🇻🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇻🇨','1F1FB-1F1E8','flag: St. Vincent & Grenadines',default,'{"flag","VC"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","VC"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('st_vincent_grenadines', '🇻🇨') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_vc', '🇻🇨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇻🇪','1F1FB-1F1EA','flag: Venezuela',default,'{"VE","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"VE","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ve', '🇻🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('venezuela', '🇻🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇻🇬','1F1FB-1F1EC','flag: British Virgin Islands',default,'{"flag","VG"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","VG"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('british_virgin_islands', '🇻🇬') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_vg', '🇻🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇻🇮','1F1FB-1F1EE','flag: U.S. Virgin Islands',default,'{"flag","VI"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","VI"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('us_virgin_islands', '🇻🇮') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_vi', '🇻🇮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇻🇳','1F1FB-1F1F3','flag: Vietnam',default,'{"flag","VN"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","VN"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_vn', '🇻🇳') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('vietnam', '🇻🇳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇻🇺','1F1FB-1F1FA','flag: Vanuatu',default,'{"VU","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"VU","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('vanuatu', '🇻🇺') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_vu', '🇻🇺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇼🇫','1F1FC-1F1EB','flag: Wallis & Futuna',default,'{"flag","WF"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","WF"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('wallis_futuna', '🇼🇫') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_wf', '🇼🇫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇼🇸','1F1FC-1F1F8','flag: Samoa',default,'{"flag","WS"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","WS"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ws', '🇼🇸') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('samoa', '🇼🇸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇽🇰','1F1FD-1F1F0','flag: Kosovo',default,'{"flag","XK"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","XK"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('kosovo', '🇽🇰') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_xk', '🇽🇰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇾🇪','1F1FE-1F1EA','flag: Yemen',default,'{"YE","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"YE","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_ye', '🇾🇪') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('yemen', '🇾🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇾🇹','1F1FE-1F1F9','flag: Mayotte',default,'{"YT","flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"YT","flag"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_yt', '🇾🇹') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('mayotte', '🇾🇹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇿🇦','1F1FF-1F1E6','flag: South Africa',default,'{"flag","ZA"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","ZA"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('south_africa', '🇿🇦') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_za', '🇿🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇿🇲','1F1FF-1F1F2','flag: Zambia',default,'{"flag","ZM"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","ZM"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('zambia', '🇿🇲') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_zm', '🇿🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇿🇼','1F1FF-1F1FC','flag: Zimbabwe',default,'{"flag","ZW"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","ZW"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('zimbabwe', '🇿🇼') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_zw', '🇿🇼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁧󠁢󠁥󠁮󠁧󠁿','1F3F4-E0067-E0062-E0065-E006E-E0067-E007F','flag: England',default,'{"flag","gbeng"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","gbeng"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('england', '🏴󠁧󠁢󠁥󠁮󠁧󠁿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('flag_gbeng', '🏴󠁧󠁢󠁥󠁮󠁧󠁿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁧󠁢󠁳󠁣󠁴󠁿','1F3F4-E0067-E0062-E0073-E0063-E0074-E007F','flag: Scotland',default,'{"flag","gbsct"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","gbsct"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_gbsct', '🏴󠁧󠁢󠁳󠁣󠁴󠁿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('scotland', '🏴󠁧󠁢󠁳󠁣󠁴󠁿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁧󠁢󠁷󠁬󠁳󠁿','1F3F4-E0067-E0062-E0077-E006C-E0073-E007F','flag: Wales',default,'{"flag","gbwls","dragon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"flag","gbwls","dragon"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('flag_gbwls', '🏴󠁧󠁢󠁷󠁬󠁳󠁿') on conflict do nothing;
insert into emoji.shortcodes (code, emoji) values ('wales', '🏴󠁧󠁢󠁷󠁬󠁳󠁿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E000','goldfish',default,'{"fish","goldfish","water"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fish","goldfish","water"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E001','donkey',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E002','poppy',default,'{"poppy","remembrance","veterans"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"poppy","remembrance","veterans"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E003','doe',default,'{"antler","hunt","forest","deer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"antler","hunt","forest","deer"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E004','spouting-orca',default,'{"whale","animal","killer whale","water","spouting","swim","blackfish","orca","cetacean"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"whale","animal","killer whale","water","spouting","swim","blackfish","orca","cetacean"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E005','orca',default,'{"whale","animal","killer whale","water","swim","blackfish","orca","cetacean"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"whale","animal","killer whale","water","swim","blackfish","orca","cetacean"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E006','narwhal',default,'{"whale","animal","water","swim","cetacean"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"whale","animal","water","swim","cetacean"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E007','beluga',default,'{"whale","animal","water","swim","cetacean"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"whale","animal","water","swim","cetacean"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E008','porpoise',default,'{"cetacean","animal","water","swim"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cetacean","animal","water","swim"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E009','pigeon',default,'{"bird","vermin","city","rock dove"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bird","vermin","city","rock dove"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E010','macaw',default,'{"tropical","parrots","jungle","exotic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tropical","parrots","jungle","exotic"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E011','microbe',default,'{"amoeba","bacteria","virus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"amoeba","bacteria","virus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E040','Twitter',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E041','pinterest',default,'{"social","platform","pins"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"social","platform","pins"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E042','facebook',default,'{"facebook","company","social-media"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"facebook","company","social-media"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E043','instagram',default,'{"instagram","facebook","company","social-media"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"instagram","facebook","company","social-media"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E044','youtube',default,'{"social","platform","brand","video"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"social","platform","brand","video"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E045','github',default,'{"code","platform","social","brand","git"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"code","platform","social","brand","git"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E046','linkedin',default,'{"business"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"business"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E047','android',default,'{"google play"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"google play"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E048','musicbrainz',default,'{"music metadata"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"music metadata"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E049','openfoodfact',default,'{"nutrition data"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"nutrition data"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E04A','openstreetmap',default,'{"map","osm","geodata"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"map","osm","geodata"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E04B','wikidata',default,'{"open knowledge graph"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"open knowledge graph"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E050','Firefox',default,'{"fire","fox","browser"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fire","fox","browser"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E051','Safari',default,'{"webkit","apple","compass","browser"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"webkit","apple","compass","browser"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E052','Opera',default,'{"browser"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"browser"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E053','Chromium',default,'{"browser"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"browser"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E054','Chrome',default,'{"google","browser"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"google","browser"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E055','Netscape Navigator',default,'{"browser"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"browser"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E056','Internet Explorer',default,'{"microsoft","ie","browser"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"microsoft","ie","browser"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E057','Edge',default,'{"microsoft","browser"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"microsoft","browser"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E058','iNaturalist',default,'{"nature","observation","opendata"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"nature","observation","opendata"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E059','gitlab',default,'{"code","git"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"code","git"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E05A','mastodon',default,'{"social media","twitter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"social media","twitter"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E05B','peertube',default,'{"social media","youtube"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"social media","youtube"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E05C','pixelfed',default,'{"social media","photo","image sharing platform"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"social media","photo","image sharing platform"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E05D','signal',default,'{"social media","messenger","whatsapp","app"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"social media","messenger","whatsapp","app"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E05E','element',default,'{"social media","messenger","whatsapp","app"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"social media","messenger","whatsapp","app"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E05F','jellyfin',default,'{"media","app"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"media","app"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E060','reddit',default,'{"social","discussion","app"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"social","discussion","app"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E061','discord',default,'{"video","social","voice","chat","app"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"video","social","voice","chat","app"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E062','c',default,'{"programming","c","language","logo","hexagon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"programming","c","language","logo","hexagon"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E063','cplusplus',default,'{"programming","c","language","logo","hexagon","cplusplus","plusplus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"programming","c","language","logo","hexagon","cplusplus","plusplus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E064','csharp',default,'{"programming","c","language","logo","sharp","hexagon","csharp"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"programming","c","language","logo","sharp","hexagon","csharp"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E065','chrome canary',default,'{"logo","canary","google","browser","chrome","brand"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"logo","canary","google","browser","chrome","brand"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E066','firefox developer',default,'{"logo","developer","browser","brand","fire","firefox","fox"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"logo","developer","browser","brand","fire","firefox","fox"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E067','firefox nightly',default,'{"logo","nightly","browser","brand","fire","firefox","fox"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"logo","nightly","browser","brand","fire","firefox","fox"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E068','javascript',default,'{"programming","language","logo","javascript","js"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"programming","language","logo","javascript","js"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E069','typescript',default,'{"programming","language","logo","typescript","ts"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"programming","language","logo","typescript","ts"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E06A','webassembly',default,'{"wasm","logo","webassembly","assembly","wa","browser","web"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wasm","logo","webassembly","assembly","wa","browser","web"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E06B','svg',default,'{"drawing","svg","vector","logo","vectorial"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"drawing","svg","vector","logo","vectorial"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E06C','markdown',default,'{"mark","markup","language","markdown","logo","md","down"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mark","markup","language","markdown","logo","md","down"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E06D','winrar',default,'{"rar","logo","win","winrar","brand"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rar","logo","win","winrar","brand"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0FF','ubuntu',default,'{"Linux"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"Linux"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','F000','windows',default,'{"Microsoft"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"Microsoft"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','F77A','artstation',default,'{"art","brand"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"art","brand"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','F8FF','apple',default,'{"OSX","iOS"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"OSX","iOS"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2C0','iceberg',default,'{"cold","ice","sea","Titanic","ship wreck"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cold","ice","sea","Titanic","ship wreck"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2C1','floating ice',default,'{"glacier","melt","sea","polar"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"glacier","melt","sea","polar"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2C2','floating ice broken',default,'{"glacier","melt","sea","polar"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"glacier","melt","sea","polar"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2C3','polar research station',default,'{"science","Neumayer station","arctic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"science","Neumayer station","arctic"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2C4','ice core sample',default,'{"polar","science","research","arctic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"polar","science","research","arctic"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2C6','ice shelf',default,'{"glacier","melt","sea","polar"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"glacier","melt","sea","polar"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2C7','ice shelf melting',default,'{"global","melt","glacier","warming","sea","climate"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"global","melt","glacier","warming","sea","climate"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2C8','polar explorer',default,'{"inuit","anorak with fur"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"inuit","anorak with fur"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2C9','polar explorer man',default,'{"research"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"research"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2CA','polar explorer woman',default,'{"research"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"research"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2CB','oil spill',default,'{"pollution","fossil","fuel","petrol"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pollution","fossil","fuel","petrol"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2CC','exhaust gases factory',default,'{"pollution","CO2","carbon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pollution","CO2","carbon"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2CD','solar energy',default,'{"clean","panel","power","sun","renewable"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"clean","panel","power","sun","renewable"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2CE','meat consumption',default,'{"carnivore"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"carnivore"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2CF','exhaust gases car',default,'{"pollution","CO2","carbon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pollution","CO2","carbon"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2D0','sea level rise',default,'{"sinking","tsunami","flood"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sinking","tsunami","flood"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2D1','wind energy',default,'{"renewable","turbine","power","clean"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"renewable","turbine","power","clean"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2D2','reusable bag',default,'{"nondisposable","tote","paper","recycle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"nondisposable","tote","paper","recycle"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2D3','radioactive waste',default,'{"nuclear","hazardous"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"nuclear","hazardous"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2D4','nuclear power plant',default,'{"cooling","stacks","reactor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cooling","stacks","reactor"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2D5','nuclear power plant ruin',default,'{"Fukushima","Chernobyl","reactor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"Fukushima","Chernobyl","reactor"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2D6','geiger counter',default,'{"radioactive","research","science","radiation"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"radioactive","research","science","radiation"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2D7','nuclear worker man',default,'{"protection suit","radiation"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"protection suit","radiation"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2D8','nuclear worker woman',default,'{"","protection suit","radiation"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"","protection suit","radiation"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2D9','nuclear protection',default,'{"radiation","suit","gas mask","nbc suit","hazmat"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"radiation","suit","gas mask","nbc suit","hazmat"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E2DA','atom bomb',default,'{"WW2","nuclear","nuke","radioactive"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"WW2","nuclear","nuke","radioactive"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E080','assembly point',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E081','assembly group',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E082','authority instruction',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E083','help others',default,'{"help elderly","help wheelchair"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"help elderly","help wheelchair"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E084','drop cover hold',default,'{"earthquake safety"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"earthquake safety"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E085','evacuate',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E086','evacuate vertical',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E087','evacuate downstairs',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E088','evacuate to shelter',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E089','structural fire',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E08A','wild fire',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E08B','evacuate fire',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E08C','warning tsunami',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E08D','warning volcano',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E08E','warning fire',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E08F','authority',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E090','first aid',default,'{"red cross"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"red cross"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E091','flagged point',default,'{"white flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"white flag"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E092','flagged building',default,'{"white flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"white flag"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E093','authority building',default,'{"white flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"white flag"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E094','signpost',default,'{"orientation","crossroad"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"orientation","crossroad"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E095','mobile info',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E096','mobile message',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E097','charge plug',default,'{"low battery"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"low battery"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E098','shelter',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E099','volcano eruption',default,'{"volcano fumarole"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"volcano fumarole"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E09A','volcano ashes',default,'{"volcano eruption"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"volcano eruption"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E09B','tsunami',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E09C','earthquake',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E09D','landslide',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E09E','avalanche',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E09F','flood',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0A0','north',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0A1','transmission',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0A2','sos stencil',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0A3','ok stencil',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0A4','no stencil',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0A5','warning strip',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0A6','warning strip right',default,'{"arrow"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"arrow"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0A7','arrow turn right',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0A8','emergency exit door',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0A9','location indicator red',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0AA','electric plug red',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0AB','timer',default,'{"alarm","clock"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alarm","clock"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0AC','person with medical mask',default,'{"COVID-19","coronavirus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"COVID-19","coronavirus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('‍♀️','E0AC-200D-2640-FE0F','woman with medical mask',default,'{"COVID-19","coronavirus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"COVID-19","coronavirus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('‍♂️','E0AC-200D-2642-FE0F','man with medical mask',default,'{"COVID-19","coronavirus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"COVID-19","coronavirus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0AD','person sneezing into elbow',default,'{"dab","COVID-19","coronavirus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dab","COVID-19","coronavirus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('‍♀️','E0AD-200D-2640-FE0F','woman sneezing into elbow',default,'{"dab","COVID-19","coronavirus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dab","COVID-19","coronavirus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('‍♂️','E0AD-200D-2642-FE0F','man sneezing into elbow',default,'{"dab","COVID-19","coronavirus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"dab","COVID-19","coronavirus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0AE','disinfect surface',default,'{"sanitize","clean","COVID-19","coronavirus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sanitize","clean","COVID-19","coronavirus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0AF','quarantine',default,'{"COVID-19","coronavirus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"COVID-19","coronavirus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0B0','social distancing',default,'{"COVID-19","coronavirus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"COVID-19","coronavirus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0B1','sanitizer spray',default,'{"disinfect","clean","COVID-19","coronavirus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"disinfect","clean","COVID-19","coronavirus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0B2','wash hands',default,'{"sanitize","clean","COVID-19","coronavirus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sanitize","clean","COVID-19","coronavirus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0B3','temperature taking',default,'{"thermometer","COVID-19","coronavirus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"thermometer","COVID-19","coronavirus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0B4','medical gloves',default,'{"COVID-19","coronavirus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"COVID-19","coronavirus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦🇶💎','1F1E6-1F1F6-1F48E','true south (antarctica) flag',default,'{"antarctica","antarctica flag","antarctic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"antarctica","antarctica flag","antarctic"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳🟦🟩🟨','1F3F3-1F7E6-1F7E9-1F7E8','berber flag',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️','1F3F3-FE0F','white flag',default,'{"surrender"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"surrender"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️‍📌‍⚙️','1F3F3-FE0F-200D-1F4CC-200D-2699-FE0F','nail and gear flag',default,'{"CGP Grey","Brady Haran","Hello Internet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"CGP Grey","Brady Haran","Hello Internet"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️‍🟥','1F3F3-FE0F-200D-1F7E5','red flag',default,'{"socialism","communism"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"socialism","communism"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️‍🟦','1F3F3-FE0F-200D-1F7E6','blue flag',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️‍🟦‍🌌','1F3F3-FE0F-200D-1F7E6-200D-1F30C','united federation of planets flag (star trek)',default,'{"space","Star Trek","trekkie","utopia","trekker","future"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"space","Star Trek","trekkie","utopia","trekker","future"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️‍🟧','1F3F3-FE0F-200D-1F7E7','orange flag',default,'{"Christian democracy","maratha","pirate party"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"Christian democracy","maratha","pirate party"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️‍🟨','1F3F3-FE0F-200D-1F7E8','yellow flag',default,'{"Quebec","yellow jack"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"Quebec","yellow jack"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️‍🟩','1F3F3-FE0F-200D-1F7E9','green flag',default,'{"green party","environmentalism"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"green party","environmentalism"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️‍🟩‍⭐‍🟩','1F3F3-FE0F-200D-1F7E9-200D-2B50-200D-1F7E9','esperanto flag',default,'{"Zamenhof","constructed"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"Zamenhof","constructed"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️‍🟪','1F3F3-FE0F-200D-1F7EA','purple flag',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏳️‍🟫','1F3F3-FE0F-200D-1F7EB','brown flag',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴️‍🅰️','1F3F4-FE0F-200D-1F170-FE0F','red and black flag',default,'{"anarchist flag","bisected flag"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"anarchist flag","bisected flag"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚑️‍🟥','2691-FE0F-200D-1F7E5','deep red flag',default,'{"socialism","communism"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"socialism","communism"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚑️‍🟦','2691-FE0F-200D-1F7E6','deep blue flag',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚑️‍🟧','2691-FE0F-200D-1F7E7','deep orange flag',default,'{"Christian democracy","maratha","pirate party"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"Christian democracy","maratha","pirate party"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚑️‍🟨','2691-FE0F-200D-1F7E8','deep yellow flag',default,'{"Quebec","yellow jack"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"Quebec","yellow jack"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚑️‍🟩','2691-FE0F-200D-1F7E9','deep green flag',default,'{"green party","environmentalism"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"green party","environmentalism"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚑️‍🟩‍★️','2691-FE0F-200D-1F7E9-200D-2605-FE0F','browncoat flag',default,'{"Firefly","independent planets","Serenity"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"Firefly","independent planets","Serenity"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚑️‍🟪','2691-FE0F-200D-1F7EA','deep purple flag',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⚑️‍🟫','2691-FE0F-200D-1F7EB','deep brown flag',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0C0','half orange fruit',default,'{"citrus fruits","half"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"citrus fruits","half"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0C1','maultasche',default,'{"schwaebisch","germany","meal","schwäbisch","swabian"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"schwaebisch","germany","meal","schwäbisch","swabian"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0C2','lentils with spaetzle',default,'{"schwäbisch","swabian","germany","meal"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"schwäbisch","swabian","germany","meal"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0C3','pretzel',default,'{"schwaebisch","brezel","germany","schwäbisch","swabian"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"schwaebisch","brezel","germany","schwäbisch","swabian"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0C4','pomegranate',default,'{"seeds","fruit","pomegranate"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"seeds","fruit","pomegranate"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0C5','latte macchiato',default,'{"coffee"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"coffee"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0C6','roasted coffee bean',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0C7','cake',default,'{"custard","cherry"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"custard","cherry"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0C8','champignon brown',default,'{"mushroom fungi"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mushroom fungi"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0C9','champignon white',default,'{"mushroom fungi"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mushroom fungi"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0CA','boule bread',default,'{"french bread","round bread","traditional bread"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"french bread","round bread","traditional bread"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0CB','glass bottle',default,'{"water bottle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"water bottle"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E0CC','plastic bottle',default,'{"water bottle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"water bottle"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E340','gardener man',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E341','gardener woman',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E342','gardening gloves',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E343','lawn mower',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E344','wheelbarrow',default,'{"pushcart"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pushcart"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E345','spade',default,'{"shovel"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"shovel"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E346','trowel',default,'{"shovel"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"shovel"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E347','axe',default,'{"chop","stump","wood"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"chop","stump","wood"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E348','saw',default,'{"rip saw","carpentry","foxtail","wood","branch"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rip saw","carpentry","foxtail","wood","branch"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E300','female doctor',default,'{"surgery","hospital","care"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"surgery","hospital","care"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E301','male doctor',default,'{"surgery","hospital","care"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"surgery","hospital","care"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E302','female nurse',default,'{"surgery","hospital","care"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"surgery","hospital","care"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E303','male nurse',default,'{"surgery","hospital","care"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"surgery","hospital","care"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E305','pills',default,'{"drug","pain killers","medicine","tablets"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"drug","pain killers","medicine","tablets"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E306','plaster',default,'{"plaster","band aid","patch","dressing","wound","bandage"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"plaster","band aid","patch","dressing","wound","bandage"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E307','medication',default,'{"drug","pain killers","medicine","tablets"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"drug","pain killers","medicine","tablets"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E308','ecg waves',default,'{"hospital","beat","heartbeats","electrocardiogram"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hospital","beat","heartbeats","electrocardiogram"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E309','first aid bag',default,'{"medicine","briefcase","kit"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"medicine","briefcase","kit"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E30A','patient file',default,'{"filing","record","hospital"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"filing","record","hospital"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E30B','patient clipboard',default,'{"transcript","hospital","notes"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"transcript","hospital","notes"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E30C','saline drip',default,'{"bag","hospital"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bag","hospital"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E30D','blood transfusion',default,'{"bleeding","loss","medical"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bleeding","loss","medical"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E30E','swab pliers',default,'{"surgery","scissors"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"surgery","scissors"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E30F','hot-water bottle',default,'{"comfort","warm","cramps","period"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"comfort","warm","cramps","period"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E312','liver',default,'{"bile","toxins","organ"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bile","toxins","organ"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E313','stomach',default,'{"digestion","bile","acid","gut"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"digestion","bile","acid","gut"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E314','large intestine',default,'{"organ","colon","gut"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"organ","colon","gut"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E315','intestine',default,'{"digestion","organ","colon","gut"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"digestion","organ","colon","gut"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E316','kidney',default,'{"urine","toxins","organ","blood"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"urine","toxins","organ","blood"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E318','forceps',default,'{"surgery","tweezers","tongs"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"surgery","tweezers","tongs"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E319','brain',default,'{"cortex","grey matter","IQ","intelligence"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cortex","grey matter","IQ","intelligence"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E31A','bed linen',default,'{"bedding","hospital","sheets"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bedding","hospital","sheets"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E31B','bandage change',default,'{"gauze","wound","dressing","hospital"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gauze","wound","dressing","hospital"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E31C','eye pain',default,'{"migraine","sore","headache","strain"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"migraine","sore","headache","strain"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E31D','headache',default,'{"migraine","sore","tension","stress"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"migraine","sore","tension","stress"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E31E','earache',default,'{"sore","headache","tinnitus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sore","headache","tinnitus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E31F','fracture leg',default,'{"broken","cast","bone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"broken","cast","bone"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E320','knee pain',default,'{"ache","patella","ACL"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ache","patella","ACL"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E321','backache',default,'{"lumbar","pain","ache","spine"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"lumbar","pain","ache","spine"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E322','joint pain',default,'{"cartilage","ache","strain","arthritis"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cartilage","ache","strain","arthritis"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E324','clinical thermometer',default,'{"fever","mercury","temperature","heat"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"fever","mercury","temperature","heat"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E325','bandage scissors',default,'{"gauze","dressing","hospital"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gauze","dressing","hospital"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E326','crutches',default,'{"broken leg","accessibility","walk"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"broken leg","accessibility","walk"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E327','wheel chair',default,'{"disability","DACA","accessibility","mobility"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"disability","DACA","accessibility","mobility"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E328','stretcher',default,'{"ambulance","gurney","hospital","patient"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ambulance","gurney","hospital","patient"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E329','ct scan',default,'{"cancer","cat","MRI","tumour"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"cancer","cat","MRI","tumour"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E32B','scales',default,'{"weight","BMI","mass","heavy"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"weight","BMI","mass","heavy"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E100','tap',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E101','double tap',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E102','three finger operation',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E103','move',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E104','scroll',default,'{"wheel","vertical","y-axis","movement","down","mouse","up"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wheel","vertical","y-axis","movement","down","mouse","up"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E105','swipe',default,'{"sideways","move","hand","finger","app","swipe"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sideways","move","hand","finger","app","swipe"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E106','scroll horizontal',default,'{"scrollwheel","scrolling","move","x-axis","mouse"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"scrollwheel","scrolling","move","x-axis","mouse"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E107','page move',default,'{"right","site","next","paper","previous","left","document","movement"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"right","site","next","paper","previous","left","document","movement"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E108','swipe left',default,'{"gesture","touch","x-axis","left","hand","movement","finger","app"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gesture","touch","x-axis","left","hand","movement","finger","app"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E109','swipe up',default,'{"gesture","touch","up","hand","y-axis","movement","finger","app"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gesture","touch","up","hand","y-axis","movement","finger","app"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E10A','swipe right',default,'{"right","gesture","touch","x-axis","hand","movement","finger","app"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"right","gesture","touch","x-axis","hand","movement","finger","app"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E10B','swipe down',default,'{"gesture","touch","hand","y-axis","movement","down","finger","app"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gesture","touch","hand","y-axis","movement","down","finger","app"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E10C','finger pushing button',default,'{"alarm","launch","stop","nuclear missile","red","pressing","pushing","start"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alarm","launch","stop","nuclear missile","red","pressing","pushing","start"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E10D','exit',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E140','first aid kit',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E141','armchair',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E142','picture',default,'{"landscape","picture","photo","frame"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"landscape","picture","photo","frame"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E143','lighter',default,'{"lighter","bic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"lighter","bic"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E144','outlet',default,'{"outlet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"outlet"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E145','guy fawkes mask',default,'{"vendetta","guy","mask","fawkes","anonymous"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"vendetta","guy","mask","fawkes","anonymous"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E146','spätzlepresse',default,'{"schwaebisch","germany","schwäbisch","spätzle","swabian"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"schwaebisch","germany","schwäbisch","spätzle","swabian"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E147','european name badge',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E148','kehrwoche',default,'{"schwaebisch","germany","broom","schwäbisch","swabian"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"schwaebisch","germany","broom","schwäbisch","swabian"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E149','tardis',default,'{"police booth","time machine","police box","doctor who"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"police booth","time machine","police box","doctor who"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E14A','motorbike helmet',default,'{"motorbike","helmet","motor","motorcycle"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"motorbike","helmet","motor","motorcycle"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E150','espresso machine',default,'{"coffee"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"coffee"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E151','french press',default,'{"coffee"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"coffee"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E152','moka pot',default,'{"coffee"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"coffee"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E153','milk jug',default,'{"latte","coffee"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"latte","coffee"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E154','electric coffee percolator',default,'{"burned coffee"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"burned coffee"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E155','drip coffee maker',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E156','coffee grinder',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E157','horse jumping hurdle',default,'{"equestrian"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"equestrian"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👨‍🪩','1F468-200D-1FAA9','dj man',default,'{"disc jockey","techno","rave","Diskjockey","party","music"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"disc jockey","techno","rave","Diskjockey","party","music"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('👩‍🪩','1F469-200D-1FAA9','dj woman',default,'{"disc jockey","techno","rave","Diskjockey","party","music"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"disc jockey","techno","rave","Diskjockey","party","music"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🧑‍🪩','1F9D1-200D-1FAA9','dj',default,'{"disc jockey","techno","rave","Diskjockey","party","music"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"disc jockey","techno","rave","Diskjockey","party","music"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E181','drunk person',default,'{"person-gesture","person","drinking","drunk","person-sport","person-activity","party","beer","alcohol"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"person-gesture","person","drinking","drunk","person-sport","person-activity","party","beer","alcohol"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E182','person with dog',default,'{"person","animal","person-activity","walking","dog","pet"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"person","animal","person-activity","walking","dog","pet"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E183','trump',default,'{"donald","president","usa","america","trump"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"donald","president","usa","america","trump"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E184','horse riding',default,'{"equestrian"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"equestrian"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E185','barista',default,'{"person"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"person"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E186','man barista',default,'{"male"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"male"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E187','woman barista',default,'{"female"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"female"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E188','Greta Thunberg',default,'{"Sweden","climate change","Fridays for Future","activist","FFF"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"Sweden","climate change","Fridays for Future","activist","FFF"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E189','windsurfing',default,'{"windsurfing","wave","watersport","sea","surf"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"windsurfing","wave","watersport","sea","surf"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E280','exhausted face',default,'{"exhausted","sleepy","face","tired"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"exhausted","sleepy","face","tired"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E281','incredulous face',default,'{"shocked","disbelief","incredulous"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"shocked","disbelief","incredulous"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E282','dejected face',default,'{"._.","pensive","sigh","disappointed"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"._.","pensive","sigh","disappointed"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E283','annoyed face with tongue',default,'{"annoyed","goofy","playful","frustrated","childish","offended","tongue out","disappointed"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"annoyed","goofy","playful","frustrated","childish","offended","tongue out","disappointed"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🯆‍👗','1FBC6-200D-1F457','stick figure with dress and arms raised',default,'{"legacy computing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"legacy computing"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🯇‍👗','1FBC7-200D-1F457','stick figure with dress leaning left',default,'{"legacy computing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"legacy computing"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🯈‍👗','1FBC8-200D-1F457','stick figure with dress leaning right',default,'{"legacy computing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"legacy computing"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬡️‍🌈','2B21-FE0F-200D-1F308','rainbow hexagon',default,'{"pride"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pride"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬡️‍🟥','2B21-FE0F-200D-1F7E5','red hexagon',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬡️‍🟦','2B21-FE0F-200D-1F7E6','blue hexagon',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬡️‍🟧','2B21-FE0F-200D-1F7E7','orange hexagon',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬡️‍🟨','2B21-FE0F-200D-1F7E8','yellow hexagon',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬡️‍🟩','2B21-FE0F-200D-1F7E9','green hexagon',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬡️‍🟪','2B21-FE0F-200D-1F7EA','purple hexagon',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬡️‍🟫','2B21-FE0F-200D-1F7EB','brown hexagon',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E380','no handshaking',default,'{"agreement","meeting","germs","hygiene","spread","virus"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"agreement","meeting","germs","hygiene","spread","virus"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E381','web syndication',default,'{"feed","atom feed","podcast","subscribe","RSS","web feed"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"feed","atom feed","podcast","subscribe","RSS","web feed"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◉️‍🔴','25C9-FE0F-200D-1F534','red eye',default,'{"rogue AI","Portal","turret","AI"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"rogue AI","Portal","turret","AI"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◉️‍🔴‍▮️','25C9-FE0F-200D-1F534-200D-25AE-FE0F','HAL 9000',default,'{"I''m sorry Dave","AI","Space Odyssey","rogue AI","artificial intelligence","science fiction","film","movie","Stanley Kubrick","2001","I''m afraid I can''t do that"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"I''m sorry Dave","AI","Space Odyssey","rogue AI","artificial intelligence","science fiction","film","movie","Stanley Kubrick","2001","I''m afraid I can''t do that"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1C0','wireframes',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1C1','code editor',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1C2','autonomous car',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1C3','switch',default,'{"right","changeover switch","toggling","exchange counter","left"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"right","changeover switch","toggling","exchange counter","left"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1C4','surveillance',default,'{"CCTV","camera","surveillance"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"CCTV","camera","surveillance"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1C6','augmented reality',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1C7','led',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1C8','motor',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1C9','raspberry pi',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1CA','virtual reality',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1CB','cable',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1CC','tablet',default,'{"ipad","portable","screen","technology","phablet","device"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ipad","portable","screen","technology","phablet","device"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1CD','gps',default,'{"signal","where","location","navigation","wireless","crosshair","localization","reception"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"signal","where","location","navigation","wireless","crosshair","localization","reception"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1CE','smartwatch',default,'{"armlet","clock","apps","monitor","intelligent","device"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"armlet","clock","apps","monitor","intelligent","device"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1CF','washing machine',default,'{"appliance","home electronics","clothing","garment","cleaner"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"appliance","home electronics","clothing","garment","cleaner"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1D0','ibeacon',default,'{"iot","internet of things","navigation","wireless","antenna","connection","technology","localization","reception"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"iot","internet of things","navigation","wireless","antenna","connection","technology","localization","reception"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1D1','keyboard',default,'{"keyboard","type","key"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"keyboard","type","key"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1D2','drone',default,'{"RC","quadcopter","UAV","drone"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"RC","quadcopter","UAV","drone"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1D3','arduino',default,'{"arduino","electric","prototyping","sensor"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"arduino","electric","prototyping","sensor"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1D4','wire',default,'{"wire","electric","cord","litz-wire"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"wire","electric","cord","litz-wire"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1D5','potentiometer',default,'{"potentiometer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"potentiometer"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1D6','solar cell',default,'{"module","photovoltaic","cell","solar"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"module","photovoltaic","cell","solar"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1D7','circuit',default,'{"circuit","electric","prototype"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"circuit","electric","prototype"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1D8','qr code',default,'{"tag","matrix","scan","quick response","barcode"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"tag","matrix","scan","quick response","barcode"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E1D9','barcode',default,'{"scan","tag","data","machine readable"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"scan","tag","data","machine readable"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E200','cafeteria',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E201','emergency exit',default,'{"alarm","person","signage","humans","route","people","escape","fire","guidance","way","run"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alarm","person","signage","humans","route","people","escape","fire","guidance","way","run"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E202','stairway',default,'{"descend","walk","steps","ascend","down","up"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"descend","walk","steps","ascend","down","up"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E203','town',default,'{"city","town","village"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"city","town","village"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E204','elevator',default,'{"elevator"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"elevator"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E205','eiffel tower',default,'{"paris","france","tower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"paris","france","tower"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E206','parking garage',default,'{"vehicle","car","automobile","p","sign","traffic sign","parking lot"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"vehicle","car","automobile","p","sign","traffic sign","parking lot"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E207','schwäbisch gmünd forum gold und silber',default,'{"schwaebisch","schwaebisch gmuend","germany","schwäbisch","swabian"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"schwaebisch","schwaebisch gmuend","germany","schwäbisch","swabian"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E208','schwäbisch gmünd fünfknopfturm',default,'{"schwaebisch gmuend","tower"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"schwaebisch gmuend","tower"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E209','schwäbisch gmünd ratshaus',default,'{"schwaebisch gmuend","town hall"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"schwaebisch gmuend","town hall"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E20A','stuttgart fernsehturm',default,'{"schwäbisch","swabian","germany","schwaebisch"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"schwäbisch","swabian","germany","schwaebisch"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E20B','space shuttle',default,'{"nasa","transportation","space","galaxy","alien","adventure","shuttle","rocket"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"nasa","transportation","space","galaxy","alien","adventure","shuttle","rocket"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E20C','viennese coffee house',default,'{"viennese coffee culture"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"viennese coffee culture"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E20D','black hole',default,'{"interstellar","event horizon","accretion disc"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"interstellar","event horizon","accretion disc"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E20E','foggy mountain',default,'{"weather","peak","fog","elevation","berg","hiking"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"weather","peak","fog","elevation","berg","hiking"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E20F','great pyramid of giza',default,'{"seven wonders of the ancient world","egypt"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"seven wonders of the ancient world","egypt"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E210','colossus of rhodes',default,'{"seven wonders of the ancient world","greece"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"seven wonders of the ancient world","greece"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E211','hanging gardens of babylon',default,'{"seven wonders of the ancient world","iraq"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"seven wonders of the ancient world","iraq"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E212','lighthouse of alexandria',default,'{"seven wonders of the ancient world","egypt"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"seven wonders of the ancient world","egypt"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E213','mausoleum at halicarnassus',default,'{"seven wonders of the ancient world","turkey"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"seven wonders of the ancient world","turkey"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E214','statue of zeus at olympia',default,'{"seven wonders of the ancient world","greece"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"seven wonders of the ancient world","greece"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E215','temple of artemis at ephesus',default,'{"seven wonders of the ancient world","turkey"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"seven wonders of the ancient world","turkey"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E216','moai',default,'{"stone","easter island"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"stone","easter island"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E240','mark',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E241','toggle button',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E242','location indicator',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E243','scale',default,'{"inches","meters","size","miles","kilometers","measurement","distance","scaling"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"inches","meters","size","miles","kilometers","measurement","distance","scaling"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E244','locomotion',default,'{"driving","destination","end","track","distance","transport","movement","start"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"driving","destination","end","track","distance","transport","movement","start"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E245','toggle button state B',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E246','people dialogue',default,'{"two","humans","conversation","face-to-face","users","talking","communication","chatting"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"two","humans","conversation","face-to-face","users","talking","communication","chatting"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E247','safety',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E248','chats',default,'{"messaging","write","message","typing","text","writing","dialog"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"messaging","write","message","typing","text","writing","dialog"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E249','collaboration',default,'{"work","team","teamwork","group","circle","communication","collab"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"work","team","teamwork","group","circle","communication","collab"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E24A','interview',default,'{"bubble","speak","interview","talk"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bubble","speak","interview","talk"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E24B','intricate',default,'{"abstract","intricate"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"abstract","intricate"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E24C','simple',default,'{"simple","abstract"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"simple","abstract"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E24D','return',default,'{"back button"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"back button"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E24E','close',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E24F','forward',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E250','hamburger menu',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E251','upload',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E252','download',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E253','share',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E254','wifi',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E255','copy',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E256','contacts',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E257','filter',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E258','cursor',default,'{"pointer"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"pointer"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E259','details',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E25A','hold',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E25B','duplicate',default,'{"make copy","page","create","file","document","second"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"make copy","page","create","file","document","second"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E25C','save',default,'{"hdd","record","hard drive","harddisk","store","download"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"hdd","record","hard drive","harddisk","store","download"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E25D','edit',default,'{"page","write","change","pencil","file","document","writing","editing","scribble"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"page","write","change","pencil","file","document","writing","editing","scribble"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E25E','home button',default,'{"website","page","navigation","internet","main","homepage","house","ui","symbol","app"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"website","page","navigation","internet","main","homepage","house","ui","symbol","app"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E25F','add button',default,'{"create","new","more","plus","set","file"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"create","new","more","plus","set","file"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E260','archive',default,'{"drawer","library","save to","cupboard","save"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"drawer","library","save to","cupboard","save"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E261','overview',default,'{"overview","list","lines"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"overview","list","lines"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E262','delete',default,'{"remove","bin","waste","delete"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"remove","bin","waste","delete"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E263','comment',default,'{"comment","write"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"comment","write"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E264','more information',default,'{"more","add","plus","cross"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"more","add","plus","cross"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E265','sort',default,'{"sort","hierarchy","list"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sort","hierarchy","list"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E266','inbox',default,'{"inbox","in","entrance"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"inbox","in","entrance"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E267','compose',default,'{"compose","write","author"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"compose","write","author"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E268','add contact',default,'{"add","contact"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"add","contact"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('','E269','link',default,'{"chain","link"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"chain","link"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫙‍🟥','1FAD9-200D-1F7E5','jar with red content',default,'{"jelly","red potion","jam","health potion"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"jelly","red potion","jam","health potion"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫙‍🟦','1FAD9-200D-1F7E6','jar with blue content',default,'{"mana potion","magic potion","blue potion","water"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mana potion","magic potion","blue potion","water"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫙‍🟧','1FAD9-200D-1F7E7','jar with orange content',default,'{"jelly","marmelade"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"jelly","marmelade"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫙‍🟨','1FAD9-200D-1F7E8','jar with yellow content',default,'{"urine","marmelade"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"urine","marmelade"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫙‍🟩','1FAD9-200D-1F7E9','jar with green content',default,'{"kiwi jam"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"kiwi jam"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫙‍🟪','1FAD9-200D-1F7EA','jar with purple content',default,'{"jam","potion of health and magic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"jam","potion of health and magic"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🫙‍🟫','1FAD9-200D-1F7EB','jar with brown content',default,'{"nut spread","chocolate","peanut butter","nutella"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"nut spread","chocolate","peanut butter","nutella"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇦','1F1E6','regional indicator A',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_a', '🇦') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇧','1F1E7','regional indicator B',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_b', '🇧') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇨','1F1E8','regional indicator C',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_c', '🇨') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇩','1F1E9','regional indicator D',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_d', '🇩') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇪','1F1EA','regional indicator E',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_e', '🇪') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇫','1F1EB','regional indicator F',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_f', '🇫') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇬','1F1EC','regional indicator G',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_g', '🇬') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇭','1F1ED','regional indicator H',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_h', '🇭') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇮','1F1EE','regional indicator I',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_i', '🇮') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇯','1F1EF','regional indicator J',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_j', '🇯') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇰','1F1F0','regional indicator K',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_k', '🇰') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇱','1F1F1','regional indicator L',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_l', '🇱') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇲','1F1F2','regional indicator M',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_m', '🇲') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇳','1F1F3','regional indicator N',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_n', '🇳') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇴','1F1F4','regional indicator O',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_o', '🇴') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇵','1F1F5','regional indicator P',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_p', '🇵') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇶','1F1F6','regional indicator Q',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_q', '🇶') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇷','1F1F7','regional indicator R',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_r', '🇷') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇸','1F1F8','regional indicator S',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_s', '🇸') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇹','1F1F9','regional indicator T',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_t', '🇹') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇺','1F1FA','regional indicator U',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_u', '🇺') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇻','1F1FB','regional indicator V',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_v', '🇻') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇼','1F1FC','regional indicator W',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_w', '🇼') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇽','1F1FD','regional indicator X',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_x', '🇽') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇾','1F1FE','regional indicator Y',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_y', '🇾') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🇿','1F1FF','regional indicator Z',default,'{"alphabet","type","upper case","letter"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"alphabet","type","upper case","letter"}', skintones = EXCLUDED.skintones;
insert into emoji.shortcodes (code, emoji) values ('regional_indicator_z', '🇿') on conflict do nothing;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁣󠁡󠁱󠁣󠁿','1F3F4-E0063-E0061-E0071-E0063-E007F','quebec flag',default,'{"canada","province","fleur-de-lis","quebec"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"canada","province","fleur-de-lis","quebec"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁤󠁥󠁢󠁥󠁿','1F3F4-E0064-E0065-E0062-E0065-E007F','berlin flag',default,'{"capital","city","bear"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"capital","city","bear"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁤󠁥󠁢󠁹󠁿','1F3F4-E0064-E0065-E0062-E0079-E007F','bavaria flag',default,'{"lozenge","state"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"lozenge","state"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁥󠁳󠁡󠁲󠁿','1F3F4-E0065-E0073-E0061-E0072-E007F','aragon flag',default,'{"aragon","arago"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"aragon","arago"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁥󠁳󠁡󠁳󠁿','1F3F4-E0065-E0073-E0061-E0073-E007F','asturian flag',default,'{"asturian","asturina"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"asturian","asturina"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁥󠁳󠁣󠁴󠁿','1F3F4-E0065-E0073-E0063-E0074-E007F','catalonia flag',default,'{"catalan","senyera"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"catalan","senyera"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁥󠁳󠁩󠁢󠁿','1F3F4-E0065-E0073-E0069-E0062-E007F','balearic islands flag',default,'{"balearic","islands","balears","illes"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"balearic","islands","balears","illes"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁥󠁳󠁭󠁣󠁿','1F3F4-E0065-E0073-E006D-E0063-E007F','murcia flag',default,'{"region","murcia"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"region","murcia"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁥󠁳󠁰󠁶󠁿','1F3F4-E0065-E0073-E0070-E0076-E007F','basque flag',default,'{"ikurrina","euskal","basque"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"ikurrina","euskal","basque"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁥󠁳󠁶󠁣󠁿','1F3F4-E0065-E0073-E0076-E0063-E007F','valencian community flag',default,'{"valenciana","comunitat","valencian","valencia","reial","community","senyera"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"valenciana","comunitat","valencian","valencia","reial","community","senyera"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁦󠁲󠁢󠁲󠁥󠁿','1F3F4-E0066-E0072-E0062-E0072-E0065-E007F','bretagne flag',default,'{"gwenn-ha-du","brittany","breton"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"gwenn-ha-du","brittany","breton"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁵󠁳󠁣󠁡󠁿','1F3F4-E0075-E0073-E0063-E0061-E007F','california flag',default,'{"bear","state","republic"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"bear","state","republic"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁵󠁳󠁣󠁯󠁿','1F3F4-E0075-E0073-E0063-E006F-E007F','colorado flag',default,'{"mountains","colorado","state"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"mountains","colorado","state"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁵󠁳󠁴󠁸󠁿','1F3F4-E0075-E0073-E0074-E0078-E007F','texas flag',default,'{"republic","cowboy","state","lone star"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"republic","cowboy","state","lone star"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🏴󠁷󠁤󠁣󠁿','1F3F4-E0077-E0064-E0063-E007F','Washington D.C.',default,'{"Washington DC"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"Washington DC"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('-','002D','hyphen-minus',default,'{"minus","hyphen","dash","line"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"minus","hyphen","dash","line"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🄍','1F10D','circled zero with slash',default,'{"public domain","creative commons","license","libre","open","copyright"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"public domain","creative commons","license","libre","open","copyright"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🄎','1F10E','circled anticlockwise arrow',default,'{"creative commons","license","libre","share alike","open","copyright"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"creative commons","license","libre","share alike","open","copyright"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🄏','1F10F','circled dollar sign with overlaid backslash',default,'{"creative commons","license","non commercial","libre","open","copyright"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"creative commons","license","non commercial","libre","open","copyright"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🄯','1F12F','copyleft symbol',default,'{"reciprocal","open source","libre","free"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"reciprocal","open source","libre","free"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🅭','1F16D','circled cc',default,'{"public domain","creative commons","license","libre","open","copyright"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"public domain","creative commons","license","libre","open","copyright"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🅮','1F16E','circled c with overlaid backslash',default,'{"public domain","creative commons","license","libre","open","copyright"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"public domain","creative commons","license","libre","open","copyright"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🅯','1F16F','circled human figure',default,'{"credit","creative commons","license","attribution","libre","by","open","copyright"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"credit","creative commons","license","attribution","libre","by","open","copyright"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🉠','1F260','rounded symbol for fu',default,'{"religion","福","ideograph","chinese","luck"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"religion","福","ideograph","chinese","luck"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🉡','1F261','rounded symbol for lu',default,'{"religion","禄","ideograph","prosperity","祿","chinese"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"religion","禄","ideograph","prosperity","祿","chinese"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🉢','1F262','rounded symbol for shou',default,'{"religion","ideograph","壽","longevity","chinese","寿"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"religion","ideograph","壽","longevity","chinese","寿"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🉣','1F263','rounded symbol for xi',default,'{"religion","ideograph","喜","happiness","chinese"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"religion","ideograph","喜","happiness","chinese"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🉤','1F264','rounded symbol for shuangxi',default,'{"religion","囍","love and marriage","ideograph","double happiness","chinese"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"religion","囍","love and marriage","ideograph","double happiness","chinese"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🉥','1F265','rounded symbol for cai',default,'{"religion","財","wealth","ideograph","chinese","财"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"religion","財","wealth","ideograph","chinese","财"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🐱‍💻','1F431-200D-1F4BB','hacker cat',default,'{"code","computer","notebook","developer","smart","software","technologist","clever","coder"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"code","computer","notebook","developer","smart","software","technologist","clever","coder"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🯅','1FBC5','stick figure',default,'{"legacy computing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"legacy computing"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🯆','1FBC6','stick figure with arms raised',default,'{"legacy computing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"legacy computing"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🯇','1FBC7','stick figure leaning left',default,'{"legacy computing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"legacy computing"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🯈','1FBC8','stick figure leaning right',default,'{"legacy computing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"legacy computing"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('🯉','1FBC9','stick figure with dress',default,'{"legacy computing"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"legacy computing"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('℗','2117','sound recording copyright',default,'{"phonogram","music","trademark"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"phonogram","music","trademark"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('℠','2120','service mark',default,'{"sm","trademark"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"sm","trademark"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⊜','229C','circled equals',default,'{"creative commons","license","libre","open","copyright"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"creative commons","license","libre","open","copyright"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏻','23FB','power symbol',default,'{"off","on","enable"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"off","on","enable"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏼','23FC','power on-off symbol',default,'{"off","disable","on","enable"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"off","disable","on","enable"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏽','23FD','power on symbol',default,'{"on","I","enable"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"on","I","enable"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⏾','23FE','power sleep symbol',default,'{"standby","crescent moon","sleep"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"standby","crescent moon","sleep"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('□','25A1','white square',default,'{"missing glyph"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"missing glyph"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('▬','25AC','black rectangle',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('▭','25AD','white rectangle',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('▮','25AE','black vertical rectangle',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◉','25C9','fisheye',default,'{"iris"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"iris"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◐','25D0','circle with left half black',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◑','25D1','circle with right half black',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◧','25E7','square with left half black',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◨','25E8','square with right half black',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◩','25E9','square with upper left diagonal black',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◪','25EA','square with lower right diagonal black',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◭','25ED','up-pointing triangle with left half black',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('◮','25EE','up-pointing triangle with right half black',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('★','2605','black star',default,'{"full star"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"full star"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬌','2B0C','left right black arrow',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬍','2B0D','up down black arrow',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬟','2B1F','black pentagon',default,'{"equilateral polygon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"equilateral polygon"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬠','2B20','white pentagon',default,'{"equilateral polygon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"equilateral polygon"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬡','2B21','white hexagon',default,'{"equilateral polygon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"equilateral polygon"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬢','2B22','black hexagon',default,'{"equilateral polygon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"equilateral polygon"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬣','2B23','horizontal black hexagon ',default,'{"equilateral polygon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"equilateral polygon"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬤','2B24','black large circle',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬮','2B2E','black vertical ellipse',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⬯','2B2F','white vertical ellipse',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⭘','2B58','heavy circle',default,'{"O","off","power off","disable"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"O","off","power off","disable"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⮏','2B8F','anticlockwise triangle-headed top u-shaped arrow',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⮺','2BBA','overlapping white squares',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⮻','2BBB','overlapping white and black squares',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⮼','2BBC','overlapping black squares',default,default,default) on conflict (emoji) do update set tags = EXCLUDED.tags, skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⯃','2BC3','horizontal black octagon',default,'{"equilateral polygon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"equilateral polygon"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⯄','2BC4','black octagon',default,'{"equilateral polygon"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"equilateral polygon"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⯪','2BEA','star with left half black',default,'{"half star"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"half star"}', skintones = EXCLUDED.skintones;
insert into emoji.definitions (emoji,hex,annotation,base_emoji,tags,skintones) values ('⯫','2BEB','star with right half black',default,'{"half star"}',default) on conflict (emoji) do update set tags = EXCLUDED.tags || '{"half star"}', skintones = EXCLUDED.skintones;

-- deduplicate rows, because we concatenated arrays for tags & skintones but that doesn't guarantee any uniqueness
update emoji.definitions set tags = array(select distinct t from unnest(tags) t),skintones = array(select distinct s from unnest(skintones) s);
